#-------------------------------------
# Document Change Log
# 0.2.2
#     - No Changes
# 0.2.1
#     - Added SEC code for ACH
# 0.2.0
#     - Added 'OTHER' CreditCardType
#     - Added Price tier in POSItem
#     - Added PAN type and BIN
#     - Added Developer Email in ApplePay/GooglePay/SamsungPay objects
#     - Added ECIIndicator in ApplePay/GooglePay/SamsungPay objects
# 0.1.9
#     - OfferRealizationType enum - Add TRANSACTION_LEVEL
#     - Updated Reward transactionLevel to add priceAdjustments
#     - Updated PriceAdjustment to add maxQuantity
#     - Added OfferStatus in the PriceAdjustments
#     - Added washcodes under POSItem
# 0.1.8
#     - Added 3ds web support
#     - Added percentage currency type
# 0.1.7
#     - Added receipt lines in the loyalty transaction info
#     - Added reward description in Reward
#     - Added credit in Paypal object
#     - Added enrollment status and bank name in the ACH object
# 0.1.6
#     - Added SecurityCode in valuted Account
#     - Added VAULTED_ACCOUNT as AccountType
#     - Added ExpiryDate in Loyalty object
#     - Added Accept-Language header field
# 1.0.3
#     - Added LoyaltyCardRegistrationRequest, LoyaltyCardRegistrationResponse
#     - Added AccountValidationRequest, AccountValidationResponse
#     - Added Account, Question, DeviceInfo, User, Identity, Group, Photo, Email
#     - Added Gender, MonDayYear, PersonName
# 1.0.2
#     - Add OfferRealizationType enum to PromotionalOffer
#     - Add posAdjustment (type PriceAdjustment) to PromotionalOffer
#     - Add saleItems array of POSItem to PromotionalOfferQualifiers
#     - Added 'currencyValue' & 'currencyCode' to LoyaltyBalance
#     - Added 'transactionDate' to LoyaltyTransactionInfo
#     - Added 'terminalId' to LoyaltyTransactionInfo
#     - Added new LoyaltyAward
#     - Added new LoyaltyCompletion
# 1.0.1
#     - Added 'rate' to TaxDetails
#     - Added 'requestType' to LoyaltyAuthorisation, LoyaltyReward, LoyaltyRedemption, LoyaltyCancel
#     - Added PriceAdjustment under POSItem
# 1.0.0
#     - Document Change Log added.

openapi: "3.0.0"
info:
  version: 0.2.2
  title: uCom Loyalty Services (Internal)
servers:
  - url: https://ucom-loyalty-services-dev.apps.us-oma1-np2.1dc.com
  - url: https://ucom-loyalty-services-qa.apps.us-oma1-np2.1dc.com
  - url: https://ucom-loyalty-services-cat.apps.us-oma1-np2.1dc.com
  - url: https://ucom-loyalty-services-preprod.apps.us-chd1-np2.1dc.com
  - url: https://ucom-loyalty-services.apps.us-oma1-ip01.1dc.com
paths:

  /v1/partners/{partnerId}/loyalty/rewards:
    post:
      summary: Reward loyalty points to the card
      tags:
        - Loyalty Reward
      parameters:
        - name: partnerId
          in: path
          required: true
          description: uCom provided identifer for the client partner
          schema:
            type: string
        - name: X-Wallet-Id
          in: header
          required: true
          description: uCom provided identifer for the wallet of client partner
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: The Accept-Language header contains information about the language preference of a user. This HTTP header is useful to multilingual sites for deciding the best language to serve to the client. i.e en-US,fr-CA
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoyaltyReward'
            example: |
              {
                "fdCustomerId":"13de92adcb8748f9b9bc943852eb0cfd",
                "loyaltyTransactions": [{
                  "merchantId": "123456789",
                  "referenceNumber":"64885ed6472e11e9b210d663bd873d93",
                  "sequenceNumber":"987654",
                  "fundingSource": {
                    "vaultedAccount" : {
                      "fdAccountId":"8a7fb4bc696fe38501697721fbf60059"
                    },
                    "loyalty": {
                      "cardNumber": "1234567890"
                    }
                  }
                }],
                "paymentInfo": {
                  "currencyCode": {
                    "number": 840
                  },
                  "amount": 9.01,
                  "fundingSource": {
                    "credit": {
                      "cardNumber": "4111111111111111"
                    }
                  }
                },
                "saleItems": [
                  {
                    "itemDescription": "Unleaded",
                    "itemPrice": 7.5,
                    "unitOfMeasurement": "each",
                    "unitsSold": 1.5,
                    "totalItemSaleAmount": 11.10,
                    "posCodeFormat": "plu",
                    "posCode": "100",
                    "posCodeModifier": "1",
                    "productCode": "102",
                    "tax": [
                      {
                        "code": "TX01",
                        "description": "Sales Tax",
                        "amount": "7.50"
                      }
                    ],
                    "type": "FUEL"
                  }
                ]
              }


              {
                "fdCustomerId": "c84e7c48472e11e9b210d663bd873d93",
                "loyaltyTransactions": [{
                  "merchantId": "123456789",
                  "referenceNumber":"a9100108472e11e9b210d663bd873d93",
                  "sequenceNumber":"987654",
                  "fundingSource": {
                    "vaultedAccount": {
                      "fdAccountId": "b641f6f6472e11e9b210d663bd873d93",
                    },
                  },
                  "hostExtraInfo":[
                    {
                      "name":"loyalty.host.message",
                      "valueAsList":[
                        "message1",
                        "message2"
                      ]
                    }
                  ]
                }],
                "offers":[
                  {
                    "promotionId":"promo1visitcount",
                    "offerStatus":{
                      "statusInfo":[
                        {
                          "name":"value",
                          "value":"5"
                        }
                      ]
                    }
                  }
                ],
                "paymentInfo": {
                  "currencyCode": {
                    "number": 840,
                  },
                  "amount": 9.01,
                  "fundingSource": {
                    "paypal": {
                      "billingAgreementId": "472e11e9b210d66"
                    }
                  }
                },
                "saleItems": [
                  {
                    "itemDescription": "Unleaded",
                    "itemPrice": 7.5,
                    "unitOfMeasurement": "each",
                    "unitsSold": 1.5,
                    "totalItemSaleAmount": 11.10,
                    "posCodeFormat": "plu",
                    "posCode": "100",
                    "posCodeModifier": "1",
                    "productCode": "102",
                    "tax": [
                      {
                        "code": "TX01",
                        "description": "Sales Tax",
                        "amount": "7.50"
                      }
                    ],
                    "type": "FUEL"
                  }
                ]
              }
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyReward"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/partners/{partnerId}/loyalty/authorizations:
    post:
      summary: Authorize a loyalty card for redemption
      tags:
        - Authorize
      parameters:
        - name: partnerId
          in: path
          required: true
          description: uCom provided identifer for the client partner
          schema:
            type: string
        - name: X-Wallet-Id
          in: header
          required: true
          description: uCom provided identifer for the wallet of client partner
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: The Accept-Language header contains information about the language preference of a user. This HTTP header is useful to multilingual sites for deciding the best language to serve to the client. i.e en-US,fr-CA
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoyaltyAuthorization'
            examples:
              Example1:
                value:
                  loyaltyReward:
                    loyaltyTransactions:
                      fundingSource:
                        loyalty:
                          cardNumber: "4111111111111111"
              Example2:
                value:
                  loyaltyReward:
                    loyaltyTransactions:
                      loyalty:
                        cardNumber: "4111111111111111"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyAuthorization"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/partners/{partnerId}/loyalty/void:
    post:
      summary: Cancel a loyalty card transaction
      tags:
        - Cancel
      parameters:
        - name: partnerId
          in: path
          required: true
          description: uCom provided identifer for the client partner
          schema:
            type: string
        - name: X-Wallet-Id
          in: header
          required: true
          description: uCom provided identifer for the wallet of client partner
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: The Accept-Language header contains information about the language preference of a user. This HTTP header is useful to multilingual sites for deciding the best language to serve to the client. i.e en-US,fr-CA
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoyaltyCancel'
            examples:
              Example1:
                value:
                  loyaltyCancel:
                    loyaltyTransactions:
                      fundingSource:
                        loyalty:
                          cardNumber: "4111111111111111"
              Example2:
                value:
                  loyaltyCancel:
                    loyaltyTransactions:
                      loyalty:
                        cardNumber: "4111111111111111"
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyCancel"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/partners/{partnerId}/loyalty/redemptions:
    post:
      summary: Redeem loyalty points from the card
      tags:
        - Loyalty Redemption
      parameters:
        - name: partnerId
          in: path
          required: true
          description: uCom provided identifer for the client partner
          schema:
            type: string
        - name: X-Wallet-Id
          in: header
          required: true
          description: uCom provided identifer for the wallet of client partner
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: The Accept-Language header contains information about the language preference of a user. This HTTP header is useful to multilingual sites for deciding the best language to serve to the client. i.e en-US,fr-CA
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoyaltyRedemption'
            examples:
              Example1:
                value:
                  loyaltyReward:
                    loyaltyTransactions:
                      fundingSource:
                        loyalty:
                          cardNumber: "4111111111111111"
              Example2:
                value:
                  loyaltyReward:
                    loyaltyTransactions:
                      loyalty:
                        cardNumber: "4111111111111111"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyRedemption"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/partners/{partnerId}/loyalty/award:
    post:
      summary: Award loyalty points from the card
      tags:
        - Loyalty Award
      parameters:
        - name: partnerId
          in: path
          required: true
          description: uCom provided identifer for the client partner
          schema:
            type: string
        - name: X-Wallet-Id
          in: header
          required: true
          description: uCom provided identifer for the wallet of client partner
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: The Accept-Language header contains information about the language preference of a user. This HTTP header is useful to multilingual sites for deciding the best language to serve to the client. i.e en-US,fr-CA
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoyaltyAward'
            examples:
              Example1:
                value:
                  loyaltyAward:
                    loyaltyTransactions:
                      fundingSource:
                        loyalty:
                          cardNumber: "4111111111111111"
              Example2:
                value:
                  loyaltyAward:
                    loyaltyTransactions:
                      loyalty:
                        cardNumber: "4111111111111111"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyAward"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/partners/{partnerId}/loyalty/finalize:
    post:
      summary: Finalize / Complete the loyalty transaction
      tags:
        - Loyalty Finalize
      parameters:
        - name: partnerId
          in: path
          required: true
          description: uCom provided identifer for the client partner
          schema:
            type: string
        - name: X-Wallet-Id
          in: header
          required: true
          description: uCom provided identifer for the wallet of client partner
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: The Accept-Language header contains information about the language preference of a user. This HTTP header is useful to multilingual sites for deciding the best language to serve to the client. i.e en-US,fr-CA
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoyaltyCompletion'
            example: |
              {
                "fdCustomerId":"13de92adcb8748f9b9bc943852eb0cfd",
                "loyaltyTransactions": [{
                  "merchantId": "123456789",
                  "referenceNumber":"64885ed6472e11e9b210d663bd873d93",
                  "sequenceNumber":"987654",
                  "fundingSource": {
                    "vaultedAccount" : {
                      "fdAccountId":"8a7fb4bc696fe38501697721fbf60059"
                    },
                    "loyalty": {
                      "cardNumber": "1234567890"
                    }
                  }
                }],
                "paymentInfo": {
                  "currencyCode": {
                    "number": 840
                  },
                  "amount": 9.01,
                  "fundingSource": {
                    "credit": {
                      "cardNumber": "4111111111111111"
                    }
                  }
                },
                "saleItems": [
                  {
                    "itemDescription": "Unleaded",
                    "itemPrice": 7.5,
                    "unitOfMeasurement": "each",
                    "unitsSold": 1.5,
                    "totalItemSaleAmount": 11.10,
                    "posCodeFormat": "plu",
                    "posCode": "100",
                    "posCodeModifier": "1",
                    "productCode": "102",
                    "tax": [
                      {
                        "code": "TX01",
                        "description": "Sales Tax",
                        "amount": "7.50"
                      }
                    ],
                    "type": "FUEL"
                  }
                ]
              }


              {
                "fdCustomerId": "c84e7c48472e11e9b210d663bd873d93",
                "loyaltyTransactions": [{
                  "merchantId": "123456789",
                  "referenceNumber":"a9100108472e11e9b210d663bd873d93",
                  "sequenceNumber":"987654",
                  "fundingSource": {
                    "vaultedAccount": {
                      "fdAccountId": "b641f6f6472e11e9b210d663bd873d93",
                    },
                  },
                  "hostExtraInfo":[
                    {
                      "name":"loyalty.host.message",
                      "valueAsList":[
                        "message1",
                        "message2"
                      ]
                    }
                  ]
                }],
                "offers":[
                  {
                    "promotionId":"promo1visitcount",
                    "offerStatus":{
                      "statusInfo":[
                        {
                          "name":"value",
                          "value":"5"
                        }
                      ]
                    }
                  }
                ],
                "paymentInfo": {
                  "currencyCode": {
                    "number": 840,
                  },
                  "amount": 9.01,
                  "fundingSource": {
                    "paypal": {
                      "billingAgreementId": "472e11e9b210d66"
                    }
                  }
                },
                "saleItems": [
                  {
                    "itemDescription": "Unleaded",
                    "itemPrice": 7.5,
                    "unitOfMeasurement": "each",
                    "unitsSold": 1.5,
                    "totalItemSaleAmount": 11.10,
                    "posCodeFormat": "plu",
                    "posCode": "100",
                    "posCodeModifier": "1",
                    "productCode": "102",
                    "tax": [
                      {
                        "code": "TX01",
                        "description": "Sales Tax",
                        "amount": "7.50"
                      }
                    ],
                    "type": "FUEL"
                  }
                ]
              }
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyCompletion"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Account:
      description: Account information - can only be ONE of the account types. Currently OpenAPI doesn't support a "oneOf" tag to show this constraint in hte spec.
      type: object
      properties:
        fdAccountId:
          description: Unique identifier for a customer account vaulted with uCom
          type: string
          readOnly: true
        type:
          $ref: '#/components/schemas/AccountType'
        status:
          $ref: '#/components/schemas/AccountStatus'
        credit:
          $ref: '#/components/schemas/Credit'
        prepaid:
          $ref: '#/components/schemas/Prepaid'
        loyalty:
          $ref: '#/components/schemas/Loyalty'
        paypal:
          $ref: '#/components/schemas/Paypal'
        masterpass:
          $ref: '#/components/schemas/MasterPass'
        token:
          $ref: '#/components/schemas/ReferenceToken'
        ach:
          $ref: '#/components/schemas/ACH'
        accountOwner:
          $ref: '#/components/schemas/User'
        venmo:
          $ref: '#/components/schemas/Venmo'
        visaCheckout:
          $ref: '#/components/schemas/VisaCheckout'
        threeDSecureInfo:
          $ref: '#/components/schemas/ThreeDSecure'
        nickName:
          description: Name given by the user to label the account that has meaning for them visually.
          type: string
          example: "My Favorite Account"
        securityQuestions:
          description: A list of questions.
          type: array
          items:
            $ref: '#/components/schemas/Question'
        additionalInfo:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
          uniqueItems: true
        hostExtraInfo:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
          uniqueItems: true
        dateCreated:
          description: Date created time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
          type: string
          format: date-time
          example: "2016-04-16T16:06:05Z"
        dateModified:
          description: Date modified time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
          type: string
          format: date-time
          example: "2016-04-16T16:06:05Z"
        vaultedAccount:
          $ref: '#/components/schemas/VaultedAccount'

    AccountValidationRequest:
      properties:
        account:
          $ref: '#/components/schemas/Account'
        issuerExtraInfo:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
          uniqueItems: true
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'

    AccountValidationResponse:
      properties:
        validationId:
          description: Validation ID.
          type: string
        account:
          $ref: '#/components/schemas/Account'

    Address:
      description: A physical mailing address for this user.
      type: object
      properties:
        type:
          description: Canonical type values of "work", "home", and "other".
          type: string
        streetAddress:
          description: The full street address component, which may include house number, street name, P.O. box, and multi-line extended street address information.
          type: string
        locality:
          description: The city or locality component.
          type: string
        region:
          description: The state or region component.
          type: string
        postalCode:
          description: The zip code or postal code component.
          type: string
        country:
          description: The country name component.  When specified, the value MUST be in ISO 3166-1 "alpha-2" code format; e.g., the United States and Sweden are "US" and "SE", respectively.
          type: string
        formatted:
          description: The full mailing address, formatted for display or use with a mailing label.
          type: string
        primary:
          description: Indicates if this is the default address for the associated resource. It only has meaning when used in a set or array of addresses.
          type: boolean

    ACH:
      description: Information about an ACH account
      type: object
      properties:
        accountNumber:
          type: string
          description: Unique number identifying the ACH account provided by Financial institution.
          example: '92658250156'
        routingNumber:
          type: string
          description: Number to identify the financial institution
          example: '999999999'
        secCode:
          type: string
          description: SEC Code is optional data, It is specifically required for ACH account which is ruled by NACHA compliance.
        cardNumber:
          description: ACH Card number, can only be sent when vaulting an account.  This field will NOT be present in responses.
          type: string
          example: "9111111111111111"
        cardType:
          $ref: '#/components/schemas/AchCardType'
        securityCode:
          type: string
          description: Code to validate the ACH account, like micro deposit or security code.
          example: '278356'
        alias:
          description: Last four values of the cardNumber
          type: string
          readOnly: true
          example: "1111"
        enrollmentStatus:
          $ref: '#/components/schemas/AchEnrollmentStatus'
        enrollmentSubStatuses:
          type: array
          items:
            $ref: '#/components/schemas/AchEnrollmentSubStatus'
        bankName:
          type: string
          description: Name of the bank associated with the ACH account
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'


    Amount:
      description: Amount authorized in lower denomination.
      type: number
      format: double
      minimum: 0
      exclusiveMinimum: true
      readOnly: true
      example: 500.45

    AndroidPay:
      type: object
      properties:
        data:
          type: string
          example: "3CguW5ecfTzO...03d"
        signature:
          type: string
          example: "MIAGCSqGSIb......AAAA=="
        decryptAlias:
          description: field of the public key certificate.
          type: string
          example: "oslo.com.xxx.Prod_mer"
        dPanLast4:
          type: string
          example: "9876"
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        header:
          type: object
          properties:
            ephemeralPublicKey:
              type: string
              example: "MFkwEw...03d"
            publicKeyHash:
              type: string
              example: "+vbONw...IM="
        billingAddress:
          $ref: '#/components/schemas/Address'

    ApplePay:
      type: object
      properties:
        version:
          type: string
          example: "EC_v1"
        developerEmail:
          type: string
        signature:
          type: string
          example: "MIAGCSqGSIb......AAAA=="
        decryptAlias:
          description: field of the public key certificate.
          type: string
          example: "oslo.com.xxx.Prod_mer"
        data:
          type: string
          example: "3CguW5ecfTz...Yuhw="
        applicationData:
          type: string
          example: "VEVTVA=="
        dPanLast4:
          type: string
          example: "9876"
        bin:
          type: string
        eciIndicator:
          type: string
        panType:
          type: string
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        header:
          type: object
          properties:
            applicationDataHash:
              type: string
            ephemeralPublicKey:
              type: string
              example: "MFkwEwYHKoZIzj0CIKoZIz.....NBQQ=="
            publicKeyHash:
              type: string
              example: "+vbONwRlVqJX0........"
            transactionId:
              type: string
              example: "3827c5a02638.....34d50"
        billingAddress:
          $ref: '#/components/schemas/Address'

    Credit:
      description: Information on a credit account
      type: object
      properties:
        cardNumber:
          description: Primary account number, can only be sent when vaulting an account.  This field will NOT be present in responses.
          type: string
        bin:
          type: string
        nameOnCard:
          description: Name as printed on physical card or on virtual account
          type: string
        alias:
          description: Last four values of the cardNumber
          type: string
          readOnly: true
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        cardSubType:
          description: Merchant or brand specific information about the type of account
          type: string
        billingAddress:
          $ref: '#/components/schemas/Address'
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        securityCode:
          type: string
        sequenceNumber:
          description: Applicable only for private-label accounts
          type: string
        token:
          $ref: '#/components/schemas/ReferenceToken'

    DeviceInfo:
      description: Request origin device details
      type: object
      required:
        - id
        - kind
      properties:
        id:
          description: Unique Id for the device. Value should not contain line feeds, carriage returns, tabs, leading or trailing spaces, or multiple spaces.
          type: string
          example: "537edec8-d33e-4ee8-93a7-b9f61876950c"
        kind:
          description: Possible values are mobile, wearable, automobile, embedded,desktop, other.
          type: string
          example: "mobile"
        details:
          title: deviceData
          description: Device data information from multiple providers.
          type: array
          minItems: 0
          uniqueItems: true
          items:
            description: Collection of device data
            type: object
            properties:
              provider:
                description: Identifies the provider of the data and is often used when decrypting data on the server.
                type: string
                example: "InAuth"
              dataCapture:
                description: Device data captured as a bundle and transmitted as an encrypted and/or specifically formated string.
                type: object
                properties:
                  rawData:
                    description: Device capture - raw data blob
                    type: string
                    example: "aaaaaXREUVZGRlFY...aMV"
                  dataEventId:
                    description: Event identifier used map state on the server.
                    type: string
                    example: "BB8E4E92...Fz1E063113"
                  captureTime:
                    description: Device data capture time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
                    type: string
                    format: date-time
                    example: "2016-04-16T16:06:05Z"
              dataStatic:
                description: Device static details
                type: object
                properties:
                  os:
                    description: Device OS name
                    type: string
                    example: "Android 5.1.1 Lollipop"
                  osVersion:
                    description: Device OS version
                    type: string
                    example: "5.1.1 Lollipop"
                  model:
                    description: Device model
                    type: string
                    example: "XT1540"
                  type:
                    description: Device type
                    type: string
                    example: "Moto G"
              dataDynamic:
                description: Device location details
                type: object
                properties:
                  latitude:
                    description: Device position - latitude at the time of the data event
                    type: string
                    example: "13.0827 N"
                  longitude:
                    description: Device position - longitude at the time of the data event
                    type: string
                    example: "80.2707 E"
                  ipAddress:
                    description: IP address
                    type: string
                    example: "172.27.37.221"
                  captureTime:
                    description: Device data capture time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
                    type: string
                    format: date-time
                    example: "2016-04-16T16:06:05Z"
              dataApplication:
                description: Mobile application specific data
                type: object
                properties:
                  version:
                    description: Mobile application version.
                    type: string
                    format: sting
                    example: "1.0.0"
                  name:
                    description: Mobile application name.
                    type: string
                    format: sting
                    example: "aplication-name"
                  country:
                    description: Mobile application store country.
                    type: string
                    format: sting
                    example: "US"
        additionalInfo:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
          uniqueItems: true
      example:
        {
          id: "537edec8-d33e-4ee8-93a7-b9f61876950c",
          kind: "mobile",
          details: [{
                      provider: "InAuth",
                      dataCapture: {
                        rawData: "aaaaaXREUVZGRlFY...aMV",
                        dataEventId: "BB8E4E92...Fz1E063113",
                        captureTime: "2016-04-16T16:06:05Z"
                      },
                      dataStatic: {
                        os: "Android 5.1.1 Lollipop",
                        osVersion: "5.1.1 Lollipop",
                        model: "XYX-1",
                        Type: "Moto G"
                      },
                      dataDynamic: {
                        latitude: "13.0827 N",
                        longitude: "80.2707 E",
                        ipAddress: "172.27.37.221",
                        captureTime: "2016-04-16T16:06:05Z"
                      }
                    }],
          additionalInfo: [{
                             name: "some-key",
                             value: "some-value"
                           }]
        }

    Error:
      description: Model for error messaging
      type: object
      properties:
        code:
          type: string
          description: Uniquely identifies an error condition. Client applications need to read and handle errors based on this.
        message:
          type: string
          description: A generic description of the error condition.
        category:
          type: string
          description: The resource associated with the error condition.
        developerInfo:
          type: object
          description: Information that needs to be understood by the client developers and should not be interpreted for application processing.
          properties:
            developerMessage:
              type: string
              description: An elaborative description of the error description.
            moreInfo:
              type: string
              description: Link to the error in Developer page.
            fieldError:
              description: Detailed information about message format errors.
              type: array
              items:
                properties:
                  field:
                    description: The property or attribute associated with the error
                    type: string
                  message:
                    description: Information specific to a property or attribute.
                    type: string
      example:
        {
          code: "40000",
          message: "Example Error",
          category: "value-added-service"
        }

    ExpiryDate:
      description: Contains account expiration data and needs to either send the values in individual fields OR as a singleValue.
      type: object
      properties:
        month:
          type: string
          description: Month format 'MM'
          pattern: "[0-9]{2,2}"
          minLength: 2
          maxLength: 2
        year:
          type: string
          description: Year format 'YY'
          pattern: "[0-9]{2,2}"
          minLength: 2
          maxLength: 2
        singleValue:
          type: string
          description: Month and year together, 'MMYY' or 'MMYYYY'.  If the latter format, the string will be parsed and validated per the given format.  Any other format will be rejected.
          minLength: 4
          maxLength: 6

    Fleet:
      description: Information on a Fleet account
      type: object
      properties:
        cardNumber:
          description: Primary account number, can only be sent when vaulting an account.  This field will NOT be present in responses.
          type: string
        nameOnCard:
          description: Name as printed on physical card or on virtual account
          type: string
        alias:
          description: Card alias
          type: string
          readOnly: true
        cardType:
          $ref: '#/components/schemas/FleetCardType'
        billingAddress:
          $ref: '#/components/schemas/Address'
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        securityCode:
          type: string
        sequenceNumber:
          description: Sequence number of the card.
          type: string
        token:
          $ref: '#/components/schemas/ReferenceToken'

    FuelPurchaseInfo:
      description: Fuel purchase information.
      type: object
      required:
        - pumpNumber
      properties:
        pumpNumber:
          type: number
          description: Pump number from which fueling is requested.
        serviceLevelCode:
          description: Indicates service level code.
          type: string
        requestedAmount:
          $ref: '#/components/schemas/RequestedAmount'
        items:
          type: array
          items:
            $ref: '#/components/schemas/POSItem'
      example:
        pumpNumber: "17"
        items:
          - posCode: "432"
            itemDescription: "Unleaded"
            itemPrice: "2.03"
            unitOfMeasurement: "gallonUS"
            posCodeFormat: "plu"
            posCodeModifier: "1"
            productCode: "102"

    GooglePay:
      description: Google Payment specific information
      type: object
      properties:
        version:
          description: Identifies encryption/signing scheme.
          type: string
          example: "EC_v1"
        developerEmail:
          type: string
        signature:
          description: Signature to verify Google initiated message.
          type: string
          example: "MIAGCSqGSIb......AAAA=="
        data:
          description: Data includes encryptedMessage, ephemeralPublicKey, tag.
          type: string
          example: "{\"encryptedMessage\":\"8nx...u003d\",\"ephemeralPublicKey\":\"BGH...u003d\",\"tag\":\"nvm...\\u003d\"}"
        dPanLast4:
          type: string
          example: "9876"
        bin:
          type: string
      eciIndicator:
          type: string
        panType:
          type: string
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        token:
          $ref: '#/components/schemas/ReferenceToken'
        billingAddress:
          $ref: '#/components/schemas/Address'

    ISO-4217:
      description: Holds currency information
      type: object
      properties:
        code:
          type: string
          default: "USD"
          example: "USD"
        number:
          type: integer
          default: 840
          example: 840
        digits:
          type: integer
          default: 2
          example: 2
        currency:
          type: string
          default: "US Dollar"
          example: "US Dollar"

    Loyalty:
      description: Information about a Loyalty account.
      type: object
      properties:
        accountId:
          description: Account identifier, can be used for traditional card number or any alphanumeric value.  For example, a unique value not shown on the card, email address, phone number, social id, etc.
          type: string
        cardNumber:
          description: Card number of loyalty account. The accountId parameter superscedes this field.  This field is ignored when the request is to create a new acccount.
          type: string
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        alias:
          description: Last four values of the cardNumber
          type: string
          readOnly: true
        accountStatus:
          $ref: '#/components/schemas/LoyaltyAccountStatus'
        loyaltyProgram:
          $ref: '#/components/schemas/LoyaltyProgram'
        pin:
          description: Security pin number
          type: string
        communications:
          description: Methods the account onwer has agreed to be contacted
          type: object
          properties:
            email:
              type: boolean
            phone:
              type: boolean
            sms:
              type: boolean
        commonFlags:
          description: Common true/false settings on an account
          type: object
          properties:
            tncAccepted:
              type: boolean
            canEarn:
              type: boolean
            canRedeem:
              type: boolean
            isChildAccount:
              type: boolean
            isVirtualAccount:
              description: Indicates if the account has an associated plastic card or not.
              type: boolean
        balance:
          $ref: '#/components/schemas/LoyaltyBalance'
        token:
          $ref: '#/components/schemas/ReferenceToken'

    LoyaltyAuthorization:
      properties:
        requestType:
          type: array
          items:
            type: string
            example: ["EARN", "REDEEM"]
        fdCustomerId:
          description: FD customer identifier tied to the vaulted accounts.
          type: string
        loyaltyTransactions:
          type: array
          items:
            $ref: "#/components/schemas/LoyaltyTransactionInfo"
        paymentInfo:
          $ref: "#/components/schemas/PaymentInfo"
        saleItems:
          type: array
          items:
            $ref: '#/components/schemas/POSItem'
        rewardList:
          type: array
          items:
            $ref: '#/components/schemas/Reward'
        availOffersTrxnId:
          description: Identifier to be carried along with subsequent interactions using the available offers returned to the client.
          type: string
        offers:
          type: array
          items:
            $ref: '#/components/schemas/PromotionalOffer'
        salePosition:
          $ref: '#/components/schemas/SalePositionType'
        industrySpecificInfo:
          description: Industry specific details like petro for example.
          type: object
          properties:
            fuelPurchaseInfo:
              $ref: '#/components/schemas/FuelPurchaseInfo'

    LoyaltyCancel:
      properties:
        requestType:
          type: array
          items:
            type: string
            example: ["EARN", "REDEEM"]
        fdCustomerId:
          description: FD customer identifier tied to the vaulted accounts.
          type: string
        loyaltyTransactions:
          type: array
          items:
            $ref: "#/components/schemas/LoyaltyTransactionInfo"
        paymentInfo:
          $ref: "#/components/schemas/PaymentInfo"
        saleItems:
          type: array
          items:
            $ref: '#/components/schemas/POSItem'
        rewardList:
          type: array
          items:
            $ref: '#/components/schemas/Reward'
        availOffersTrxnId:
          description: Identifier to be carried along with subsequent interactions using the available offers returned to the client.
          type: string
        offers:
          type: array
          items:
            $ref: '#/components/schemas/PromotionalOffer'
        salePosition:
          $ref: '#/components/schemas/SalePositionType'
        industrySpecificInfo:
          description: Industry specific details like petro for example.
          type: object
          properties:
            fuelPurchaseInfo:
              $ref: '#/components/schemas/FuelPurchaseInfo'

    LoyaltyBalance:
      type: object
      properties:
        balance:
          type: number
        minRedeemUnits:
          type: number
        maxRedeemUnits:
          type: number
        unitType:
          $ref: '#/components/schemas/BalanceUnitTypes'
        conversionRatio:
          type: number
        currencyValue:
          type: number
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'
      readOnly: true

    LoyaltyProgram:
      description: Value object to hold a list of loyalty items.
      type: object
      properties:
        programId:
          description: Unique identifier used to provide link between applications across disparate systems.
          type: string
        hostProgramId:
          description: Loyalty program Id used by the host (cloud) solution. Not in used in uCom system. For future use.
          type: string
        programName:
          description: Loyalty program name. Common name for the given loyalty program
          type: string
        programDesc:
          description:
            Used to describe the loyalty program and perhaps used to display to
            the client.
          type: string
        programProvider:
          description: Sponsor of the loyalty program.
        loyaltyType:
          $ref: '#/components/schemas/LoyaltyType'
        programStatus:
          $ref: '#/components/schemas/ProgramStatus'

    LoyaltyReward:
      properties:
        requestType:
          type: array
          items:
            type: string
            example: ["EARN", "REDEEM"]
        fdCustomerId:
          description: FD customer identifier tied to the vaulted accounts.
          type: string
        loyaltyTransactions:
          type: array
          items:
            $ref: "#/components/schemas/LoyaltyTransactionInfo"
        paymentInfo:
          $ref: "#/components/schemas/PaymentInfo"
        saleItems:
          type: array
          items:
            $ref: '#/components/schemas/POSItem'
        availOffersTrxnId:
          description: Identifier to be carried along with subsequent interactions using the available offers returned to the client.
          type: string
        offers:
          type: array
          items:
            $ref: '#/components/schemas/PromotionalOffer'
        salePosition:
          $ref: '#/components/schemas/SalePositionType'
        industrySpecificInfo:
          description: Industry specific details like petro for example.
          type: object
          properties:
            fuelPurchaseInfo:
              $ref: '#/components/schemas/FuelPurchaseInfo'

    LoyaltyRedemption:
      properties:
        requestType:
          type: array
          items:
            type: string
            example: ["EARN", "REDEEM"]
        fdCustomerId:
          description: FD customer identifier tied to the vaulted accounts.
          type: string
        loyaltyTransactions:
          type: array
          items:
            $ref: "#/components/schemas/LoyaltyTransactionInfo"
        paymentInfo:
          $ref: "#/components/schemas/PaymentInfo"
        saleItems:
          type: array
          items:
            $ref: '#/components/schemas/POSItem'
        availOffersTrxnId:
          description: Identifier to be carried along with subsequent interactions using the available offers returned to the client.
          type: string
        offers:
          type: array
          items:
            $ref: '#/components/schemas/PromotionalOffer'
        salePosition:
          $ref: '#/components/schemas/SalePositionType'
        industrySpecificInfo:
          description: Industry specific details like petro for example.
          type: object
          properties:
            fuelPurchaseInfo:
              $ref: '#/components/schemas/FuelPurchaseInfo'

    LoyaltyAward:
      properties:
        requestType:
          type: array
          items:
            type: string
            example: ["EARN", "REDEEM"]
        fdCustomerId:
          description: FD customer identifier tied to the vaulted accounts.
          type: string
        loyaltyTransactions:
          type: array
          items:
            $ref: "#/components/schemas/LoyaltyTransactionInfo"
        paymentInfo:
          $ref: "#/components/schemas/PaymentInfo"
        saleItems:
          type: array
          items:
            $ref: '#/components/schemas/POSItem'
        availOffersTrxnId:
          description: Identifier to be carried along with subsequent interactions using the available offers returned to the client.
          type: string
        offers:
          type: array
          items:
            $ref: '#/components/schemas/PromotionalOffer'
        salePosition:
          $ref: '#/components/schemas/SalePositionType'
        industrySpecificInfo:
          description: Industry specific details like petro for example.
          type: object
          properties:
            fuelPurchaseInfo:
              $ref: '#/components/schemas/FuelPurchaseInfo'

    LoyaltyCompletion:
      properties:
        requestType:
          type: array
          items:
            type: string
            example: ["EARN", "REDEEM"]
        fdCustomerId:
          description: FD customer identifier tied to the vaulted accounts.
          type: string
        loyaltyTransactions:
          type: array
          items:
            $ref: "#/components/schemas/LoyaltyTransactionInfo"
        paymentInfo:
          $ref: "#/components/schemas/PaymentInfo"
        saleItems:
          type: array
          items:
            $ref: '#/components/schemas/POSItem'
        availOffersTrxnId:
          description: Identifier to be carried along with subsequent interactions using the available offers returned to the client.
          type: string
        offers:
          type: array
          items:
            $ref: '#/components/schemas/PromotionalOffer'
        salePosition:
          $ref: '#/components/schemas/SalePositionType'
        industrySpecificInfo:
          description: Industry specific details like petro for example.
          type: object
          properties:
            fuelPurchaseInfo:
              $ref: '#/components/schemas/FuelPurchaseInfo'

    LoyaltyCardRegistrationRequest:
      properties:
        customer:
          $ref: '#/components/schemas/User'
        account:
          $ref: '#/components/schemas/Account'
        loyalty:
          $ref: '#/components/schemas/Loyalty'
        tncAccepted:
          type: boolean
        issuerExtraInfo:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
          uniqueItems: true
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'

    LoyaltyCardRegistrationResponse:
      properties:
        id:
          description: Loyalty Card Registration ID.
          type: string
        loyalty:
          $ref: '#/components/schemas/Loyalty'
        account:
          $ref: '#/components/schemas/Account'

    LoyaltyTransactionInfo:
      description: Information about a Loyalty transaction as part of petro transaction.
      type: object
      properties:
        merchantId:
          description: Merchant identifier where the transaction is being performed.
          type: string
          example: "123456789"
        storeId:
          description: Store identifier where the transaction is being performed.
          type: string
          example: "123456"
        terminalId:
          description: Virtual terminal identifier where the transaction is being performed.
          type: string
          example: "9001"
        referenceNumber:
          description: Unique reference to the overall transaction.
          type: string
          example: "123456"
        sequenceNumber:
          description: Unique number per transaction per store/merchant/terminal.
          type: string
          example: "123456"
        transactionDateTime:
          description: The "DateTime" on the POS that the transaction was performed.
          type: string
          format: date-time
        fundingSource:
          description: Information about Loyalty account associated with the petro transaction.
          type: object
          properties:
            loyalty:
              $ref: '#/components/schemas/Loyalty'
            vaultedAccount:
              $ref: '#/components/schemas/VaultedAccount'
            type:
              $ref: '#/components/schemas/FundingSourceType'
        requestedRedeemUnits:
          type: number
          description: Units requested by user to redeem/burn as part of transaction.
        unitsRewarded:
          type: number
          description: Units earned/rewarded as part of transaction.
        unitsRedeemed:
          type: number
          description: Units burned/redeemed as part of transaction.
        previousBalanceUnits:
          type: number
          description: Previous balance units of an account.
        newBalanceUnits:
          type: number
          description: New balance units of an account.
        unitsValue:
          type: number
          format: double
          description: Units discounted / paid currency value as part of transaction
        hostExtraInfo:
          description: Additional host specific information presented as name-value pairs
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
        status:
          $ref: '#/components/schemas/LoyaltyTransactionStatus'
        receiptData:
          $ref: '#/components/schemas/ReceiptData'

    MasterPass:
      description: MasterPass information
      type: object
      properties:
        transactionId:
          description: Identifier corresponding to an account enrolled with MasterPass system.
          type: string
          example: "1234567890120298"
        credit:
          $ref: '#/components/schemas/Credit'

    MonDayYear:
      type: object
      properties:
        day:
          type: string
          description: Day format 'DD'
          pattern: "[0-9]{2,2}"
          minLength: 2
          maxLength: 2
        month:
          type: string
          description: Month format 'MM'
          pattern: "[0-9]{2,2}"
          minLength: 2
          maxLength: 2
        year:
          type: string
          description: Year format 'YYYY'
          pattern: "[0-9]{4,4}"
          minLength: 4
          maxLength: 4
        singleValue:
          type: string
          description: Month, Day and Year format - 'MMDDYYYY'.  If the latter format,the string will be parsed and validated per the given format.  Any other format will be rejected.
          minLength: 8
          maxLength: 8
      example:
        singleValue:  "01301901"

    NVP:
      title: Name and Value pair.
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        valueAsList:
          type: array
          minItems: 0
          items:
            type: string

    PaymentInfo:
      description: Payment tender information
      type: object
      required:
        - fundingSource
      properties:
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'
        amount:
          $ref: '#/components/schemas/Amount'
        fundingSource:
          description: The payment source to be used. Only one among the following allowed.
          type: object
          properties:
            credit:
              $ref: '#/components/schemas/Credit'
            prepaid:
              $ref: '#/components/schemas/Prepaid'
            fleet:
              $ref: '#/components/schemas/Fleet'
            applePay:
              $ref: '#/components/schemas/ApplePay'
            androidPay:
              $ref: '#/components/schemas/AndroidPay'
            paypal:
              $ref: '#/components/schemas/Paypal'
            masterpass:
              $ref: '#/components/schemas/MasterPass'
            token:
              $ref: '#/components/schemas/ReferenceToken'
            visaCheckout:
              $ref: '#/components/schemas/VisaCheckout'
            googlePay:
              $ref: '#/components/schemas/GooglePay'
            ach:
              $ref: '#/components/schemas/ACH'
            venmo:
              $ref: '#/components/schemas/Venmo'

    Paypal:
      description: Information about a Paypal account.
      type: object
      properties:
        payerId:
          type: string
          description: Paypal generated Unique identfier for a Paypal account.
          example: "LPLWNMTBWMFAY"
        nonce:
          type: string
          description: Paypal generated nonce.
          example: "ab12-124C-ab12-124C-ab12-124C"
        credit:
          $ref: '#/components/schemas/Credit'

    POSItem:
      description: Structure to support passing POS sale info as part of the sale request.
      type: object
      properties:
        itemDescription:
          type: string
          example: Standard Wash (or) Unleaded Petrol
        itemPrice:
          type: number
          format: double
          example: 7.5
        unitOfMeasurement:
          type: string
          example: each
        unitsSold:
          type: number
          format: double
          example: 1
        totalItemSaleAmount:
          type: number
          format: double
          example: 7.5
        originalItemPrice:
          type: number
          format: double
          example: 7.50
        originalTotalSaleAmount:
          type: number
          format: double
          example: 7.50
        posCodeFormat:
          type: string
          example: plu
        posCode:
          type: string
          example: '102'
        posCodeModifier:
          type: string
          example: '1'
        productCode:
          type: string
          example: "102"
        tax:
          type: array
          items:
            $ref: '#/components/schemas/TaxDetails'
        type:
          $ref: '#/components/schemas/SaleItemType'
        serviceLevelCode:
          $ref: '#/components/schemas/ServiceLevelCode'
        priceAdjustments:
          type: array
          items:
            $ref: '#/components/schemas/PriceAdjustment'
        washCodes:
          type: array
          items:
            $ref: '#/components/schemas/WashCode'
        priceTier:
          type: string

    Prepaid:
      description: Prepaid (a.k.a. gift) account information
      type: object
      properties:
        cardNumber:
          description: Prepaid card number.
          type: string
        cardSubType:
          description: Merchant or brand specific information about the type of account.Issuer/group information.
          type: string
          example: "Merchant Brand"
        securityCode:
          description: Security code of prepaid card
          type: string
        alias:
          type: string
          readOnly: true
          example: "8453"
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        balance:
          $ref: '#/components/schemas/PrepaidBalance'
        token:
          $ref: '#/components/schemas/ReferenceToken'

    PrepaidBalance:
      description: Details of balance in the prepaid card.
      required:
        - currentBalance
        - currencyCode
      properties:
        currentBalance:
          description: The current balance of prepaid card in lower denomination of the currency.
          type: number
        beginBalance:
          description: The balance of prepaid card before a transaction in lower denomination of the currency.
          type: number
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'
        currencyType:
          $ref: '#/components/schemas/CurrencyPairType'
      readOnly: true
      example:
        currentBalance: 1100
        beginBalance: 1000
        currencyCode: 840
        currencyType: "BASE"

    PromotionalOffer:
      description: Offer opportunity details
      type: object
      properties:
        offerReferenceId:
          description: Unique identifier for an offer.
          type: string
        offerName:
          description: Common name for the reward.
          type: string
        offerDescription:
          description: Description about the reward details.
          type: string
        type:
          description: Type can be used to distinguish offers, i.e EARN
        offerProvider:
          description: Provider name of the offer
          type: string
        partnerGroup:
          description: Partner group names where the offer can be obtained
          type: array
          minItems: 0
          items:
            type: string
        offerMessage:
          description: The offer information that is for the client to see on the user-interface.  This is most often set by the host system.
          type: string
        effectiveDateTime:
          description: Starting time for a reward validity.
          type: string
          format: date-time
        expiryDateTime:
          description: Ending time for a reward to be applied.
          type: string
          format: date-time
        visibleFrom:
          description: Date when offer will start the visibility.
          type: string
          format: date-time
        visibleTo:
          description: Date when offer will end the visibility.
          type: string
          format: date-time
        registrationFrom:
          description: Date when offer start with the registration.
          type: string
          format: date-time
        registrationTo:
          description: Date when offer end with the registration.
          type: string
          format: date-time
        promotionId:
          description: Links to associated promotion if it applies.
          type: string
        isExclusive:
          description: Indicator if offer can be combined with other offers or is mutually exclusive.
          type: boolean
        userAcceptanceRequired:
          description: Indicator if a user has to accept the offer before it can be applied to a transaction or accrued in an account.
          type: boolean
        offerStatus:
          $ref: '#/components/schemas/OfferStatus'
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'
        qualifiers:
          description: Conditions that must be met for the rewared to be awarded.
          type: object
          properties:
            currency:
              type: array
              items:
                properties:
                  currencyType:
                    $ref: '#/components/schemas/ValueAddCurrencyType'
                  value:
                    description: Value of the reward in the associated currency.
                    type: string
            saleItems:
              type: array
              items:
                $ref: '#/components/schemas/POSItem'
        offerCostInfo:
          description: Offer cost details.
          type: object
          properties:
            currency:
              type: array
              items:
                properties:
                  currencyType:
                    $ref: '#/components/schemas/ValueAddCurrencyType'
                  value:
                    description: Value of the Offer cost associated with currency.
                    type: string
            saleItems:
              type: array
              items:
                $ref: '#/components/schemas/POSItem'
        reward:
          $ref: '#/components/schemas/Reward'
        metadata:
          description: Details about what to display, images, messaging, et.
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
          uniqueItems: true
        offerRealizationType:
          $ref: '#/components/schemas/OfferRealizationType'


    PriceAdjustment:
      description: Structure to support providing price adjustment for sale item.
      type: object
      properties:
        adjustmentId:
          type: string
          example: "discount prepay"
        productCode:
          type: string
          example: "941"
        programID:
          type: string
          example: "P66"
        reason:
          type: string
          example: "loyaltyOffer"
        amount:
          type: number
          format: double
          example: 0.1
        percentage:
          type: number
          format: float
          example: 10
        itemPrice:
          type: number
          format: double
          example: 7.50
        unitOfMeasurement:
          type: string
          example: "each"
        unitsSold:
          type: number
          format: double
          example: 1
        rebateLabel:
          type: string
          example: "HostDiscount"
        maxQuantity:
          type: number
          format: double
          example: 7.50
        offerStatus:
          $ref: '#/components/schemas/OfferStatus'

    ReferenceToken:
      description: Surrogate value used to represent a handle to an account without sharing PCI/PII data to look it up.
      type: object
      properties:
        tokenId:
          description: Actual token value
          type: string
        tokenProvider:
          description: Indicates what system is the originator of the token
          type: string
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        tokenType:
          $ref: '#/components/schemas/ReferenceTokenType'
        nameOnCard:
          description: Name as printed on physical card or on virtual account
          type: string
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        cardSubType:
          description: Merchant or brand specific information about the type of account
          type: string
        billingAddress:
          $ref: '#/components/schemas/Address'

    RequestedAmount:
      title: Requested Amount
      description: Requested amount for the given request type [auth, capture, refund, etc].
      type: number
      format: double
      minimum: 0
      exclusiveMinimum: true
      example: 500.00

    ReceiptData:
      description:
        Container for the receipt lines sent from the site box as printed on the
        paper receipt.
      type: object
      properties:
        receiptSection:
          type: string
          description:
            Indicates the section of the receipt the text represents [e.g. full,
            vat, eft, loyalty, etc]
        receiptLines:
          $ref: '#/components/schemas/ReceiptLine'

    ReceiptLine:
      description: A line of text on a receipt.
      type: object
      properties:
        plain:
          type: array
          items:
            type: string
        formatted:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              value:
                type: string
              order:
                type: number
              row:
                type: number
              column:
                type: number
              charSet:
                type: number
              color:
                type: string
              alignment:
                type: string
              height:
                type: string
              width:
                type: string
              charSet1:
                type: string
              charSet2:
                type: string
              charSet3:
                type: string

    Reward:
      description: Reward details
      type: object
      properties:
        rewardId:
          description: Unique identifier for the reward instance
          type: string
        rewardDescription:
          description: reward description
          type: string
        effectiveDateTime:
          description: Starting time for a reward validity.
          type: string
          format: date-time
        expiryDateTime:
          description: Ending time for a reward to be applied.
          type: string
          format: date-time
        offerReferenceId:
          description: Link to the offer that provided the opportunity for a customer to receive the reward.
          type: string
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'
        values:
          description: Medium of exchange for the value.
          type: object
          properties:
            transactionLevel:
              type: array
              items:
                properties:
                  currencyType:
                    $ref: '#/components/schemas/ValueAddCurrencyType'
                  value:
                    description: Value of the reward in the associated currency.
                    type: string
                  realizationCode:
                    $ref: '#/components/schemas/RewardRealizationCode'
                  priceAdjustments:
                    type: array
                    items:
                      $ref: '#/components/schemas/PriceAdjustment'
            lineItemLevel:
              type: array
              items:
                properties:
                  currencyType:
                    $ref: '#/components/schemas/ValueAddCurrencyType'
                  value:
                    description: Value of the reward in the associated currency.
                    type: string
                  realizationCode:
                    $ref: '#/components/schemas/RewardRealizationCode'
        dispensationCode:
          $ref: '#/components/schemas/RewardDispensationCode'

    TaxDetails:
      description: Tax details.
      type: object
      properties:
        code:
          type: string
          example: TX01
        description:
          type: string
          example: Sales Tax
        amount:
          type: string
          example: '7.50'
        rate:
          type: string
          example: '13.5'

    VaultedAccount:
      description: FD Account information
      type: object
      properties:
        fdAccountId:
          description: Unique identifier for a customer account vaulted with uCom
          type: string
        securityCode:
          description: Card Verificatiion value.
          type: string
        status:
          $ref: '#/components/schemas/AccountStatus'
        type:
          $ref: '#/components/schemas/AccountType'
      example:
        fdAccountId: "003a502c72a211e78cf7a6006ad3dba0"

    Venmo:
      description: Information about a Venmo account.
      type: object
      properties:
        nonce:
          type: string
          description: Venmo generated nonce.
          example: "ab12-124C-ab12-124C-ab12-124C"

    VisaCheckout:
      description: Visa Checkout information
      type: object
      properties:
        callId:
          description: Identifier corresponding to an account enrolled with Visa Checkout system.
          type: string
          example: "1234732704291071701"
        credit:
          $ref: '#/components/schemas/Credit'

    WashCode:
      description: Purchased wash information.
      type: object
      properties:
        code:
          description: Wash code generated by the POS system.
          type: string
        description:
          description: Wash code description generated by the POS system.
          type: string
        expiration:
          description: Expiration date for the purchased wash code
          type: string
          format: date-time
        message:
          description: Field to carry message from site system for display to customer.
          type: string
    #-------------------------------------
    # ENUM Models
    #-------------------------------------
    AccountStatus:
      description: Indicates the status of an account.
      type: string
      readOnly: true
      enum:
        - ACTIVE
        - INACTIVE
        - TERMINATED
        - ISSUER_TERMINATED
        - WALLET_TERMINATED
        - PENDING

    AccountType:
      description: Type of Account vaulted
      type: string
      readOnly: true
      enum:
        - CREDIT
        - PREPAID
        - ACH
        - LOYALTY
        - PAYPAL
        - MASTERPASS
        - VENMO
        - VAULTED_ACCOUNT

    AchEnrollmentStatus:
      description: Indicates ACH enrollment status
      type: string
      enum:
        - ACTIVE
        - PENDING
        - PENDING_LINKED_ACCOUNT

    AchEnrollmentSubStatus:
      description: Indicates ACH enrollment pending status
      type: string
      enum:
          - PENDING_BANK_VALIDATION
          - PENDING_PIN_VALIDATION
          - PENDING_EMAIL_VALIDATION
          - PENDING_PHONE_VALIDATION
          - PENDING_SOFT_BLOCK
          - PENDING_HARD_BLOCK

    AchCardType:
      description: Indicates the type of ACH card association
      type: string
      enum:
        - CONNECTPAY

    BalanceUnitTypes:
      description: Indicator to determine how to display balances
      type: string
      enum:
        - CENTS
        - MILES
        - POINTS
        - STARS
        - LITRES

    CreditCardType:
      title: Credit Card Type
      description: Indicates the type of credit account association
      type: string
      enum:
        - AMEX
        - DISCOVER
        - MASTERCARD
        - PLCC
        - VISA
        - OTHER

    CurrencyPairType:
      description: Describes the type of currency where BASE represents the currency from Host and TRANSACTION represents the one requested.
      type: string
      enum:
        - BASE
        - TRANSACTION

    Email:
      description: Email address for the user.
      type: object
      properties:
        type:
          description: The "type" sub-attribute is used to provide a classification meaningful to the (human) user.  The user interface should encourage the use of basic values of "work", "home", and "other" and MAY allow additional type values to be used at the discretion of the service client.
          type: string
        value:
          description: The value SHOULD be specified according to RFC5321.
          type: string
        primary:
          description:
            Defines if this entry is to be used as the primary or default for the
            user.
          type: boolean
          default: false
      example:
        value: bjensen@example.com
        type: work
        primary: true

    FleetCardType:
      description: Indicates the type of fleet account association
      type: string
      enum:
        - WEX

    FundingSourceType:
      description: Describes the type of Funding source
      type: string
      readOnly: true
      enum:
        - VAULTED_ACCOUNT
        - CREDIT
        - PREPAID
        - APPLE_PAY
        - ANDRIOD_PAY
        - PAYPAL
        - TOKEN
        - NONCE
        - VCO
        - VENMO
        - LOYALTY

    Gender:
      description: Gender of the person.
      type: string
      enum:
        - MALE
        - FEMALE
        - UNDECLARED

    Group:
      description: Group
      type: object
      properties:
        value:
          description: The id of the group.
          type: string
        href:
          description: The URI of the corresponding "Group" resources to which the user belongs.
          type: string
        display:
          description: The common name of the group.
          type: string
      example:
        value: e9e30dba-f08f-4109-8486-d5c6a331660a
        href: 'https://example.com/v2/Groups/e9e30dba-f08f-4109-8486'
        display: Tour Guides

    Identity:
      description: Information about user identity.
      type: object
      properties:
        type:
          description: The "type" sub-attribute is used to provide a classification meaningful to the (human) user.  The user interface should encourage the use of basic values of "driving_license", "ssn", and "other" and MAY allow additional type values to be used at the discretion of the service  client.
          type: string
          example: 'driving_license'
        value:
          description: The actual number as provided by issuing authority to identify user.
          type: string
          example: '05978345'
        issuingState:
          description: To be populated only in applicable identity types
          type: string
          example: 'GA'

    IMS:
      description: Instant messaging address for the user.
      type: object
      properties:
        value:
          description: A shortened version one of the following values - aim, gtalk, icq, xmpp, msn, skype, qq, yahoo, or other. This will change with popularity of various applicatiions at any time.
          type: string
        type:
          type: string
        primary:
          description: Flag to indicate primary account
          type: boolean
          default: false
      example:
        value: someaimhandle
        type: aim

    LoyaltyAccountStatus:
      description: Indicator of the account state as indicated by the loyalty issuer.
      type: string
      enum:
        - ENROLLED
        - ANONYMOUS
        - PARTIAL
        - PENDING_DATA
        - PENDING_VERIFICATION
        - INACTIVE
        - BLOCKED

    LoyaltyTransactionStatus:
      description: Indicates the status of an loyalty operation.
      type: string
      readOnly: true
      enum:
        - AUTHORIZED
        - AUTH_CANCELLED
        - AUTH_DECLINED
        - COMPLETED
        - COMPLETION_DECLINED
        - PENDING

    LoyaltyType:
      description: Identifier to indicate type of Loyalty program being registered.
      type: string
      enum:
        - LOCAL
        - NATIONAL

    OfferStatus:
      description: Maintain the status of stackable promotions
      type: object
      properties:
        code:
          description: Indicates offer status code, NOT_ACTIVATED | ACTIVATED | REDEEMED | DECLINED | CANCELLED | FAILED
          type: string
        statusInfo:
          description: Details about what to display, images, messaging, etc.
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
          uniqueItems: true

    OfferRealizationType:
      description: Identifier to indicate the type of a Loyalty Offer.
      type: string
      enum:
        - SPLIT_PAYMENT
        - PRE_ITEM_AMOUNT_OFF
        - POST_ITEM_AMOUNT_OFF
        - PRICE_ROLLBACK
        - HBD
        - TRANSACTION_LEVEL

    PersonName:
      description: The components of the user's name.
      type: object
      properties:
        formatted:
          description: The full name, including all middle names, titles, and suffixes as appropriate, formatted for display (e.g.,"Ms. Barbara Jane Jensen, III").
          type: string
        familyName:
          description: The family name of the User, or last name in most Western languages (e.g., "Jensen" given the full name "Ms. Barbara Jane Jensen, III").
          type: string
        givenName:
          description: The given name of the User, or first name in most Western languages (e.g., "Barbara" given the full name "Ms. Barbara Jane Jensen, III").
          type: string
        middleName:
          description:
            The middle name(s) of the User (e.g., "Jane" given the full name "Ms.
            Barbara Jane Jensen, III").
          type: string
        honorificPrefix:
          description: The honorific prefix(es) of the User, or title in most Western languages (e.g., "Ms." given the full name "Ms. Barbara Jane Jensen, III").
          type: string
        honorificSuffix:
          description:  The honorific suffix(es) of the User, or suffix in most Western languages (e.g., "III" given the full name "Ms. Barbara Jane Jensen, III").
          type: string
      example:
        formatted: Ms. Barbara J Jensen III
        familyName: Jensen
        givenName: Barbara
        middleName: Jane
        honorificPrefix: Ms.
        honorificSuffix: III

    Phone:
      description: Phone number for the user.
      type: object
      properties:
        value:
          description: The value SHOULD be specified according to the format defined in RFC3966, e.g., 'tel:+1-201-555-0123'.
          type: string
        type:
          description: Often has typical values of "work", "home", "mobile", "fax", "pager", and "other" and MAY allow more types to be defined by the service client.
          type: string
        extension:
          description: Defines the extension of the phone number.
          type: string
        primary:
          description: Defines if this entry is to be used as the primary or default for the user.
          type: boolean
          default: false
      example:
        value: 555-555-5555
        type: work
        extension: "2145"

    Photo:
      description:  A URI that is a uniform resource locator (as defined in Section 1.1.3 of RFC3986) that points to a resource location representing the user's image. The resource MUST be a file (e.g., a GIF, JPEG, or PNG image file) rather than a web page containing an image.
      type: object
      properties:
        value:
          description: URI pointing to user's image file.
          type: string
        type:
          description:
            Defines the following canonical values to represent popular photo
            sizes - "photo" and "thumbnail".
          type: string
      example:
        value: 'https://photos.example.com/profilephoto/72930000000Ccne/F'
        type: thumbnail

    ProgramStatus:
      description: Indicates if the given loyalty program is still active or not.
      type: string
      enum:
        - ENABLED
        - DISABLED
        - CONTRACTED_ONLY

    Question:
      description: Question and answer to validate a account profile.
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for a question
        value:
          type: string
          description: Question string
        answer:
          type: string
          description: Answer string

    ReferenceTokenType:
      description: Indicates if the given loyalty program is still active or not.
      type: string
      enum:
        - FORMAT_PRESERVING_MULTI_USE
        - FORMAT_PRESERVING_SINGLE_USE
        - CLAIM_CHECK_NONCE
        - RANDOM_MULTI_USE
        - RANDOM_SINGLE_USE
        - CLAIM_CHECK_NONCE_WITH_PINCAPTURE

    RewardDispensationCode:
      description: Indicates when a reward is to be redeemed.
      type: string
      enum:
        - INSTANT
        - DEFERRED

    RewardRealizationCode:
      description: Indicates how a reward is applied to a transaction.
      type: string
      enum:
        - NEW_PRICE
        - PERCENT_OFF
        - AMOUNT_OFF
        - EARN
        - REDEEM

    SaleItemType:
      description: Indicates the type of item
      type: string
      enum:
        - FUEL
        - CARWASH
        - OTHER

    SalePositionType:
      description: Indicator to determine the sale position
      type: string
      default: OUTSIDE_STORE
      enum:
        - INSIDE_STORE
        - OUTSIDE_STORE

    ServiceLevelCode:
      description: Indicates service level code.
      type: string
      default: 'S'
      enum:
        - S
        - F
        - N
        - X

    ThreeDSecure:
      description: Details of ThreeDSecure transaction used to process the challege flow
      type: object
      properties:
        transactionId:
          description: Transaction id generated on the server
          type: string
          example: "292bb6b886fc4446894f878b7e32bd5e"
        transactionStatus:
          type: string
          description: Transactions status of 3DS server
          example: "C"
        transactionStatusReason:
          type: string
          description: Reason for the transaction status
        challengeResponse:
          type: string
          example: "ewogIC"
        challengeIndicator:
          type: string
          example: "01 = No preference
                    02 = No challenge requested
                    03 = Challenge requested: 3DS Requestor Preference
                    04 = Challenge requested: Mandate"
        dsTransactionId:
          type: string
          example: "292bb6b886fc4446894f878b7e32bd5e"
        acsTransactionId:
          type: string
          example: "292bb6b886fc4446894f878b7e32bd5e"
        serverTransactionId:
          type: string
          example: "292bb6b886fc4446894f878b7e32bd5e"
        acsReferenceNumber:
          type: string
          example: "292bb6b886fc4446894f878b7e32bd5e"
        acsSignedContent:
          type: string
          example: "292bb6b88....6fc4446894f878b7e32bd5e"
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        challengeRequest:
          type: string
          example: "ewogICAiYW.......MjJjMGVjIgp9"
        acsUrl:
          type: string
          example: "https://test.modirum.com/dstests/ACSEmu2"
        iframeContent:
          type: string
          example: "<iframe></iframe>"
        termUrl:
          type: string
          example: "https://mydomain/3dstest?transactionId=292bb6b886fc4446894f878b7e32bd5e"
        isThreeDSMethodCompleted:
          type: boolean
          example: true
        isAuthenticationCompleted:
          type: boolean
          example: true
        cavv:
          type: string
          description: Card authenticaion verificaiton value
        threeDSVersion:
          type: string
        expiryDateTime:
          description: 3DS challenge transaction expiry date time.
          type: string
          readOnly: true
          format: date-time
          example: "2020-01-01T16:06:05Z"
        eci:
          type: string
          description: Electronic Commerce Indicator value

    User:
      description: User resource as defined by the System for Cross-domain Identity Management (SCIM). For more info see http://www.simplecloud.info
      type: object
      required:
        - externalId
      properties:
        id:
          description: Unique identifier for a customer profile registered with uCom.
          type: string
          readOnly: true
          example: "fdCustomerId"
        externalId:
          description: A String that is an identifier for the resource as defined by the provisioning client. While the server does not enforce uniqueness, it is assumed that the value's uniqueness is controlled by the client setting the value.
          type: string
          example: "123abc456def890ghi098jkl765mno"
        userName:
          description: A service provider's unique identifier for the user, typically used by the user to directly authenticate to the service provider.
          type: string
          example: "bjensen@example.com"
        name:
          $ref: '#/components/schemas/PersonName'
        displayName:
          description: 'The name of the user, suitable for display to end-users.'
          type: string
          example: Babs Jensen
        nickName:
          description:
            The casual way to address the user in real life, e.g., "Bob" or
            "Bobby" instead of "Robert".
          type: string
          example: Babs
        nationality:
          description:
            Nationality of the person or customer.
          type: string
          example: US
        dateOfBirth:
          $ref: '#/components/schemas/MonDayYear'
        gender:
          $ref: '#/components/schemas/Gender'
        profileUrl:
          description: A URI that is a uniform resource locator (as defined in Section 1.1.3 of [RFC3986]) and that points to a location representing the user's online profile (e.g., a web page)
          type: string
          example: 'https://login.example.com/bjensen'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Email'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        phoneNumbers:
          type: array
          items:
            $ref: '#/components/schemas/Phone'
        ims:
          type: array
          items:
            $ref: '#/components/schemas/IMS'
        photos:
          type: array
          items:
            $ref: '#/components/schemas/Photo'
        userType:
          description: Used to identify the relationship between the organization and the user.
          type: string
          example: Employee
        title:
          description: 'The user''s title, such as "Vice President".'
          type: string
          example: Tour Guide
        preferredLanguage:
          description: Indicates the user's preferred written or spoken languages and is generally used for selecting a localized user interface.
          type: string
          example: en-US
        locale:
          description: Used to indicate the User's default location for purposes of localizing such items as currency, date time format, or numerical representations.
          type: string
          example: en-US
        timezone:
          description: The User's time zone
          type: string
          example: America/Los_Angeles
        active:
          description: A Boolean value indicating the user's administrative status. The definitive meaning of this attribute is determined by the service provider.
          type: boolean
          example: true
        password:
          description: This attribute is intended to be used as a means to set, replace, or compare (i.e., filter for equality) a password.
          type: string
          example: some-hashed-value
        groups:
          description: A list of groups to which the user belongs, either through direct membership, through nested groups, or dynamically calculated.
          type: array
          items:
            $ref: '#/components/schemas/Group'
        identities:
          type: array
          items:
            $ref: '#/components/schemas/Identity'

    ValueAddCurrencyType:
      description: Indicates the type of units used to show value of a reward.
      type: string
      enum:
        - MONEY
        - POINTS
        - DISTANCE
        - COUNTS
        - VOLUMES
        - VISITS
        - PERCENTAGE

#-------------------------------------
# Document Change Log
# 0.2.3
#     - No Changes
# 0.2.2
#     - No Changes
# 0.2.0
#     - Added 'OTHER' CreditCardType
#     - Added fields in ThreeDSecure object
#     - Added Price tier in POSItem
#     - Added hostExtraInfo in the balance/transaction API calls
#     - Added Merchant id as header field
# 0.1.9
#     - OfferRealizationType enum - Add TRANSACTION_LEVEL
#     - Updated Reward transactionLevel to add priceAdjustments
#     - Updated PriceAdjustment to add maxQuantity
#     - Added new API for deleting offers by transaction id
#     - Added washcodes under POSItem
#     - Added OfferStatus under PriceAdjustments
# 0.1.8
#     - Updated Reward lineItemLevel to add SaleItem
#     - Added 3ds web support
#     - Added percentage currency type
# 0.1.7
#     - Added reward description in Reward
#     - Added new API to retrieve balance based on request id
#     - Updated PriceAdjustment as list under POSItem
#     - Added 3ds challenge transaction expiry date time in ThreeDSecure
# 0.1.6
#     - Add OfferRealizationType enum to PromotionalOffer
#     - Add posAdjustment (type PriceAdjustment) to PromotionalOffer
#     - Add saleItems array of POSItem to PromotionalOfferQualifiers
#     - Adjusted the response payload to return loyaltyAccount object for /v1/loyalty/accounts API.
#     - Added ExpiryDate in Loyalty object
#     - Added Accept-Language header field
# 0.1.5
#     - Added 'currencyValue' & 'currencyCode' to LoyaltyBalance
#     - Added Link in the Error object.
#     - acsSignedContent and CardType in threeDSecureInfo object
# 0.1.4
#     - Added ServiceLevelCode under POSItem
#     - Updated salesLineItem with POSItem across all ymls. POSItem is superset of salesLineItem.
#     - Added requestType and requestedAmount fields on the request object
#     - Added offerCostInfo  in the PromotionalOffers entity
#     - Added 'rate' to TaxDetails
#     - Added PriceAdjustment under POSItem
#     - Added new API's for Opt-In
#     - Updated loyalty reference as loyaltyAccount in the availableOffers and selectOffer API's
# 0.1.3
#     - Adding NVP with valueAsList
#     - No change.
#     - update in DeviceInfo.
#     - Added select offer API for obtaining offer
#     - Added few additional fields in PromotionalOffers entity
# 0.1.2
#     - Modified Http method type from GET to POST for loyalty account retrieval and transactions APIs.
# 0.1.1
#   - No change.
# 0.1.0
#      - Added client-token in the header field
# 0.0.9
#   - Added 'nameOnCard', 'cardType', 'expiryDate', 'cardSubType', 'billingAddress' attribute in ReferenceToken object
# 0.0.8
#   - Cleaned up items that aren't required with the remodeled services
#   - Created new APIs, removed ones not used
#   - Setup APIs as loyalty and offers categories (tags)
# 0.0.7
#   - Updated ReferenceToken to have more accurate attribute names, removed use value
#   - Cleaned up examples in the models
# 0.0.6
#     - No change.
# 0.0.5
#     - No change.
# 0.0.4
#     - Initial Version
#-------------------------------------

openapi: 3.0.1
info:
  title: uCom Value-Add Services
  description: Services related to loyalty accounts such as new account creation, card registration, card transaction history, card details etc.
  version: 0.2.3
servers:
- url: https://int.api.firstdata.com/ucom
tags:
- name: loyalty
  description: Operations and details about a loyalty accounts.
- name: offers
  description: Operations and details about offers
paths:
  /v1/loyalty/accounts:
    post:
      x-group-name: Value Added Services
      x-proxy-name: Get Loyalty Account Details
      tags:
      - loyalty
      summary: Get loyalty account details
      description: Get loyalty account details from the issuer systems.  This is a general inquiry and not for information related to being vaulted at First Data.
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        description: Details about loyalty account information.
        content:
          application/json:
            schema:
              type: object
              properties:
                fdCustomerId:
                  $ref: '#/components/schemas/FdCustomerId'
                fdAccountId:
                  $ref: '#/components/schemas/FdAccountId'
                loyaltyAccount:
                  $ref: '#/components/schemas/Loyalty'
                hostExtraInfo:
                  minItems: 0
                  uniqueItems: true
                  type: array
                  items:
                    $ref: '#/components/schemas/NVP'
        required: false
      responses:
        200:
          $ref: '#/components/responses/OK'
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        500:
          $ref: '#/components/responses/ServerError'

  /v1/loyalty/accounts/{requestId}:
    get:
      x-group-name: Value Added Services
      x-proxy-name: Get Loyalty Account Details Based on requestId
      tags:
      - loyalty
      summary: Get loyalty account details based on requestId
      description: Get loyalty account details based on requestId
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      - $ref: '#/components/parameters/RequestIdParam'
      responses:
        200:
          $ref: '#/components/responses/BalanceResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
        401:
          $ref: '#/components/responses/Unauthorized'
        500:
          $ref: '#/components/responses/ServerError'

  /v1/loyalty/accounts/send-verification:
    post:
      x-group-name: Value Added Services
      x-proxy-name: Initiate Action Against requestId
      tags:
      - loyalty
      summary: Initiate some action against a loyalty account
      description: Reserved for calls that initiate an action outside of normal CRUD behavior and not easily modeled.
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/ClientRequestIdParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        description: Details about what action to initiate.
        content:
          application/json:
            schema:
              type: object
              properties:
                fdCustomerId:
                  $ref: '#/components/schemas/FdCustomerId'
                fdAccountId:
                  $ref: '#/components/schemas/FdAccountId'
                loyaltyAccount:
                  $ref: '#/components/schemas/Loyalty'
        required: false
      responses:
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        500:
          $ref: '#/components/responses/ServerError'

  /v1/loyalty/transactions:
    post:
      x-group-name: Value Added Services
      x-proxy-name: Get Account Details
      tags:
      - loyalty
      summary: Get loyalty account details - account information, status
      description: Get loyalty account details - account information, status
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/StartDateParam'
      - $ref: '#/components/parameters/EndDateParam'
      - $ref: '#/components/parameters/PageNumberParam'
      - $ref: '#/components/parameters/PageSizeParam'
      - $ref: '#/components/parameters/FiltersParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        description: Details about loyalty account information.
        content:
          application/json:
            schema:
              type: object
              properties:
                fdCustomerId:
                  $ref: '#/components/schemas/FdCustomerId'
                fdAccountId:
                  $ref: '#/components/schemas/FdAccountId'
                loyaltyAccount:
                  $ref: '#/components/schemas/Loyalty'
                hostExtraInfo:
                  minItems: 0
                  uniqueItems: true
                  type: array
                  items:
                    $ref: '#/components/schemas/NVP'
        required: false
      responses:
        200:
          description: List of loyalty transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoyaltyTransaction'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

  /v1/value-add/available-offers:
    post:
      x-group-name: Value Added Services
      x-proxy-name: Get Available Offers
      tags:
      - offers
      summary: Creates an offer event for a client
      description: Based on a combination of criteria, get available offers and return details to the client application.
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        description: Details about what fields to update for the given loyalty account.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OffersRequest'
        required: false
      responses:
        200:
          description: List of available offers
          content:
            application/json:
              schema:
                type: object
                properties:
                  availOffersTrxnId:
                    type: string
                    description: Identifier to be carried along with subsequent interactions using the available offers returned to the client.
                  basket:
                    type: object
                    properties:
                      saleItems:
                        type: array
                        items:
                          $ref: '#/components/schemas/POSItem'
                      currencyCode:
                        $ref: '#/components/schemas/ISO-4217'
                  offers:
                    type: array
                    items:
                      $ref: '#/components/schemas/PromotionalOffer'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

  /v1/value-add/available-offers/{availOffersTrxnId}:
    delete:
      x-group-name: Value Added Services
      x-proxy-name: Cancel previously authorized offers
      tags:
      - offers
      summary: Deletes available offers by transactionId
      description: Cancel previously authorized offers
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      - $ref: '#/components/parameters/AvailOffersTrxnIdParam'
      responses:
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

  /v1/value-add/select-offer:
    post:
      x-group-name: Value Added Services
      x-proxy-name: Activate an Offer
      tags:
      - offers
      summary: Activates an offer with the loyalty host
      description: Based on a combination of criteria, an offer can be obtained from the list of available offers.
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        description: Details about what fields needed for obtaining an offer.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelectOfferRequest'
        required: false
      responses:
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

  /v1/value-add/opt-ins/acknowledge:
    post:
      x-group-name: Value Added Services
      x-proxy-name: Submit Opt-in Consent
      tags:
      - opt-ins
      summary: Submits opt-in consents with the host
      description: Based on a combination of criteria, Submits consents and return details to the client application.
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        description: Details about what fields to update for the given loyalty account.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OptInRequest'
        required: false
      responses:
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

  /v1/value-add/opt-ins:
    post:
      x-group-name: Value Added Services
      x-proxy-name: Retrieve Consent Information
      tags:
      - opt-ins
      summary: Retrieving the consent information for a given loyalty account from the host
      description: Based on a combination of criteria, Gets the list of consents.
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        description: Details about what fields needed for retrieving content.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OptInRequest'
        required: false
      responses:
        200:
          description: List the status of consents
          content:
            application/json:
              schema:
                type: object
                properties:
                  consents:
                    minItems: 0
                    type: array
                    items:
                      $ref: '#/components/schemas/Consent'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

components:
  schemas:
    #-------------------------------------
    # Operational Models
    #-------------------------------------
    OptInRequest:
      title: OptIn request
      type: object
      properties:
        accountInfo:
          type: object
          properties:
            fdCustomerId:
              $ref: '#/components/schemas/FdCustomerId'
            fdAccountId:
              $ref: '#/components/schemas/FdAccountId'
            loyaltyAccount:
              $ref: '#/components/schemas/Loyalty'
          description: Accounts that is request to perform opt-in
        consents:
          minItems: 0
          type: array
          description: Consent details
          items:
            $ref: '#/components/schemas/Consent'

    OffersRequest:
      title: Offers request
      type: object
      properties:
        merchantInfo:
          $ref: '#/components/schemas/StoreDetail'
        basket:
          type: object
          properties:
            saleItems:
              type: array
              items:
                $ref: '#/components/schemas/POSItem'
            currencyCode:
              $ref: '#/components/schemas/ISO-4217'
            requestedAmount:
              $ref: '#/components/schemas/RequestedAmount'
        requestType:
          minItems: 0
          type: array
          description: Offers request type
          items:
            type: string
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
        accountInfo:
          type: object
          properties:
            fdCustomerId:
              $ref: '#/components/schemas/FdCustomerId'
            fdAccountId:
              $ref: '#/components/schemas/FdAccountId'
            loyaltyAccount:
              $ref: '#/components/schemas/Loyalty'
            hostExtraInfo:
              minItems: 0
              uniqueItems: true
              type: array
              items:
                $ref: '#/components/schemas/NVP'
          description: Accounts that may have applicable offers

    SelectOfferRequest:
      type: object
      properties:
        fdCustomerId:
          $ref: '#/components/schemas/FdCustomerId'
        fdAccountId:
          $ref: '#/components/schemas/FdAccountId'
        loyaltyAccount:
          $ref: '#/components/schemas/Loyalty'
        promotionalOffer:
          $ref: '#/components/schemas/PromotionalOffer'
      description: Offer that will be used for selection.

    #-------------------------------------
    # Resource Models
    #-------------------------------------
    Address:
      type: object
      properties:
        type:
          type: string
          description: Canonical type values of "work", "home", and "other".
        streetAddress:
          type: string
          description: The full street address component, which may include house number, street name, P.O. box, and multi-line extended street address information.
        locality:
          type: string
          description: The city or locality component.
        region:
          type: string
          description: The state or region component.
        postalCode:
          type: string
          description: The zip code or postal code component.
        country:
          type: string
          description: The country name component.  When specified, the value MUST be in ISO 3166-1 "alpha-2" code format; e.g., the United States and Sweden are "US" and "SE", respectively.
        formatted:
          type: string
          description: The full mailing address, formatted for display or use with a mailing label.
        primary:
          type: boolean
          description: Indicates if this is the default address for the associated resource. It only has meaning when used in a set or array of addresses.
      description: A physical mailing address for this user.
      example:
        type: work
        streetAddress: 100 Universal City Plaza
        locality: Hollywood
        region: CA
        postalCode: "91608"
        country: US
        formatted: |-
          100 Universal City Plaza
          Hollywood, CA 91608 US
        primary: true

    Consent:
      type: object
      properties:
        consentId:
          type: string
        consentVersion:
          type: string
          example: ESS_APP_001
        consentChannel:
          type: string
          example: ESS_092019
        consentType:
          type: string
          example: LOYALTY
        additionalInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
      description: Contains information about Opt-In consent

    ExpiryDate:
      type: object
      properties:
        month:
          maxLength: 2
          minLength: 2
          pattern: '[0-9]{2,2}'
          type: string
          description: Month format 'MM'
          example: "09"
        year:
          maxLength: 2
          minLength: 2
          pattern: '[0-9]{2,2}'
          type: string
          description: Year format 'YY'
          example: "20"
        singleValue:
          maxLength: 6
          minLength: 4
          type: string
          description: Month and year together, 'MMYY' or 'MMYYYY'.  If the latter format, the string will be parsed and validated per the given format.  Any other format will be rejected.
      description: Contains account expiration data and needs to either send the values in individual fields OR as a singleValue.

    FdCustomerId:
      title: FD Customer ID
      type: string
      description: FD customer identifier tied to the vaulted accounts.
      example: cuid-0987613457398475

    FdAccountId:
      type: string
      description: Unique identifier for a customer account vaulted with uCom
      example: muid-3d4f2ac...c91014f2dc1

    ISO-4217:
      type: object
      properties:
        code:
          type: string
          example: USD
          default: USD
        number:
          type: integer
          example: 840
        digits:
          type: integer
          example: 2
        currency:
          type: string
          example: US Dollar
          default: US Dollar
      description: Holds currency information

    Link:
      required:
      - href
      - rel
      type: object
      properties:
        href:
          type: string
          description: URL to linked resource.
          format: uri
        rel:
          type: string
          description: Defines the type of link relationship to current resource.
          example: self
          enum:
          - current.page
          - previous.page
          - next.page
          - self
        method:
          type: string
          description: Defines the HTTP method for the given href.
          example: GET
          default: GET
        id:
          type: string
          description: Identifier to the resource.
          example: 415e5cf6bfdb11e8a355529269fb1459
      description: Model to communicate linked resources.

    Loyalty:
      type: object
      properties:
        accountId:
          type: string
          description: Account identifier, can be used for traditional card number or any alphanumeric value.  For example, a unique value not shown on the card, email address, phone number, social id, etc.
          example: email-id@example.com
        cardNumber:
          type: string
          description: Card number of loyalty account. The accountId parameter supersedes this field.  This field is ignored when the request is to create a new account.
          example: "905960447"
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        alias:
          type: string
          description: Last four values of the cardNumber
          readOnly: true
          example: "1111"
        accountStatus:
          $ref: '#/components/schemas/LoyaltyAccountStatus'
        loyaltyProgram:
          $ref: '#/components/schemas/LoyaltyProgram'
        pin:
          type: string
          description: Security pin number
        communications:
          type: object
          properties:
            email:
              type: boolean
            phone:
              type: boolean
            sms:
              type: boolean
          description: Methods the account owner has agreed to be contacted
        commonFlags:
          type: object
          properties:
            tncAccepted:
              type: boolean
            canEarn:
              type: boolean
            canRedeem:
              type: boolean
            isChildAccount:
              type: boolean
            isVirtualAccount:
              type: boolean
              description: Indicates if the account has an associated plastic card or not.
          description: Common true/false settings on an account
        balance:
          $ref: '#/components/schemas/LoyaltyBalance'
        token:
          $ref: '#/components/schemas/ReferenceToken'
        metadata:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
      description: Information about a Loyalty account.

    LoyaltyBalance:
      type: object
      properties:
        balance:
          type: number
        minRedeemUnits:
          type: number
        maxRedeemUnits:
          type: number
        unitType:
          $ref: '#/components/schemas/BalanceUnitTypes'
        conversionRatio:
          type: number
        currencyValue:
          type: number
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'

    LoyaltyProgram:
      type: object
      properties:
        programId:
          type: string
          description: Unique identifier used to provide link between applications across disparate systems.
        hostProgramId:
          type: string
          description: Loyalty program Id used by the host (cloud) solution. Not in used in uCom system. For future use.
        programName:
          type: string
          description: Loyalty program name. Common name for the given loyalty program
        programDesc:
          type: string
          description: Used to describe the loyalty program and perhaps used to display to the client.
        programProvider:
          type: object
          description: Sponsor of the loyalty program.
        loyaltyType:
          $ref: '#/components/schemas/LoyaltyType'
        programStatus:
          $ref: '#/components/schemas/ProgramStatus'
      description: Value object to hold a list of loyalty items.

    LoyaltyTransaction:
      title: Loyalty Account Transaction
      type: object
      properties:
        transactionDateTime:
          type: string
          description: The "DateTime" that the transaction was performed.
          format: date-time
        transactionType:
          type: string
          description: Transaction type as defined by the account issuer.
        transactionUnits:
          type: number
        unitType:
          $ref: '#/components/schemas/BalanceUnitTypes'
        balance:
          $ref: '#/components/schemas/LoyaltyBalance'

    LoyaltyBalanceTransactionInfo:
      type: object
      properties:
        requestId:
          type: string
          description: Unique identifier of request used to retrieve balance.
          readOnly: true
          example: 485-27834-285903824-095
        requestStatus:
          $ref: '#/components/schemas/RequestStatus'
        createdDateTime:
          type: string
          description: Date and time of resource creation.
          format: date-time
          readOnly: true
          example: 2016-04-16T16:06:05Z
        lastUpdatedDateTime:
          type: string
          description: Last updated Date and time of resource.
          format: date-time
          readOnly: true
          example: 2016-04-16T16:06:05Z
        balances:
          type: array
          items:
            $ref: '#/components/schemas/LoyaltyBalanceInfo'
      description: Loyalty balance transaction response.

    LoyaltyBalanceInfo:
      type: object
      properties:
        loyalty:
          $ref: '#/components/schemas/Loyalty'
        balanceStatus:
          $ref: '#/components/schemas/BalanceStatus'
        hostExtraInfo:
          minItems: 0
          uniqueItems: true
          type: array
          description: Key value pairs providing additional details from host on the balance retrieval. Key 'host.account.status' will provide current account status from the host. Key 'host.transaction.status' will provide the transaction result as success or failure. Key 'host.transaction.error' will provide error message from Host if transaction status is failure
          items:
            $ref: '#/components/schemas/NVP'

    NVP:
      title: Name and Value pair.
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        valueAsList:
          minItems: 0
          type: array
          items:
            type: string

    POSItem:
      type: object
      properties:
        itemDescription:
          type: string
          example: Standard Wash
        itemPrice:
          type: number
          format: double
          example: 7.5
        unitOfMeasurement:
          type: string
          example: each
        unitsSold:
          type: number
          format: double
          example: 1.0
        totalItemSaleAmount:
          type: number
          format: double
          example: 7.5
        originalItemPrice:
          type: number
          format: double
          example: 7.5
        originalTotalSaleAmount:
          type: number
          format: double
          example: 7.5
        posCodeFormat:
          type: string
          example: plu
        posCode:
          type: string
          example: "102"
        posCodeModifier:
          type: string
          example: "1"
        productCode:
          type: string
          example: "102"
        tax:
          type: array
          items:
            $ref: '#/components/schemas/TaxDetails'
        type:
          $ref: '#/components/schemas/SaleItemType'
        serviceLevelCode:
          $ref: '#/components/schemas/ServiceLevelCode'
        priceAdjustments:
          type: array
          items:
            $ref: '#/components/schemas/PriceAdjustment'
        washCodes:
          type: array
          items:
            $ref: '#/components/schemas/WashCode'
        priceTier:
          type: string
      description: Structure to support passing POS sale info as part of the sale request.

    PromotionalOffer:
      type: object
      properties:
        offerReferenceId:
          type: string
          description: Unique identifier for an offer.
        offerName:
          type: string
          description: Common name for the reward.
        offerDescription:
          type: string
          description: Description about the reward details.
        type:
          type: object
          description: Type can be used to distinguish offers, i.e EARN
        offerProvider:
          type: string
          description: Provider name of the offer
        partnerGroup:
          minItems: 0
          type: array
          description: Partner group names where the offer can be obtained
          items:
            type: string
        offerMessage:
          type: string
          description: The offer information that is for the client to see on the user-interface.  This is most often set by the host system.
        effectiveDateTime:
          type: string
          description: Starting time for a reward validity.
          format: date-time
        expiryDateTime:
          type: string
          description: Ending time for a reward to be applied.
          format: date-time
        visibleFrom:
          type: string
          description: Date when offer will start the visibility.
          format: date-time
        visibleTo:
          type: string
          description: Date when offer will end the visibility.
          format: date-time
        registrationFrom:
          type: string
          description: Date when offer start with the registration.
          format: date-time
        registrationTo:
          type: string
          description: Date when offer end with the registration.
          format: date-time
        promotionId:
          type: string
          description: Links to associated promotion if it applies.
        isExclusive:
          type: boolean
          description: Indicator if offer can be combined with other offers or is mutually exclusive.
        userAcceptanceRequired:
          type: boolean
          description: Indicator if a user has to accept the offer before it can be applied to a transaction or accrued in an account.
        offerStatus:
          $ref: '#/components/schemas/OfferStatus'
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'
        qualifiers:
          type: object
          properties:
            currency:
              type: array
              items:
                type: object
                properties:
                  currencyType:
                    $ref: '#/components/schemas/ValueAddCurrencyType'
                  value:
                    type: string
                    description: Value of the reward in the associated currency.
            saleItems:
              type: array
              items:
                $ref: '#/components/schemas/POSItem'
          description: Conditions that must be met for the reward to be awarded.
        offerCostInfo:
          type: object
          properties:
            currency:
              type: array
              items:
                type: object
                properties:
                  currencyType:
                    $ref: '#/components/schemas/ValueAddCurrencyType'
                  value:
                    type: string
                    description: Value of the Offer cost associated with currency.
            saleItems:
              type: array
              items:
                $ref: '#/components/schemas/POSItem'
          description: Offer cost details.
        reward:
          $ref: '#/components/schemas/Reward'
        metadata:
          minItems: 0
          uniqueItems: true
          type: array
          description: Details about what to display, images, messaging, etc.
          items:
            $ref: '#/components/schemas/NVP'
        offerRealizationType:
          $ref: '#/components/schemas/OfferRealizationType'
      description: Offer opportunity details

    PriceAdjustment:
      type: object
      properties:
        adjustmentId:
          type: string
          example: discount prepay
        productCode:
          type: string
          example: "941"
        programID:
          type: string
          example: P66
        reason:
          type: string
          example: loyaltyOffer
        amount:
          type: number
          format: double
          example: 0.1
        percentage:
          type: number
          format: float
          example: 10.0
        itemPrice:
          type: number
          format: double
          example: 7.5
        unitOfMeasurement:
          type: string
          example: each
        unitsSold:
          type: number
          format: double
          example: 1.0
        rebateLabel:
          type: string
          example: HostDiscount
        maxQuantity:
          type: number
          format: double
          example: 7.5
        offerStatus:
          $ref: '#/components/schemas/OfferStatus'
      description: Structure to support providing price adjustment for sale item.

    RequestedAmount:
      title: Requested Amount
      minimum: 0
      exclusiveMinimum: true
      type: number
      description: Requested amount for the given redemption request in lower denomination.
      format: double
      example: 500.00

    ReferenceToken:
      type: object
      properties:
        tokenId:
          type: string
          description: Actual token value
          example: 292bb6b886fc4446894f878b7e32bd5e
        tokenProvider:
          type: string
          description: Indicates what system is the originator of the token
          example: TRANS_ARMOR or NETWORK_TOKEN or THIRD_PARTY_NETWORK_TOKEN
        cryptogram:
          type: string
          description: 28 or 56 characters for Visa / Mastercard. 4 characters for Discover / Amex. Required for CIT. Not required for MIT.
          example: 3CguW5ecfTz...Yuhw=
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        tokenType:
          $ref: '#/components/schemas/ReferenceTokenType'
        nameOnCard:
          type: string
          description: Name as printed on physical card or on virtual account
          example: John Smith
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        cardSubType:
          type: string
          description: Merchant or brand specific information about the type of account
          example: ABCD
        billingAddress:
          $ref: '#/components/schemas/Address'
      description: Surrogate value used to represent a handle to an account without sharing PCI/PII data to look it up.

    Reward:
      type: object
      properties:
        rewardId:
          type: string
          description: Unique identifier for the reward instance
        rewardDescription:
          type: string
          description: reward description
        effectiveDateTime:
          type: string
          description: Starting time for a reward validity.
          format: date-time
        expiryDateTime:
          type: string
          description: Ending time for a reward to be applied.
          format: date-time
        offerReferenceId:
          type: string
          description: Link to the offer that provided the opportunity for a customer to receive the reward.
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'
        values:
          type: object
          properties:
            transactionLevel:
              type: array
              items:
                type: object
                properties:
                  currencyType:
                    $ref: '#/components/schemas/ValueAddCurrencyType'
                  value:
                    type: string
                    description: Value of the reward in the associated currency.
                  realizationCode:
                    $ref: '#/components/schemas/RewardRealizationCode'
                  priceAdjustments:
                    type: array
                    items:
                      $ref: '#/components/schemas/PriceAdjustment'
            lineItemLevel:
              type: array
              items:
                type: object
                properties:
                  saleItem:
                    $ref: '#/components/schemas/POSItem'
                  realizationCode:
                    $ref: '#/components/schemas/RewardRealizationCode'
          description: Medium of exchange for the value.
        dispensationCode:
          $ref: '#/components/schemas/RewardDispensationCode'
      description: Reward details

    StoreDetail:
      type: object
      properties:
        locationId:
          type: string
          example: "50001"
      description: Store details.
    TaxDetails:
      type: object
      properties:
        code:
          type: string
          example: TX01
        description:
          type: string
          example: Sales Tax
        amount:
          type: string
          example: "7.50"
        rate:
          type: string
          example: "13.5"
      description: Tax details.

    ThreeDSecure:
      type: object
      properties:
        transactionId:
          type: string
          description: Transaction id generated on the server
          example: 292bb6b886fc4446894f878b7e32bd5e
        transactionStatus:
          type: string
          description: Transactions status of 3DS server
          example: C
        transactionStatusReason:
          type: string
          description: Reason for the transaction status
        challengeResponse:
          type: string
          example: ewogIC
        challengeIndicator:
          type: string
          example: '01 = No preference 02 = No challenge requested 03 = Challenge requested: 3DS Requestor Preference 04 = Challenge requested: Mandate'
        dsTransactionId:
          type: string
          example: 292bb6b886fc4446894f878b7e32bd5e
        acsTransactionId:
          type: string
          example: 292bb6b886fc4446894f878b7e32bd5e
        serverTransactionId:
          type: string
          example: 292bb6b886fc4446894f878b7e32bd5e
        acsReferenceNumber:
          type: string
          example: 292bb6b886fc4446894f878b7e32bd5e
        acsSignedContent:
          type: string
          example: 292bb6b88....6fc4446894f878b7e32bd5e
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        challengeRequest:
          type: string
          example: ewogICAiYW.......MjJjMGVjIgp9
        acsUrl:
          type: string
          example: https://test.modirum.com/dstests/ACSEmu2
        iframeContent:
          type: string
          example: <iframe></iframe>
        termUrl:
          type: string
          example: https://mydomain/3dstest?transactionId=292bb6b886fc4446894f878b7e32bd5e
        isThreeDSMethodCompleted:
          type: boolean
          example: true
        isAuthenticationCompleted:
          type: boolean
          example: true
        cavv:
          type: string
          description: Card authentication verification value
        threeDSVersion:
          type: string
        expiryDateTime:
          type: string
          description: 3DS challenge transaction expiry date time.
          format: date-time
          readOnly: true
          example: 2020-01-01T16:06:05Z
        eci:
          type: string
          description: Electronic Commerce Indicator value
      description: Details of ThreeDSecure transaction used to process the challenge flow

    WashCode:
      type: object
      properties:
        code:
          type: string
          description: Wash code generated by the POS system.
        description:
          type: string
          description: Wash code description generated by the POS system.
        expiration:
          type: string
          description: Expiration date for the purchased wash code
          format: date-time
        message:
          type: string
          description: Field to carry message from site system for display to customer.
      description: Purchased wash information.

    #-------------------------------------
    # Common Models
    #-------------------------------------
    DeviceInfo:
      required:
      - id
      - kind
      type: object
      properties:
        id:
          type: string
          description: Unique Id for the device. Value should not contain line feeds, carriage returns, tabs, leading or trailing spaces, or multiple spaces.
          example: 537edec8-d33e-4ee8-93a7-b9f61876950c
        kind:
          type: string
          description: Possible values are mobile, wearable, automobile, embedded,desktop, other.
          example: mobile
        details:
          title: deviceData
          minItems: 0
          uniqueItems: true
          type: array
          description: Device data information from multiple providers.
          items:
            type: object
            properties:
              provider:
                type: string
                description: Identifies the provider of the data and is often used when decrypting data on the server.
                example: InAuth
              dataCapture:
                type: object
                properties:
                  rawData:
                    type: string
                    description: Device capture - raw data blob
                    example: aaaaaXREUVZGRlFY...aMV
                  dataEventId:
                    type: string
                    description: Event identifier used map state on the server.
                    example: BB8E4E92...Fz1E063113
                  captureTime:
                    type: string
                    description: Device data capture time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
                    format: date-time
                    example: 2016-04-16T16:06:05Z
                description: Device data captured as a bundle and transmitted as an encrypted and/or specifically formatted string.
              dataStatic:
                type: object
                properties:
                  os:
                    type: string
                    description: Device OS name
                    example: Android 5.1.1 Lollipop
                  osVersion:
                    type: string
                    description: Device OS version
                    example: 5.1.1 Lollipop
                  model:
                    type: string
                    description: Device model
                    example: XT1540
                  type:
                    type: string
                    description: Device type
                    example: Moto G
                description: Device static details
              dataDynamic:
                type: object
                properties:
                  latitude:
                    type: string
                    description: Device position - latitude at the time of the data event
                    example: 13.0827 N
                  longitude:
                    type: string
                    description: Device position - longitude at the time of the data event
                    example: 80.2707 E
                  ipAddress:
                    type: string
                    description: IP address
                    example: 172.27.37.221
                  captureTime:
                    type: string
                    description: Device data capture time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
                    format: date-time
                    example: 2016-04-16T16:06:05Z
                description: Device location details
              dataApplication:
                type: object
                properties:
                  version:
                    type: string
                    description: Mobile application version.
                    format: sting
                    example: 1.0.0
                  name:
                    type: string
                    description: Mobile application name.
                    format: sting
                    example: application-name
                  country:
                    type: string
                    description: Mobile application store country.
                    format: sting
                    example: US
                description: Mobile application specific data
            description: Collection of device data
        additionalInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
      description: Request origin device details
      example:
        id: 537edec8-d33e-4ee8-93a7-b9f61876950c
        kind: mobile
        details:
        - provider: InAuth
          dataCapture:
            rawData: aaaaaXREUVZGRlFY...aMV
            dataEventId: BB8E4E92...Fz1E063113
            captureTime: 2016-04-16T16:06:05Z
          dataStatic:
            os: Android 5.1.1 Lollipop
            osVersion: 5.1.1 Lollipop
            model: XYX-1
            Type: Moto G
          dataDynamic:
            latitude: 13.0827 N
            longitude: 80.2707 E
            ipAddress: 172.27.37.221
            captureTime: 2016-04-16T16:06:05Z
        additionalInfo:
        - name: some-key
          value: some-value

    Error:
      type: object
      properties:
        code:
          type: string
          description: Uniquely identifies an error condition. Client applications need to read and handle errors based on this.
        message:
          type: string
          description: A generic description of the error condition.
        category:
          type: string
          description: The resource associated with the error condition.
        developerInfo:
          type: object
          properties:
            developerMessage:
              type: string
              description: An elaborative description of the error description.
            moreInfo:
              type: string
              description: Link to the error in Developer page.
            fieldError:
              type: array
              description: Detailed information about message format errors.
              items:
                type: object
                properties:
                  field:
                    type: string
                    description: The property or attribute associated with the error
                  message:
                    type: string
                    description: Information specific to a property or attribute.
          description: Information that needs to be understood by the client developers and should not be interpreted for application processing.
        hostExtraInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
        threeDSecureInfo:
          $ref: '#/components/schemas/ThreeDSecure'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
      description: Model for error messaging
      example:
        code: "40000"
        message: Example Error
        category: example
        developerInfo:
          developerMessage: Invalid Message format in request payload
          moreInfo: https://www.example.com/errors/40000
          fieldError:
          - field: example id
            message: exampleId is mandatory

    #-------------------------------------
    # ENUM Models
    #-------------------------------------
    BalanceUnitTypes:
      type: string
      description: Indicator to determine how to display balances
      enum:
      - CENTS
      - MILES
      - POINTS
      - STARS
      - LITRES

    BalanceStatus:
      type: string
      description: Indicates the status of the balance transaction of a given account. 'INPROGRESS' - Balance retrieval is still in in progress 'COMPLETED' - Balance is available 'ERROR' - Balance retrieval failed. System error 'UNAVAILABLE' - Balance is not available. Check Host extra info for additional details
      enum:
      - INPROGRESS
      - COMPLETED
      - ERROR
      - UNAVAILABLE

    CreditCardType:
      title: Credit Card Type
      type: string
      description: Indicates the type of credit account association
      enum:
      - AMEX
      - DISCOVER
      - MASTERCARD
      - PLCC
      - VISA
      - OTHER

    LoyaltyAccountStatus:
      type: string
      description: Indicator of the account state as indicated by the loyalty issuer.
      enum:
      - ENROLLED
      - ANONYMOUS
      - PARTIAL
      - PENDING_DATA
      - PENDING_VERIFICATION
      - INACTIVE
      - BLOCKED

    LoyaltyType:
      type: string
      description: Identifier to indicate type of Loyalty program being registered.
      enum:
      - LOCAL
      - NATIONAL

    OfferStatus:
      type: object
      properties:
        code:
          type: string
          description: Indicates offer status code, NOT_ACTIVATED | ACTIVATED | REDEEMED | DECLINED | CANCELLED | FAILED
        statusInfo:
          minItems: 0
          uniqueItems: true
          type: array
          description: Details about what to display, images, messaging, etc.
          items:
            $ref: '#/components/schemas/NVP'
      description: Maintain the status of stackable promotions

    OfferRealizationType:
      type: string
      description: Identifier to indicate the type of a Loyalty Offer.
      enum:
      - SPLIT_PAYMENT
      - PRE_ITEM_AMOUNT_OFF
      - POST_ITEM_AMOUNT_OFF
      - PRICE_ROLLBACK
      - HBD
      - TRANSACTION_LEVEL

    ProgramStatus:
      type: string
      description: Indicates if the given loyalty program is still active or not.
      enum:
      - ENABLED
      - DISABLED
      - CONTRACTED_ONLY

    RequestStatus:
      type: string
      description: Indicates the status of the overall request. 'INPROGRESS' - Balance retrieval is still in in progress for one or more accounts 'COMPLETED' - Balance retrieval is completed for all accounts
      enum:
      - INPROGRESS
      - COMPLETED

    ReferenceTokenType:
      type: string
      description: Indicates if the given loyalty program is still active or not.
      enum:
      - FORMAT_PRESERVING_MULTI_USE
      - FORMAT_PRESERVING_SINGLE_USE
      - CLAIM_CHECK_NONCE
      - RANDOM_MULTI_USE
      - RANDOM_SINGLE_USE
      - CLAIM_CHECK_NONCE_WITH_PINCAPTURE

    RewardDispensationCode:
      type: string
      description: Indicates when a reward is to be redeemed.
      enum:
      - INSTANT
      - DEFERRED

    RewardRealizationCode:
      type: string
      description: Indicates how a reward is applied to a transaction.
      enum:
      - NEW_PRICE
      - PERCENT_OFF
      - AMOUNT_OFF
      - EARN
      - REDEEM

    SaleItemType:
      type: string
      description: Indicates the type of item
      enum:
      - FUEL
      - CARWASH
      - OTHER

    ServiceLevelCode:
      type: string
      description: Indicates service level code.
      default: S
      enum:
      - S
      - F
      - N
      - X

    ValueAddCurrencyType:
      type: string
      description: Indicates the type of units used to show value of a reward.
      enum:
      - MONEY
      - POINTS
      - DISTANCE
      - COUNTS
      - VOLUMES
      - VISITS
      - PERCENTAGE

  #-------------------------------------
  # Responses
  #-------------------------------------
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    BalanceResponse:
      description: Loyalty balance response based on request id
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoyaltyBalanceTransactionInfo'

    Conflict:
      description: Conflict - The requested operation conflicts with the current state of the identified resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Created:
      description: Resource created
      headers:
        Location:
          description: Location of newly created resource.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Loyalty'

    NoContent:
      description: The request succeeded but there’s really nothing to show.
      content: {}

    NotFound:
      description: Not Found - The requested resource doesn't exist.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    OK:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Loyalty'

    ServerError:
      description: An unexpected server error occurred.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Unauthorized:
      description: Unauthorized
      content: {}

  #-------------------------------------
  # Parameter Models
  #-------------------------------------
  parameters:
    AcceptLanguageParam:
      name: Accept-Language
      in: header
      description: The Accept-Language header contains information about the language preference of a user. This HTTP header is useful to multilingual sites for deciding the best language to serve to the client. i.e en-US,fr-CA
      schema:
        type: string

    ApiKeyParam:
      name: Api-Key
      in: header
      description: An API key is a string value passed by a client app to the API proxies. The key uniquely identifies the client app.
      required: true
      schema:
        type: string

    AuthorizationParam:
      name: Authorization
      in: header
      description: Authorization information for the request. Format- `HMAC {hmacToken}`
      required: true
      schema:
        type: string

    AvailOffersTrxnIdParam:
      name: availOffersTrxnId
      in: path
      description: Available offers transaction id
      required: true
      schema:
        type: string

    ClientTokenParam:
      name: Client-Token
      in: header
      description: Used to pass the original client OAuth token information given in a client-credentials flow.  This field is only used when the server is making the request and needs to link the transaction to a specific client.  Format- `Bearer {access_token}`
      schema:
        type: string

    ClientRequestIdParam:
      name: Client-Request-Id
      in: header
      description: Contains a unique ID generated by the client that can be used for enforcing idempotency on POST actions. POSTs are inherently non-idempotent  and submitting the exact same request multiple times would create duplicate resources. Note:- Omitting this header increases the risk of duplicate transactions, which for payments could cost the client issues like double-billing.
      required: true
      schema:
        type: string

    LocationParam:
      name: Location
      in: header
      description: Indicates the target of a redirection i.e /v1/loyalty/accounts/{requestId}
      schema:
        type: string

    FdCustomerIdQueryParam:
      name: fdCustomerId
      in: query
      description: Unique identifier for a customer profile registered with uCom
      required: true
      schema:
        type: string

    FdAccountIdQueryParam:
      name: fdAccountId
      in: query
      description: Unique identifier for a customer account vaulted with uCom
      required: true
      schema:
        type: string

    StartDateParam:
      name: startDate
      in: query
      description: Date from which transactions are to be retrieved. Format YYYYMMDD
      schema:
        type: string
        format: date-time

    EndDateParam:
      name: endDate
      in: query
      description: Date up to which transactions are to be retrieved. Format YYYYMMDD
      schema:
        type: string
        format: date-time

    PageNumberParam:
      name: pageNo
      in: query
      description: Page number
      schema:
        type: integer

    PageSizeParam:
      name: pageSize
      in: query
      description: Max number of records per page. Supported values - 5, 10, 15, 20, 25 ..50
      schema:
        type: integer

    FiltersParam:
      name: filters
      in: query
      description: Used to limit data in the response body
      schema:
        type: string

    RequestIdParam:
      name: requestId
      in: path
      description: Unique identifier for the request.
      required: true
      schema:
        type: string

    TimestampParam:
      name: Timestamp
      in: header
      description: Epoch timestamp in the request initiating system
      required: true
      schema:
        type: string

    SubMerchantIdParam:
      name: Sub-Merchant-Id
      in: header
      description: Sub Merchant Id contains information about the merchant identifier
      schema:
        type: string

#-------------------------------------
# Document Change Log
# 0.2.2
#     - No Changes
# 0.2.1
#     - Added Merchant id as header field
# 0.2.0
#     - Added 'OTHER' CreditCardType
#     - Added fields in ThreeDSecure object
#     - Added Price tier in POSItem
#     - Added Merchant id as header field
# 0.1.9
#     - OfferRealizationType enum - Add TRANSACTION_LEVEL
#     - Updated Reward transactionLevel to add priceAdjustments
#     - Updated PriceAdjustment to add maxQuantity
#     - Added OfferStatus in the PriceAdjustments
#     - Added washcodes under POSItem
# 0.1.8
#     - Updated Reward lineItemLevel to add SaleItem
#     - Added 3ds web support
#     - Added percentage currency type
# 0.1.7
#     - Added receipt lines in the loyalty transaction info
#     - Added reward description in Reward
#     - Updated PriceAdjustment as list under POSItem
#     - Added 3ds challenge transaction expiry date time in ThreeDSecure
# 0.1.6
#     - Add OfferRealizationType enum to PromotionalOffer
#     - Add posAdjustment (type PriceAdjustment) to PromotionalOffer
#     - Added SecurityCode in valuted Account
#     - Added VAULTED_ACCOUNT as AccountType
#     - Added Accept-Language header field
# 0.1.5
#     - Added 'currencyValue' & 'currencyCode' to LoyaltyBalance
#     - Added Link in the Error object.
#     - Added retailer partner id in TransactionHistoryItem
#     - acsSignedContent and CardType in threeDSecureInfo object
# 0.1.4
#     - Removed transactionDate redundant field
#     - Added 'createdDateTime', 'lastUpdatedDateTime','transactionDateTime' and ServiceLevelCode
#     - Added FundingSourceType, AccountStatus and AccountType entities
#     - Updated salesLineItem with POSItem across all ymls. POSItem is superset of salesLineItem.
#     - Added previousBalanceUnits and newBalanceUnits in the LoyaltyTransactionInfo entity
#     - Added 'rate' to TaxDetails
#     - Added PriceAdjustment under POSItem
# 0.1.3
#     - Adding LoyaltyTransactionStatus, NVP with valueAsList, alias
#     - Removed AdditionalProductCode field
#     - Added additonal option OTHER under SaleItemType entity
# 0.1.2
#     - No change.
# 0.1.1
#     - Added 'id' attribute to Link
#-------------------------------------

swagger: '2.0'
info:
  version: 0.2.2
  title: uCom Transaction History Services
  description:
    Services to request sale data including its receipt (if available) by using different filter, sorting and paging capabilities.
tags:
  - name: history
    description: Operations and details about sale transaction data
  - name: voucher
    description: Operations and details about redeemable vouchers
  - name: receipt
    description: Operations and details about receipts
host: int.api.firstdata.com
basePath: /ucom
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  '/v1/txhistory/customers/{fdCustomerId}/transactions':
    get:
      tags:
        - history
      summary: Get sale transaction details
      description: Transaction list service allows to request transactions for a given user
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/FdCustomerIdParam'
        - $ref: '#/parameters/PageNumberParam'
        - $ref: '#/parameters/PageSizeParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
      responses:
        '200':
          description: List of transaction details
          schema:
            type: object
            properties:
              transactions:
                type: array
                items:
                  $ref: '#/definitions/TransactionHistoryItem'
              pages:
                $ref: '#/definitions/PageLink'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '500':
          $ref: '#/responses/ServerError'

  '/v1/txhistory/customers/{fdCustomerId}/transactions/{transactionId}':
    patch:
      tags:
        - history
      summary: Allows to add a note to the given transaction
      description: Allows to add a note to the given transaction
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/FdCustomerIdParam'
        - $ref: '#/parameters/TransactionIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          description: JSON formatted note is supported and required.
          schema:
            required:
              - note
            properties:
              note:
                type: string
      responses:
        '204':
          $ref: '#/responses/NoContent'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          $ref: '#/responses/Conflict'
        '500':
          $ref: '#/responses/ServerError'

  '/v1/txhistory/customers/{fdCustomerId}/vouchers':
    get:
      tags:
        - voucher
      summary: Get redeemable vouchers details
      description: List all vouchers (e.g. car wash) of a given user.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/FdCustomerIdParam'
        - $ref: '#/parameters/SiteLocationIdQueryParam'
        - $ref: '#/parameters/VoucherTypeParam'
        - $ref: '#/parameters/VoucherStateParam'
        - $ref: '#/parameters/PageNumberParam'
        - $ref: '#/parameters/PageSizeParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
      responses:
        '200':
          description: List of vouchers
          schema:
            type: object
            properties:
              vouchers:
                type: array
                items:
                  $ref: '#/definitions/Voucher'
              pages:
                $ref: '#/definitions/PageLink'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '500':
          $ref: '#/responses/ServerError'

  '/v1/txhistory/customers/{fdCustomerId}/vouchers/{voucherId}':
    patch:
      tags:
        - voucher
      summary: Update voucher status
      description: Update voucher status.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/FdCustomerIdParam'
        - $ref: '#/parameters/VoucherIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          description: JSON formatted voucher is supported and required.
          schema:
            required:
              - status
            properties:
              status:
                type: string
      responses:
        '204':
          $ref: '#/responses/NoContent'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          $ref: '#/responses/Conflict'
        '500':
          $ref: '#/responses/ServerError'

  '/v1/txhistory/receipts/{transactionId}':
    get:
      tags:
        - receipt
      summary: Get raw receipt data
      description: Return the actual receipt data formatted by POS
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/TransactionIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
      responses:
        '200':
          description: Receipt dtails
          schema:
            type: string
            properties:
              receiptData:
                $ref: '#/definitions/ReceiptData'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/ServerError'


definitions:
#-------------------------------------
# Operational Models
#-------------------------------------
  ApprovedAmount:
    title: Approved Amount
    description:
      Amount authorized according to the request type [auth, capture, refund,
      etc] in lower denomination.
    type: number
    format: double
    minimum: 0
    exclusiveMinimum: true
    readOnly: true
    example: 500.45

  Address:
    description: A physical mailing address for this user.
    type: object
    properties:
      type:
        description: 'Canonical type values of "work", "home", and "other".'
        type: string
      streetAddress:
        description:
          The full street address component, which may include house number,
          street name, P.O. box, and multi-line extended street address
          information.
        type: string
      locality:
        description: The city or locality component.
        type: string
      region:
        description: The state or region component.
        type: string
      postalCode:
        description: The zip code or postal code component.
        type: string
      country:
        description:
          The country name component.  When specified, the value MUST be in ISO
          3166-1 "alpha-2" code format; e.g., the United States and Sweden are
          "US" and "SE", respectively.
        type: string
      formatted:
        description:
          The full mailing address, formatted for display or use with a mailing
          label.
        type: string
      primary:
        description:
          Indicates if this is the default address for the associated resource.
          It only has meaning when used in a set or array of addresses.
        type: boolean
    example:
      type: work
      streetAddress: 100 Universal City Plaza
      locality: Hollywood
      region: CA
      postalCode: '91608'
      country: US
      formatted: |-
        100 Universal City Plaza
        Hollywood, CA 91608 US
      primary: true

  CapturedAmount:
    title: Captured Amount
    description: Captured amount for the sale.
    type: number
    format: double
    minimum: 0
    exclusiveMinimum: true
    readOnly: true
    example: 500

  Email:
    description: Email address for the user.
    type: object
    properties:
      type:
        description:
          The "type" sub-attribute is used to provide a classification
          meaningful to the (human) user.  The user interface should encourage
          the use of basic values of "work", "home", and "other" and MAY allow
          additional type values to be used at the discretion of the service
          client.
        type: string
      value:
        description: The value SHOULD be specified according to RFC5321.
        type: string
      primary:
        description:
          Defines if this entry is to be used as the primary or default for the
          user.
        type: boolean
        default: false
    example:
      value: bjensen@example.com
      type: work
      primary: true

  ExpiryDate:
    description: Contains account expiration data and needs to either send the values in individual fields OR as a singleValue.
    type: object
    properties:
      month:
        type: string
        description: Month format 'MM'
        pattern: "[0-9]{2,2}"
        minLength: 2
        maxLength: 2
        example: "09"
      year:
        type: string
        description: Year format 'YY'
        pattern: "[0-9]{2,2}"
        minLength: 2
        maxLength: 2
        example: "20"
      singleValue:
        type: string
        description: Month and year together, 'MMYY' or 'MMYYYY'.  If the latter format, the string will be parsed and validated per the given format.  Any other format will be rejected.
        minLength: 4
        maxLength: 6

  Error:
    description: Model for error messaging
    type: object
    properties:
      code:
        type: string
        description:
          Uniquely identifies an error condition. Client applications need to
          read and handle errors based on this.
      message:
        type: string
        description: A generic description of the error condition.
      category:
        type: string
        description: The resource associated with the error condition.
      developerInfo:
        type: object
        description:
          Information that needs to be understood by the client developers and
          should not be interpreted for application processing.
        properties:
          developerMessage:
            type: string
            description: An elaborative description of the error description.
          moreInfo:
            type: string
            description: Link to the error in Developer page.
          fieldError:
            description: Detailed information about message format errors.
            type: array
            items:
              properties:
                field:
                  description: The property or attribute associated with the error
                  type: string
                message:
                  description: Information specific to a property or attribute.
                  type: string
      hostExtraInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
      threeDSecureInfo:
        $ref: '#/definitions/ThreeDSecure'
      _links:
        type: array
        items:
          $ref: '#/definitions/Link'

    example:
      code: '40000'
      message: Example Error
      category: example
      developerInfo:
        developerMessage: Invalid Message format in request payload
        moreInfo: 'https://www.example.com/errors/40000'
        fieldError:
          - field: example id
            message: exampleId is mandatory

  FuelPurchaseInfo:
    description: Fuel purchase information.
    type: object
    required:
      - pumpNumber
    properties:
      pumpNumber:
        type: number
        description: Pump number from which fueling is requested.
      requestedAmount:
        $ref: '#/definitions/RequestedAmount'
      saleItems:
        type: array
        items:
          $ref: '#/definitions/POSItem'
    example:
      pumpNumber: '17'
      items:
        - POSCode: '432'
          itemDescription: Unleaded
          itemPrice: '2.03'
          unitOfMeasurement: gallonUS

  Geolocation:
    description: Geospatial data for a given location
    type: object
    properties:
      locationId:
        description:
          The location id or number used to identify the unique site and
          merchant.
        type: string
        example: CA123456
      longitude:
        description:
          The GPS latitude value of the site. To be captured at time of
          onboarding. Not necessary for daily update at startup.
        type: number
      latitude:
        description:
          The GPS longitude value of the site. To be captured at time of
          onboarding. Not necessary for daily update at startup.
        type: number
      siteAddress:
        $ref: '#/definitions/SiteAddress'
      PBL:
        description:
          Identifier for the physical business location.  The value should be
          geologically distinct.
        type: string

  ISO-4217:
    description: Holds currency information
    type: object
    properties:
      code:
        type: string
        default: USD
        example: USD
      number:
        type: integer
        default: 840
        example: 840
      digits:
        type: integer
        default: 2
        example: 2
      currency:
        type: string
        default: US Dollar
        example: US Dollar

  LanguageCode:
    description:
      The language code parameter is based on two ISO specs (ISO
      639-1,ISO-3166-1).  The first segment is the lower case, 2-character
      language code (based on ISO 639-1) followed by a hyphen "-" separator.
      The second segment is the upper case, 2-character region code (based on
      ISO-3166-1). Examples are en-US, en-CA, fr-CA.
    type: string
    readOnly: true

  Link:
    description: Model to communicate linked resources.
    type: object
    required:
      - href
      - rel
    properties:
      href:
        description: URL to linked resource.
        type: string
        format: uri
      rel:
        description: Defines the type of link relationship to current resource.
        type: string
        example: current.page,previous.page,next.page,last.page,first.page,receipt
      method:
        description: Defines the HTTP method for the given href.
        type: string
        default: GET
        example: GET
      id:
        description: Identifier to the resource.
        type: string
        example:
          "415e5cf6bfdb11e8a355529269fb1459"

  LoyaltyBalance:
    type: object
    properties:
      balance:
        type: number
        example: 2634
      minRedeemUnits:
        type: number
        example: 200
      maxRedeemUnits:
        type: number
        example: 2000
      unitType:
        $ref: '#/definitions/BalanceUnitTypes'
      conversionRatio:
        type: number
        example: 100
      currencyValue:
        type: number
      currencyCode:
        $ref: '#/definitions/ISO-4217'
    readOnly: true

  LoyaltyProgram:
    description: Value object to hold a list of loyalty items.
    type: object
    properties:
      programId:
        description:
          Unique identifier used to provide link between applications across
          disparate systems.
        type: string
      hostProgramId:
        description:
          Loyalty program Id used by the host (cloud) solution. Not in used in
          uCom system. For future use.
        type: string
      programName:
        description: Loyalty program name. Common name for the given loyalty program
        type: string
      programDesc:
        description:
          Used to describe the loyalty program and perhaps used to display to
          the client.
        type: string
      programProvider:
        description: Sponsor of the loyalty program.
        type: string
      loyaltyType:
        $ref: '#/definitions/LoyaltyType'
      programStatus:
        $ref: '#/definitions/ProgramStatus'
    example:
      programId: TEST_PROGRAM
      hostProgramId: TEST_HOST_PROGRAM
      programName: TEST_LOAYLTY_PROGRAM
      programDesc: Test loyalty program
      programProvider: Test Provider
      loyaltyType: LOCAL
      status: ENABLED

  Loyalty:
    description: Information about a Loyalty account.
    type: object
    properties:
      accountId:
        description: Account identifier, can be used for traditional card number or any alphanumeric value.  For example, a unique value not shown on the card, email address, phone number, social id, etc.
        type: string
        example: "email-id@example.com"
      cardNumber:
        description: Card number of loyalty account. The accountId parameter superscedes this field.  This field is ignored when the request is to create a new acccount.
        type: string
        example: '905960447'
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      alias:
        description: Last four values of the cardNumber
        type: string
        readOnly: true
        example: "1111"
      accountStatus:
        $ref: '#/definitions/LoyaltyAccountStatus'
      loyaltyProgram:
        $ref: '#/definitions/LoyaltyProgram'
      pin:
        description: Security pin number
        type: string
      communications:
        description: Methods the account onwer has agreed to be contacted
        type: object
        properties:
          email:
            type: boolean
          phone:
            type: boolean
          sms:
            type: boolean
      commonFlags:
        description: Common true/false settings on an account
        type: object
        properties:
          tncAccepted:
            type: boolean
          canEarn:
            type: boolean
          canRedeem:
            type: boolean
          isChildAccount:
            type: boolean
          isVirtualAccount:
            description: Indicates if the account has an associated plastic card or not.
            type: boolean
      balance:
        $ref: '#/definitions/LoyaltyBalance'
      token:
        $ref: '#/definitions/ReferenceToken'
      metadata:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true

  LoyaltyTransactionInfo:
    description: Information about a Loyalty transaction as part of petro transaction.
    type: object
    properties:
      fundingSource:
        description:
          Information about Loyalty account associated with the petro
          transaction.
        type: object
        properties:
          loyalty:
            $ref: '#/definitions/Loyalty'
          vaultedAccount:
            $ref: '#/definitions/VaultedAccount'
          type:
            $ref: '#/definitions/FundingSourceType'
      requestedRedeemUnits:
        type: number
        description: Units requested by user to redeem/burn as part of transaction.
      unitsRewarded:
        type: number
        description: Units earned/rewarded as part of transaction.
      unitsRedeemed:
        type: number
        description: Units burned/redeemed as part of transaction.
      previousBalanceUnits:
        type: number
        description: Previous balance units of an account.
      newBalanceUnits:
        type: number
        description: New balance units of an account.
      unitsValue:
        type: number
        format: double
        description: Units discounted / paid currency value as part of transaction
      hostExtraInfo:
        description: Additional host specific information presented as name-value pairs
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
      status:
        $ref: '#/definitions/LoyaltyTransactionStatus'
      receiptData:
        $ref: '#/definitions/ReceiptData'

  NVP:
    title: Name and Value pair.
    type: object
    properties:
      name:
        type: string
      value:
        type: string
      valueAsList:
        type: array
        minItems: 0
        items:
          type: string

  PageLink:
    description: Page link information.
    type: object
    readOnly: true
    properties:
      currentPage:
        type: integer
        description: Current page number
        example: 1
      currentPageRecords:
        type: integer
        description: Number of records in current page
        example: 25
      totalPages:
        type: integer
        example: 2
      totalRecords:
        type: integer
        example: 27
      sortOrder:
        type: string
        enum:
          - asc
          - desc
        example: asc
        default: asc
      _links:
        type: array
        items:
          $ref: '#/definitions/Link'

  OfferStatus:
    description: Maintain the status of stackable promotions
    type: object
    properties:
      code:
        description: Indicates offer status code, NOT_ACTIVATED | ACTIVATED | REDEEMED | DECLINED | CANCELLED | FAILED
        type: string
      statusInfo:
        description: Details about what to display, images, messaging, etc.
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true

  PaymentInfo:
    description: Payment tender information
    type: object
    required:
      - fundingSource
    properties:
      currencyCode:
        $ref: '#/definitions/ISO-4217'
      requestedAuthAmount:
        $ref: '#/definitions/RequestedAmount'
      approvedAuthAmount:
        $ref: '#/definitions/ApprovedAmount'
      capturedAmount:
        $ref: '#/definitions/CapturedAmount'
      status:
        $ref: '#/definitions/PaymentStatus'
      cardType:
        description: Indicates the type of account association
        type: string
        example: VISA
      cardSubType:
        description: Merchant or brand specific information about the type of account
        type: string
        example: ABCD
      accountType:
        description: Indicates the type of account
        type: string
        readOnly: true
        example: 'CREDIT'
      alias:
        description: Last four values of the cardNumber
        type: string
        readOnly: true
        example: '1111'
      sourceType:
        description: Indicates the type of payment source
        type: string
        readOnly: true
        example: 'ApplePay'
      hostAuthId:
        description: Unique Identifier provided by payment platform for a payment authorization transaction.
        type: string
        readOnly: true
        example: "87341446"

  POSItem:
    description: Structure to support passing POS sale info as part of the sale request.
    type: object
    properties:
      itemDescription:
        type: string
        example: Standard Wash (or) Unleaded Petrol
      itemPrice:
        type: number
        format: double
        example: 7.5
      unitOfMeasurement:
        type: string
        example: each
      unitsSold:
        type: number
        format: double
        example: 1
      totalItemSaleAmount:
        type: number
        format: double
        example: 7.5
      originalItemPrice:
        type: number
        format: double
        example: 7.50
      originalTotalSaleAmount:
        type: number
        format: double
        example: 7.50
      posCodeFormat:
        type: string
        example: plu
      posCode:
        type: string
        example: '102'
      posCodeModifier:
        type: string
        example: '1'
      productCode:
        type: string
        example: "102"
      tax:
        type: array
        items:
          $ref: '#/definitions/TaxDetails'
      type:
          $ref: '#/definitions/POSItemType'
      serviceLevelCode:
          $ref: '#/definitions/ServiceLevelCode'
      priceAdjustments:
        type: array
        items:
          $ref: '#/definitions/PriceAdjustment'
      washCodes:
        type: array
        items:
          $ref: '#/definitions/WashCode'
      priceTier:
        type: string

  Phone:
    description: Phone number for the user.
    type: object
    properties:
      value:
        description:
          The value SHOULD be specified according to the format defined in
          RFC3966, e.g., 'tel:+1-201-555-0123'.
        type: string
      type:
        description:
          Often has typical values of "work", "home", "mobile", "fax", "pager",
          and "other" and MAY allow more types to be defined by the service
          client.
        type: string
      primary:
        description:
          Defines if this entry is to be used as the primary or default for the
          user.
        type: boolean
        default: false
    example:
      value: 555-555-5555
      type: work

  PromotionalOffer:
    description: Offer opportunity details
    type: object
    properties:
      offerReferenceId:
        description: Unique identifier for an offer.
        type: string
      offerName:
        description: Common name for the reward.
        type: string
      offerDescription:
        description: Description about the reward details.
        type: string
      effectiveDateTime:
        description: Starting time for a reward validity.
        type: string
        format: date-time
      expiryDateTime:
        description: Ending time for a reward to be applied.
        type: string
        format: date-time
      promotionId:
        description: Links to associated promotion if it applies.
        type: string
      isExclusive:
        description:
          Indicator if offer can be combined with other offers or is mutually
          exclusive.
        type: boolean
      userAcceptanceRequired:
        description:
          Indicator if a user has to accept the offer before it can be applied
          to a transaction or accrued in an account.
        type: boolean
      currencyCode:
        $ref: '#/definitions/ISO-4217'
      qualifiers:
        description: Conditions that must be met for the rewared to be awarded.
        type: object
        properties:
          currency:
            type: array
            items:
              properties:
                currencyType:
                  $ref: '#/definitions/ValueAddCurrencyType'
                value:
                  description: Value of the reward in the associated currency.
                  type: string
                realizationCode:
                  $ref: '#/definitions/RewardRealizationCode'
          saleItems:
            type: array
            items:
              $ref: '#/definitions/POSItem'
      reward:
        $ref: '#/definitions/Reward'
      metadata:
        description: 'Details about what to display, images, messaging, etc.'
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
      offerRealizationType:
        $ref: '#/definitions/OfferRealizationType'

  PublicSiteInfo:
    description: Compact representation of site data returned for UI/UX needs in devices.
    type: object
    properties:
      petroBrand:
        $ref: '#/definitions/PetroBrand'
      siteAvailable:
        description: Indicator if the site is active.
        type: boolean
      siteName:
        description: Name of the site as defined as part of the onboarding process.
        type: string
      welcomeMessage:
        description:
          Message displayed on the mobile device upon site checkin. The average
          length of this field should be around 100 characters to maintain
          visiblity on various mobile profiles.
        type: string
      hoursOfOperation:
        description: Hrs of operation of site.
        type: string
      languageCode:
        $ref: '#/definitions/LanguageCode'
      siteAuthTimeOut:
        description: Time out configuration for a site/pump
        type: integer
      geolocation:
        $ref: '#/definitions/Geolocation'

  PriceAdjustment:
    description: Structure to support providing price adjustment for sale item.
    type: object
    properties:
      adjustmentId:
        type: string
        example: "discount prepay"
      productCode:
        type: string
        example: "941"
      programID:
        type: string
        example: "P66"
      reason:
        type: string
        example: "loyaltyOffer"
      amount:
        type: number
        format: double
        example: 0.1
      percentage:
        type: number
        format: float
        example: 10
      itemPrice:
        type: number
        format: double
        example: 7.50
      unitOfMeasurement:
        type: string
        example: "each"
      unitsSold:
        type: number
        format: double
        example: 1
      rebateLabel:
        type: string
        example: "HostDiscount"
      maxQuantity:
        type: number
        format: double
        example: 7.50
      offerStatus:
        $ref: '#/definitions/OfferStatus'

  ReferenceToken:
    description: Surrogate value used to represent a handle to an account without sharing PCI/PII data to look it up.
    type: object
    properties:
      tokenId:
        description: Actual token value
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      tokenProvider:
        description: Indicates what system is the originator of the token
        type: string
        example: "TRANS_ARMOR"
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      tokenType:
        $ref: '#/definitions/ReferenceTokenType'

  Reward:
    description: Reward details
    type: object
    properties:
      rewardId:
        description: Unique identifier for the reward instance
        type: string
      rewardDescription:
        description: reward description
        type: string
      effectiveDateTime:
        description: Starting time for a reward validity.
        type: string
        format: date-time
      expiryDateTime:
        description: Ending time for a reward to be applied.
        type: string
        format: date-time
      offerReferenceId:
        description:
          Link to the offer that provided the opportunity for a customer to
          receive the reward.
        type: string
      currencyCode:
        $ref: '#/definitions/ISO-4217'
      values:
        description: Medium of exchange for the value.
        type: object
        properties:
          transactionLevel:
            type: array
            items:
              properties:
                currencyType:
                  $ref: '#/definitions/ValueAddCurrencyType'
                value:
                  description: Value of the reward in the associated currency.
                  type: string
                realizationCode:
                  $ref: '#/definitions/RewardRealizationCode'
                priceAdjustments:
                  type: array
                  items:
                    $ref: '#/definitions/PriceAdjustment'
          lineItemLevel:
            type: array
            items:
              properties:
                saleItem:
                  $ref: '#/definitions/POSItem'
                realizationCode:
                  $ref: '#/definitions/RewardRealizationCode'
      dispensationCode:
        $ref: '#/definitions/RewardDispensationCode'

  ReceiptData:
    description:
      Container for the receipt lines sent from the site box as printed on the
      paper receipt.
    type: object
    properties:
      receiptSection:
        type: string
        description:
          Indicates the section of the receipt the text represents [e.g. full,
          vat, eft, loyalty, etc]
      receiptLines:
        $ref: '#/definitions/ReceiptLine'

  ReceiptLine:
    description: A line of text on a receipt.
    type: object
    properties:
      plain:
        type: array
        items:
          type: string
      formatted:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            value:
              type: string
            order:
              type: number
            row:
              type: number
            column:
              type: number
            charSet:
              type: number
            color:
              type: string
            alignment:
              type: string
            height:
              type: string
            width:
              type: string
            charSet1:
              type: string
            charSet2:
              type: string
            charSet3:
              type: string

  RequestedAmount:
    title: Requested Amount
    description: 'Requested amount for the given request type [auth, capture, refund, etc].'
    type: number
    format: double
    minimum: 0
    exclusiveMinimum: true
    example: 500

  SiteAddress:
    description: Value object to hold site address.
    type: object
    properties:
      address:
        $ref: '#/definitions/Address'
      phone:
        $ref: '#/definitions/Phone'
      email:
        $ref: '#/definitions/Email'
      fax:
        type: string

  TaxDetails:
    description: Tax details.
    type: object
    properties:
      code:
        type: string
        example: TX01
      description:
        type: string
        example: Sales Tax
      amount:
        type: string
        example: '7.50'
      rate:
          type: string
          example: '13.5'

  ThreeDSecure:
    description: Details of ThreeDSecure transaction used to process the challege flow
    type: object
    properties:
      transactionId:
        description: Transaction id generated on the server
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      transactionStatus:
        type: string
        description: Transactions status of 3DS server
        example: "C"
      transactionStatusReason:
        type: string
        description: Reason for the transaction status
      challengeResponse:
        type: string
        example: "ewogIC"
      challengeIndicator:
        type: string
        example: "01 = No preference
                  02 = No challenge requested
                  03 = Challenge requested: 3DS Requestor Preference
                  04 = Challenge requested: Mandate"
      dsTransactionId:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      acsTransactionId:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      serverTransactionId:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      acsReferenceNumber:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      acsSignedContent:
        type: string
        example: "292bb6b88....6fc4446894f878b7e32bd5e"
      cardType:
        $ref: '#/definitions/CreditCardType'
      challengeRequest:
        type: string
        example: "ewogICAiYW.......MjJjMGVjIgp9"
      acsUrl:
        type: string
        example: "https://test.modirum.com/dstests/ACSEmu2"
      iframeContent:
        type: string
        example: "<iframe></iframe>"
      termUrl:
        type: string
        example: "https://mydomain/3dstest?transactionId=292bb6b886fc4446894f878b7e32bd5e"
      isThreeDSMethodCompleted:
        type: boolean
        example: true
      isAuthenticationCompleted:
        type: boolean
        example: true
      cavv:
        type: string
        description: Card authenticaion verificaiton value
      threeDSVersion:
        type: string
      expiryDateTime:
        description: 3DS challenge transaction expiry date time.
        type: string
        readOnly: true
        format: date-time
        example: "2020-01-01T16:06:05Z"
      eci:
        type: string
        description: Electronic Commerce Indicator value

  TransactionHistoryItem:
    description: Transaction details.
    type: object
    readOnly: true
    properties:
      retailerPartnerId:
        type: string
      fdCustomerId:
        type: string
        example: cuid-0987613457398475
      status:
        type: string
        example: COMPLETED
      finalTransactionAmount:
        type: string
        example: '15.25'
      transactionNo:
        type: string
        example: '000001'
      transactionId:
        type: string
        example: b2dd25902e86458e9dfa196d9cb20065
      note:
        type: string
        example: some note
      fuelPurchaseInfo:
          $ref: '#/definitions/FuelPurchaseInfo'
      payments:
        type: array
        items:
          $ref: '#/definitions/PaymentInfo'
      siteInfo:
        $ref: '#/definitions/PublicSiteInfo'
      _receipt:
        $ref: '#/definitions/Link'
      loyaltyTransactions:
        type: array
        items:
          $ref: '#/definitions/LoyaltyTransactionInfo'
      saleItems:
        type: array
        readOnly: true
        items:
          $ref: '#/definitions/POSItem'
      offers:
        type: array
        items:
          $ref: '#/definitions/PromotionalOffer'
      transactionDateTime:
        description: Date and time of the transaction.
        type: string
        readOnly: true
        format: date-time
        example: "2016-04-16T16:06:05Z"
      createdDateTime:
        description: Date and time of resource creation.
        type: string
        readOnly: true
        format: date-time
        example: "2016-04-16T16:06:05Z"
      lastUpdatedDateTime:
        description: Last updated Date and time of resource.
        type: string
        readOnly: true
        format: date-time
        example: "2016-04-16T16:06:05Z"

  VaultedAccount:
    description: FD Account information
    type: object
    properties:
      fdAccountId:
        description: Unique identifier for a customer account vaulted with uCom
        type: string
      securityCode:
        description: Card Verificatiion value.
        type: string
      status:
        $ref: '#/definitions/AccountStatus'
      type:
        $ref: '#/definitions/AccountType'
    example:
      fdAccountId: 003a502c72a211e78cf7a6006ad3dba0

  Voucher:
    description: Redeemable item like a car wash code.
    type: object
    readOnly: true
    properties:
      voucherId:
        type: string
        example: 003a502c72a211e78cf7a6006ad3dba0
      status:
        type: string
        example: active
      statusDate:
        type: string
        example: '2016-05-30T08:05:12.000+0000'
      voucherCode:
        type: string
        example: '8966834595'
      expiryDate:
        type: string
        example: '2016-07-30T08:05:12.000+0000'
      message:
        type: string
        example: Car Wash Gold
      voucherType:
        type: string
        example: CARWASH
      siteLocationId:
        type: string
        example: '182651992575'

  WashCode:
    description: Purchased wash information.
    type: object
    properties:
      code:
        description: Wash code generated by the POS system.
        type: string
      description:
        description: Wash code description generated by the POS system.
        type: string
      expiration:
        description: Expiration date for the purchased wash code
        type: string
        format: date-time
      message:
        description: Field to carry message from site system for display to customer.
        type: string


#-------------------------------------
# ENUM Models
#-------------------------------------
  AccountStatus:
    description: Indicates the status of an account.
    type: string
    readOnly: true
    enum:
      - ACTIVE
      - INACTIVE
      - TERMINATED
      - ISSUER_TERMINATED
      - WALLET_TERMINATED
      - PENDING

  AccountType:
    description: Type of Account vaulted
    type: string
    readOnly: true
    enum:
      - CREDIT
      - PREPAID
      - ACH
      - LOYALTY
      - PAYPAL
      - MASTERPASS
      - VENMO
      - VAULTED_ACCOUNT

  BalanceUnitTypes:
    description: Indicator to determine how to display balances
    type: string
    enum:
      - CENTS
      - MILES
      - POINTS
      - STARS
      - LITRES

  CreditCardType:
    title: Credit Card Type
    description: Indicates the type of credit account association
    type: string
    enum:
      - AMEX
      - DISCOVER
      - MASTERCARD
      - PLCC
      - VISA
      - OTHER

  FundingSourceType:
    description: Describes the type of Funding source
    type: string
    readOnly: true
    enum:
      - VAULTED_ACCOUNT
      - CREDIT
      - PREPAID
      - APPLE_PAY
      - ANDRIOD_PAY
      - PAYPAL
      - TOKEN
      - NONCE
      - VCO
      - VENMO
      - LOYALTY
      - AMAZON_PAY
      - VIPPS
      - FLEET
      - BANCONTACT
      - IDEAL

  LoyaltyAccountStatus:
    description: Indicator of the account state as indicated by the loyalty issuer.
    type: string
    enum:
      - ENROLLED
      - ANONYMOUS
      - PARTIAL
      - PENDING_DATA
      - PENDING_VERIFICATION
      - INACTIVE
      - BLOCKED

  LoyaltyTransactionStatus:
    description: Indicates the status of an loyalty operation.
    type: string
    readOnly: true
    enum:
      - AUTHORIZED
      - AUTH_CANCELLED
      - AUTH_DECLINED
      - COMPLETED
      - COMPLETION_DECLINED
      - PENDING

  LoyaltyType:
    description: Identifier to indicate type of Loyalty program being registered.
    type: string
    enum:
      - LOCAL
      - NATIONAL

  OfferRealizationType:
    description: Identifier to indicate the type of a Loyalty Offer.
    type: string
    enum:
      - SPLIT_PAYMENT
      - PRE_ITEM_AMOUNT_OFF
      - POST_ITEM_AMOUNT_OFF
      - PRICE_ROLLBACK
      - HBD
      - TRANSACTION_LEVEL

  PaymentStatus:
    description: Indicates the status of an payment operation.
    type: string
    readOnly: true
    enum:
      - AUTHORIZED
      - AUTH_CANCELLED
      - AUTH_DECLINED
      - COMPLETED
      - COMPLETION_DECLINED

  POSItemType:
    description: Indicates the type of item
    type: string
    enum:
      - CARWASH
      - FUEL
      - OTHER

  PetroBrand:
    description: Indicator of fuel brand sold at the given site.
    type: string
    enum:
      - ESSO
      - EXXONMOBIL
      - IOL
      - SUNOCO

  ProgramStatus:
    description: Indicates if the given loyalty program is still active or not.
    type: string
    enum:
      - ENABLED
      - DISABLED
      - CONTRACTED_ONLY

  ReferenceTokenType:
    description: Indicates reference token type.
    type: string
    enum:
      - FORMAT_PRESERVING_MULTI_USE
      - FORMAT_PRESERVING_SINGLE_USE
      - CLAIM_CHECK_NONCE
      - RANDOM_MULTI_USE
      - RANDOM_SINGLE_USE
      - CLAIM_CHECK_NONCE_WITH_PINCAPTURE

  RewardDispensationCode:
    description: Indicates when a reward is to be redeemed.
    type: string
    enum:
      - INSTANT
      - DEFERRED

  RewardRealizationCode:
    description: Indicates how a reward is applied to a transaction.
    type: string
    enum:
      - NEW_PRICE
      - PERCENT_OFF
      - AMOUNT_OFF
      - EARN
      - REDEEM

  SaleItemType:
    description: Indicates the type of item
    type: string
    enum:
      - FUEL
      - CARWASH
      - OTHER

  ServiceLevelCode:
    description: Indicates service level code.
    type: string
    default: 'S'
    enum:
      - S
      - F
      - N
      - X

  ValueAddCurrencyType:
    description: Indicates the type of units used to show value of a reward.
    type: string
    enum:
      - MONEY
      - POINTS
      - DISTANCE
      - COUNTS
      - VOLUMES
      - VISITS
      - PERCENTAGE

  VolumeUOM:
    description: Units to measure volume.
    type: string
    enum:
      - ml
      - cc
      - litter
      - fluidOunce
      - pint
      - quart
      - gallonUS
      - gallonUK

  WeightUOM:
    description: Units to measure weight.
    type: string
    enum:
      - gram
      - kg
      - oz
      - lb
      - ea



#-------------------------------------
# Responses
#-------------------------------------
responses:
  NoContent:
    description: The request succeeded but there’s really nothing to show.

  BadRequest:
    description: Bad request
    schema:
      $ref: '#/definitions/Error'

  Unauthorized:
    description: Unauthorized

  NotFound:
    description: Not Found - The requested resource doesn't exist.
    schema:
      $ref: '#/definitions/Error'

  Conflict:
    description:
      Conflict - The requested operation conflicts with the current state of the
      identified resource.
    schema:
      $ref: '#/definitions/Error'

  ServerError:
    description: An unexpected server error occured.
    schema:
      $ref: '#/definitions/Error'

#-------------------------------------
# Parameter Models
#-------------------------------------
parameters:
  AcceptLanguageParam:
    name: Accept-Language
    description: The Accept-Language header contains information about the language preference of a user. This HTTP header is useful to multilingual sites for deciding the best language to serve to the client. i.e en-US,fr-CA
    in: header
    type: string

  ApiKeyParam:
    name: Api-Key
    description:
      An API key is a string value passed by a client app to the API proxies.
      The key uniquely identifies the client app.
    in: header
    required: true
    type: string

  AuthorizationParam:
    name: Authorization
    description: 'Authorization information for the request. Format- `HMAC {hmacToken}`'
    in: header
    required: true
    type: string

  FdCustomerIdParam:
    name: fdCustomerId
    description: Unique identifier for a customer profile registered with uCom.
    in: path
    required: true
    type: string

  PageNumberParam:
    name: pageNo
    description: Page number
    in: query
    required: false
    type: integer

  PageSizeParam:
    name: pageSize
    description: 'Max number of records per page. Supported values - 5, 10, 15, 20, 25 ..50'
    in: query
    required: false
    type: integer
    allowEmptyValue: false

  SiteLocationIdQueryParam:
    name: siteLocationId
    description: Unique identifier to loacte site.
    in: query
    required: true
    type: string

  TimestampParam:
    name: Timestamp
    description: Epoch timestamp in the request initiating system
    in: header
    required: true
    type: string

  TransactionIdParam:
    name: transactionId
    description: Unique identifier for the transaction
    in: path
    required: true
    type: string

  VoucherIdParam:
    name: voucherId
    description: Voucher identifier
    in: path
    required: true
    type: string

  VoucherTypeParam:
    name: voucherType
    description: Indicates which voucher type should be returned (default not limited)
    in: query
    required: false
    type: string

  VoucherStateParam:
    name: voucherState
    description: Indicates if all|active|inactive vouchers should be returned (default all)
    in: query
    required: false
    type: string

  SubMerchantIdParam:
    name: Sub-Merchant-Id
    description: Sub Merchant Id contains information about the merchant identifier
    in: header
    type: string

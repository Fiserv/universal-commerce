#-------------------------------------
# Document Change Log
# 0.2.2
#     - No Changes
# 0.2.1
#     - Added Merchant id as header field
# 0.2.0
#     - Include Tax Details on ProductVariant
#     - Added 'OTHER' CreditCardType
#     - Added fields in ThreeDSecure object
# 0.1.9
#     - No change.
# 0.1.8
#     - Added 3ds web support
#     - Added new API's for merchant and product group
# 0.1.7
#     - Added 3ds challenge transaction expiry date time in ThreeDSecure
# 0.1.6
#     - Added Accept-Language header field
# 0.1.5
#     - Added Link in the Error object.
#     - acsSignedContent and CardType in threeDSecureInfo object
# 0.1.4
#     - No change.
# 0.1.3
#     - No change.
# 0.1.2
#     - No change.
# 0.1.1
#     - No change.
# 0.1.0
#     - Added client-token in the header field.
# 0.0.9
#     - No change.
# 0.0.8
#     - No change.
# 0.0.7
#     - No change.
# 0.0.6
#     - No change.
# 0.0.5
#     - No change.
# 0.0.4
#     - No change.
# 0.0.3
#     - No change.
# 0.0.2
#     - No change.
# 0.0.1
#     - Initial Version.
#-------------------------------------
swagger: '2.0'
info:
  version: 0.2.2
  title: uCom Merchant Services
  description: Services related to Merchant or Terminal operations
tags:
  - name: POS
    description: "Operations that interact with a POS"
  - name: Merchant
    description: "Interacts with Merchant information providers"
host: int.api.firstdata.com
basePath: /ucom
schemes:
 - https
consumes:
 - application/json
produces:
 - application/json
paths:
  /v1/merchants/{merchantId}/closures:
    post:
      tags:
        - POS
      description: Create a close event at a POS system.  The close event triggers subsequent activity on the payment host.
      parameters:
        - $ref: "#/parameters/ApiKeyParam"
        - $ref: "#/parameters/TimestampParam"
        - $ref: "#/parameters/AuthorizationParam"
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: "#/parameters/MerchantIdParam"
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdHeaderParam'
        - name: payload
          in: body
          schema:
            $ref: '#/definitions/ClosureRequest'
      responses:
        201:
          $ref: '#/responses/Created'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/ServerError'

  /v1/merchants:
    get:
      tags:
        - Merchant
      description: Search for a merchant by location, venue, type and etc.
      parameters:
        - $ref: "#/parameters/ApiKeyParam"
        - $ref: "#/parameters/TimestampParam"
        - $ref: "#/parameters/AuthorizationParam"
        - $ref: "#/parameters/ClientTokenParam"
        - $ref: "#/parameters/AcceptLanguageParam"
        - $ref: "#/parameters/VenueIdParam"
        - $ref: "#/parameters/MerchantCategoryParam"
        - $ref: '#/parameters/MerchantSubCategoryParam'
        - $ref: '#/parameters/SearchKeywordsParam'
        - $ref: '#/parameters/PageNumberParam'
        - $ref: '#/parameters/PageSizeParam'
        - $ref: '#/parameters/SubMerchantIdHeaderParam'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/MerchantSearchResult'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/ServerError'

  /v1/merchants/{merchantId}:
    get:
      tags:
        - Merchant
      description: Retrieve a merchant by id
      parameters:
        - $ref: "#/parameters/ApiKeyParam"
        - $ref: "#/parameters/TimestampParam"
        - $ref: "#/parameters/AuthorizationParam"
        - $ref: "#/parameters/ClientTokenParam"
        - $ref: "#/parameters/AcceptLanguageParam"
        - $ref: "#/parameters/MerchantIdParam"
        - $ref: '#/parameters/SubMerchantIdHeaderParam'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Merchant'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/ServerError'

  /v1/merchants/{merchantId}/ordering-windows:
    get:
      tags:
        - Merchant
      description: Retrieve merchant ordering window details by id
      parameters:
        - $ref: "#/parameters/ApiKeyParam"
        - $ref: "#/parameters/TimestampParam"
        - $ref: "#/parameters/AuthorizationParam"
        - $ref: "#/parameters/ClientTokenParam"
        - $ref: "#/parameters/AcceptLanguageParam"
        - $ref: "#/parameters/MerchantIdParam"
        - $ref: '#/parameters/SubMerchantIdHeaderParam'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/MerchantOrderWindow'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/ServerError'

  /v1/merchants/{merchantId}/product-groups:
    get:
      tags:
        - Merchant
      description: Get merchant products organized by product groups
      parameters:
        - $ref: "#/parameters/ApiKeyParam"
        - $ref: "#/parameters/TimestampParam"
        - $ref: "#/parameters/AuthorizationParam"
        - $ref: "#/parameters/ClientTokenParam"
        - $ref: "#/parameters/AcceptLanguageParam"
        - $ref: "#/parameters/MerchantIdParam"
        - $ref: '#/parameters/PageNumberParam'
        - $ref: '#/parameters/PageSizeParam'
        - $ref: '#/parameters/SubMerchantIdHeaderParam'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ProductGroupSearchResult'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/ServerError'

definitions:
#-------------------------------------
# Operational Models
#-------------------------------------
  ClosureRequest:
    description: Transaction information sent to indicate a close event happened at a location.  The close event triggers subsequent events on the payment host.
    type: object
    properties:
      terminalId:
        type: string
        description: "POS Terminal Identifier"
      terminalPasscode:
        type: string
        description: "POS Terminal Passcode"
      batchSequenceNumber:
        type: string
        description: ""
      terminalTotal:
        type: string
        description: "Net transaction amount for the given terminal"
      siteId:
        type: string
        description: "Merchant Store Identifier"
      currencyCode:
        $ref: '#/definitions/ISO-4217'

  ClosureResponse:
    description: Transaction information sent to indicate the host results of a close event happened at a location.
    type: object
    properties:
      terminalTotal:
        type: string
        description: "Net transaction amount for the given terminal"
      details:
        type: array
        items:
          title: hostTotal
          type: object
          properties:
            type:
              type: string
              description: "Card Type"
            transactionTotal:
              type: string
              description: "Net transaction amount for the given card type"
            transactionCount:
              type: string
              description: "Transaction Count"
#-------------------------------------
# Resource Models
#-------------------------------------

  CreditType:
    properties:
      cardType:
        type: string
      cardSubType:
        type: array
        items:
          type: string

  Image:
    description: Graphical representation of an object
    type: object
    properties:
      imageId:
        type: string
      imageType:
        type: string
      width:
        type: integer
      height:
        type: integer
      srcUrl:
        type: string

  ISO-4217:
    description: ISO 4217 currency format in which the balance is represented.
    type: object
    properties:
      code:
        type: string
        default: "USD"
        example: "USD"
      number:
        type: integer
        default: 840
        example: 840
      digits:
        type: integer
        default: 2
        example: 2
      currency:
        type: string
        default: "US Dollar"
        example: "US Dollar"

  Link:
    description: Model to communicate linked resources.
    type: object
    required:
      - href
      - rel
    properties:
      href:
        description: URL to linked resource.
        type: string
        format: uri
      rel:
        description: Defines the type of link relationship to current resource.
        type: string
        enum:
          - current.page
          - previous.page
          - next.page
          - self
        example:
          "self"
      method:
        description: Defines the HTTP method for the given href.
        type: string
        default: "GET"
        example:
          "GET"
      id:
        description: Identifier to the resource.
        type: string
        example:
          "415e5cf6bfdb11e8a355529269fb1459"

  Merchant:
    description: Merchant details
    type: object
    properties:
      merchantId:
        type: string
      merchantName:
        type: string
      briefDescription:
        type: string
      fullDescription:
        type: string
      operatingStatus:
        $ref: '#/definitions/OperatingStatus'
      merchantCategory:
        $ref: '#/definitions/MerchantCategory'
      merchantSubCategory:
        type: string
      supportedFundingSource:
        $ref: '#/definitions/SupportedFundingSource'
      searchKeywords:
        type: array
        items:
          type: string
      amenities:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'

  MerchantOrderWindow:
    description: Merchant ordering window details
    type: object
    properties:
      isOrderdingEnabled:
        type: boolean
        description: Indicates if orders are allowed
      capacityPerWindow:
        type: integer
      startTime:
        type: string
        description: The hour and minutue in format HH:mm
      endTime:
        type: string
        description: The hour and minutue in format HH:mm
      interval:
        type: integer
        description: Interval between order windows, ex. 15 minutes
      windowCloseOffset:
        type: integer
        description: The time in minutes to stop allowing orders before the window closes. ex. -5 = orders not allowd 5 minutes before window ends. ex. 0 = orders allowed until the end_time
      windows:
        type: array
        items:
          $ref: '#/definitions/OrderWindow'

  MerchantSearchResult:
    description: This object contains merchant records.
    type: object
    readOnly: true
    properties:
      pages:
        $ref: '#/definitions/PageLink'
      merchants:
        type: array
        items:
          $ref: '#/definitions/Merchant'

  NVP:
    title: Name and Value pair.
    type: object
    properties:
      name:
        type: string
      value:
        type: string
      valueAsList:
        type: array
        minItems: 0
        items:
          type: string

  OrderWindow:
    description: Order window details
    type: object
    properties:
      startTime:
        type: string
      endTime:
        type: string
      orderCount:
        type: integer
      isAlcoholAllowed:
        type: boolean

  PageLink:
    description: Page link information.
    type: object
    readOnly: true
    properties:
      firstPage:
        type: boolean
        description: Indicates if the list contains first page data
      lastPage:
        type: boolean
        description: Indicates if the list contains last page data
        example: false
      currentPage:
        type: integer
        description: Current page number
        example: 1
      currentPageRecords:
        type: integer
        description: Number of records in current page
        example: 25
      totalPages:
        type: integer
        example: 2
      totalRecords:
        type: integer
        example: 27
      sortOrder:
        type: string
        enum:
          - asc
          - desc
        example: asc
        default: asc
      _links:
        type: array
        items:
          $ref: '#/definitions/Link'

  Price:
    description: A monetary value with currency
    type: object
    properties:
      amount:
        minimum: 0
        type: number
        format: double
        example: 15.35
      currencyCode:
        $ref: '#/definitions/ISO-4217'

  ProductAddition:
    description: Product addition, like corn pizza topping, or extended warranty
    type: object
    properties:
      productAdditionId:
        type: string
        example: avx-b4zd
      productAdditionName:
        type: string
        example: corn
      price:
        $ref: '#/definitions/Price'

  ProductAdditionGroup:
    description: Product additions group contains simullar additions, like pizza toppings
    type: object
    properties:
      productAdditionGroupId:
        type: string
        example: a-123-b4zd
      productAdditionGroupName:
        type: string
        example: toppings
      minSelections:
        description: minimum allowed selections. 0 or null means optional. 1 means user has to make at least 1 choice
        type: integer
      maxSelections:
        description: maximum allowed selections. 0 or null means no limitation
        type: integer
      productAdditions:
        type: array
        items:
          $ref: '#/definitions/ProductAddition'

  ProductGroup:
    description: A collection represents a grouping of products (items) that a merchant
        can create to organize them or make them easier to browse. Collection may
        contain other collections or items
    type: object
    properties:
      productGroupId:
        type: string
      productGroupName:
        type: string
      products:
        type: array
        items:
          $ref: '#/definitions/Product'

  Product:
    description: Product details
    type: object
    properties:
      productId:
        type: string
        description: product id or code
      productName:
        type: string
        description: name of the product
      description:
        type: string
        description: short description of the product
      productType:
        type: string
        description: type of the product
      mainImage:
          $ref: '#/definitions/Image'
      additionalImages:
        type: array
        items:
          $ref: '#/definitions/Image'
      productOptions:
        type: array
        items:
          $ref: '#/definitions/ProductOptions'
      productVariants:
        type: array
        items:
          $ref: '#/definitions/ProductVariant'
      productAdditionGroups:
        type: array
        items:
          $ref: '#/definitions/ProductAdditionGroup'

  ProductOptions:
    description: List of options for the product. Option describes how variations of the product are different from each other. For example it can be size, color, style, finish, material and etc. Product may have multiple options. If there is no options, this will be null or empty, and product will have just one variant
    type: object
    properties:
      productOptionsId:
        description: Indicates product options id
        type: string
      productOptionsName:
        type: string
        description: Indicates product options name

  ProductVariant:
    description: Product variant information
    type: object
    properties:
      productVariantId:
        type: string
      productVariantName:
        type: string
      productOptions:
        type: array
        items:
          $ref: '#/definitions/ProductOptions'
      images:
        type: array
        items:
          $ref: '#/definitions/Image'
      weight:
        $ref: '#/definitions/Weight'
      price:
        items:
          $ref: '#/definitions/Price'
      unitOfMeasurement:
        $ref: '#/definitions/UnitOfMeasurement'
      tax:
        type: array
        items:
          $ref: '#/definitions/TaxDetails'


  ProductGroupSearchResult:
    description: This object contains product group records.
    type: object
    readOnly: true
    properties:
      pages:
        $ref: '#/definitions/PageLink'
      productGroups:
        type: array
        items:
          $ref: '#/definitions/ProductGroup'

  SupportedFundingSource:
    description: Funding sources supported by the partner
    type: object
    properties:
        creditTypes:
          type: array
          readOnly: true
          items:
            $ref: '#/definitions/CreditType'
        prepaidTypes:
          type: array
          readOnly: true
          items:
            type: string
        loyaltyTypes:
          type: array
          readOnly: true
          items:
            type: string
        googlePayEnabled:
          type: boolean
          readOnly: true
        applePayEnabled:
          type: boolean
          readOnly: true
        samsungPayEnabled:
          type: boolean
          readOnly: true
        payPalEnabled:
          type: boolean
          readOnly: true
        venmoEnabled:
          type: boolean
          readOnly: true
        visaCheckoutEnabled:
          type: boolean
          readOnly: true
        masterPassEnabled:
          type: boolean
          readOnly: true
        achEnabled:
          type: boolean
          readOnly: true
        amazonPayEnabled:
          type: boolean
          readOnly: true
        cashPaymentEnabled:
          type: boolean
          readOnly: true

  UnitOfMeasurement:
    description:   The measurement used to calculate a unit price for a product variant (e.g. $9.99 / 100ml).
    type: object
    properties:
        amount:
          minimum: 0
          type: number
          format: double
          example: 15.35
        measurementType:
          $ref: '#/definitions/MeasurementType'

  TaxDetails:
    description: Tax details.
    type: object
    properties:
      code:
        type: string
        example: TX01
      description:
        type: string
        example: Sales Tax
      amount:
        type: string
        example: '7.50'
      rate:
        type: string
        example: '13.5'

  ThreeDSecure:
    description: Details of ThreeDSecure transaction used to process the challege flow
    type: object
    properties:
      transactionId:
        description: Transaction id generated on the server
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      transactionStatus:
        type: string
        description: Transactions status of 3DS server
        example: "C"
      transactionStatusReason:
        type: string
        description: Reason for the transaction status
      challengeResponse:
        type: string
        example: "ewogIC"
      challengeIndicator:
        type: string
        example: "01 = No preference
                  02 = No challenge requested
                  03 = Challenge requested: 3DS Requestor Preference
                  04 = Challenge requested: Mandate"
      dsTransactionId:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      acsTransactionId:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      serverTransactionId:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      acsReferenceNumber:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      acsSignedContent:
        type: string
        example: "292bb6b88....6fc4446894f878b7e32bd5e"
      cardType:
        $ref: '#/definitions/CreditCardType'
      challengeRequest:
        type: string
        example: "ewogICAiYW.......MjJjMGVjIgp9"
      acsUrl:
        type: string
        example: "https://test.modirum.com/dstests/ACSEmu2"
      iframeContent:
        type: string
        example: "<iframe></iframe>"
      termUrl:
        type: string
        example: "https://mydomain/3dstest?transactionId=292bb6b886fc4446894f878b7e32bd5e"
      isThreeDSMethodCompleted:
        type: boolean
        example: true
      isAuthenticationCompleted:
        type: boolean
        example: true
      cavv:
        type: string
        description: Card authenticaion verificaiton value
      threeDSVersion:
        type: string
      expiryDateTime:
        description: 3DS challenge transaction expiry date time.
        type: string
        readOnly: true
        format: date-time
        example: "2020-01-01T16:06:05Z"
      eci:
        type: string
        description: Electronic Commerce Indicator value

  Weight:
    description: Model of holding weight information
    type: object
    properties:
      value:
        type: number
        format: double
      unitOfMeasurement:
        $ref: '#/definitions/QuantityUOM'

#-------------------------------------
# Common Models
#-------------------------------------
  Error:
    description: Model for error messaging
    type: object
    properties:
      code:
        type: string
        description: Unique code representing the error.
      message:
        type: string
        description: A generic description of the error condition.
      category:
        type: string
        description: The resource associated with the error condition.
      developerInfo:
        type: object
        description: Information that needs to be understood by the client developers and should not be interpreted for application processing.
        properties:
          developerMessage:
            type: string
            description: An elaborative description of the error description.
          moreInfo:
            type: string
            description: Link to the error in Developer page.
          fieldError:
            description: Detailed information about message format errors.
            type: array
            items:
              properties:
                field:
                  description: The property or attribute associated with the error
                  type: string
                message:
                  description: Information specific to a property or attribute.
                  type: string
      hostExtraInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
      threeDSecureInfo:
        $ref: '#/definitions/ThreeDSecure'
      _links:
        type: array
        items:
          $ref: '#/definitions/Link'

    example:
      code: "40000"
      message: "Example Error"
      category: "example"
      developerInfo:
        developerMessage: "Invalid Message format in request payload"
        moreInfo: "https://www.example.com/errors/40000"
        fieldError:
          - field: "example id"
            message: "exampleId is mandatory"

#-------------------------------------
# ENUM Models
#-------------------------------------
  CreditCardType:
    title: Credit Card Type
    description: Indicates the type of credit account association
    type: string
    enum:
      - AMEX
      - DISCOVER
      - MASTERCARD
      - PLCC
      - VISA
      - OTHER

  MeasurementType:
    title: Type of measurement
    description: Indicates measurement type
    type: string
    enum:
      - WEIGHT
      - LENGTH
      - AREA
      - VOLUME

  MerchantCategory:
    title: Merchant category
    description: Indicates the merchant category information
    type: string
    enum:
      - RESTARAUNT
      - BAR
      - CONCESSIONS
      - COMMISSARY
      - VENDING_ROOM
      - OTHER

  OperatingStatus:
    title: Operating status
    description: Indicates merchant store operating status
    type: string
    enum:
      - OPEN
      - CLOSED

  QuantityUOM:
    description: Combined unit of measure for a POS sale.
    type: string
    enum:
      - ml
      - cc
      - litre
      - fluidOunce
      - pint
      - quart
      - gallonUS
      - gallonUK
      - gram
      - kg
      - oz
      - lb
      - ea

#-------------------------------------
# Responses
#-------------------------------------
responses:
  Created:
    description: Resource created
    headers:
      Location:
        type: string
        description: Location of newly created resource.
    schema:
      $ref: '#/definitions/ClosureResponse'

  OK:
    description: OK
    schema:
      $ref: '#/definitions/ClosureResponse'

  NoContent:
    description: The request succeeded but there's really nothing to show.

  BadRequest:
    description: Bad request
    schema:
      $ref: '#/definitions/Error'

  Unauthorized:
    description: Unauthorized

  NotFound:
    description: Not Found - The requested resource doesn't exist.
    schema:
      $ref: '#/definitions/Error'

  Conflict:
    description: Conflict - The requested operation conflicts with the current state of the identified resource.
    schema:
      $ref: '#/definitions/Error'

  ServerError:
    description: An unexpected server error occured.
    schema:
      $ref: '#/definitions/Error'

#-------------------------------------
# Parameter Models
#-------------------------------------
parameters:
  AcceptLanguageParam:
    name: Accept-Language
    description: The Accept-Language header contains information about the language preference of a user. This HTTP header is useful to multilingual sites for deciding the best language to serve to the client. i.e en-US,fr-CA
    in: header
    type: string

  ApiKeyParam:
    name: Api-Key
    description: An API key is a string value passed by a client app to the API proxies. The key uniquely identifies the client app.
    in: header
    required: true
    type: string

  AuthorizationParam:
    name: Authorization
    description: Authorization information for the request. Format- `HMAC {hmacToken}`
    in: header
    required: true
    type: string

  ClientTokenParam:
    name: Client-Token
    description: Used to pass the original client OAuth token information given in a client-credentials flow.  This field is only used when the server is making the request and needs to link the transaction to a specific client.  Format- `Bearer {access_token}`
    in: header
    type: string

  PageNumberParam:
    name: pageNo
    description: Page number
    in: query
    required: false
    type: integer

  PageSizeParam:
    name: pageSize
    description: 'Max number of records per page. Supported values - 5, 10, 15, 20, 25 ..50'
    in: query
    required: false
    type: integer
    allowEmptyValue: false

  MerchantIdParam:
    name: merchantId
    description: Unique identifier provided for the merchant profile.
    in: path
    required: true
    type: string

  SubMerchantIdHeaderParam:
    name: Sub-Merchant-Id
    description: Sub Merchant Id contains information about the merchant identifier
    in: header
    type: string

  MerchantCategoryParam:
    name: merchantCategory
    description: Merchant category, like restaratunt, bar, general store.
    in: query
    type: string

  MerchantSubCategoryParam:
    name: merchantSubCategory
    description: Merchant sub category, like food, beverages.
    in: query
    type: string

  SearchKeywordsParam:
    name: searchKeywords
    in : query
    description: Space delimited list of words for secondary filtering
    type: string

  TimestampParam:
    name: Timestamp
    description: Epoch timestamp in the request initiating syste
    in: header
    required: true
    type: string

  VenueIdParam:
    name: venueId
    description: Unique identifier provided for the venue.
    in: query
    type: string

#-------------------------------------
# Document Change Log
# 0.2.2
#     - No Changes
# 0.2.0
#     - Added 'OTHER' CreditCardType
#     - Added fields in ThreeDSecure object
#     - Added Price tier in POSItem
#     - Added hostExtraInfo in the balance/transaction API calls
#     - Added Merchant id as header field
# 0.1.9
#     - OfferRealizationType enum - Add TRANSACTION_LEVEL
#     - Updated Reward transactionLevel to add priceAdjustments
#     - Updated PriceAdjustment to add maxQuantity
#     - Added new API for deleting offers by transaction id
#     - Added washcodes under POSItem
#     - Added OfferStatus under PriceAdjustments
# 0.1.8
#     - Updated Reward lineItemLevel to add SaleItem
#     - Added 3ds web support
#     - Added percentage currency type
# 0.1.7
#     - Added reward description in Reward
#     - Added new API to retrieve balance based on request id
#     - Updated PriceAdjustment as list under POSItem
#     - Added 3ds challenge transaction expiry date time in ThreeDSecure
# 0.1.6
#     - Add OfferRealizationType enum to PromotionalOffer
#     - Add posAdjustment (type PriceAdjustment) to PromotionalOffer
#     - Add saleItems array of POSItem to PromotionalOfferQualifiers
#     - Adjusted the response payload to return loyaltyAccount object for /v1/loyalty/accounts API.
#     - Added ExpiryDate in Loyalty object
#     - Added Accept-Language header field
# 0.1.5
#     - Added 'currencyValue' & 'currencyCode' to LoyaltyBalance
#     - Added Link in the Error object.
#     - acsSignedContent and CardType in threeDSecureInfo object
# 0.1.4
#     - Added ServiceLevelCode under POSItem
#     - Updated salesLineItem with POSItem across all ymls. POSItem is superset of salesLineItem.
#     - Added requestType and requestedAmount fields on the request object
#     - Added offerCostInfo  in the PromotionalOffers entity
#     - Added 'rate' to TaxDetails
#     - Added PriceAdjustment under POSItem
#     - Added new API's for Opt-In
#     - Updated loyalty reference as loyaltyAccount in the availableOffers and selectOffer API's
# 0.1.3
#     - Adding NVP with valueAsList
#     - No change.
#     - update in DeviceInfo.
#     - Added select offer API for obtaining offer
#     - Added few additional fields in PromotionalOffers entity
# 0.1.2
#     - Modified Http method type from GET to POST for loyalty account retrieval and transations APIs.
# 0.1.1
#   - No change.
# 0.1.0
#      - Added client-token in the header field
# 0.0.9
#   - Added 'nameOnCard', 'cardType', 'expiryDate', 'cardSubType', 'billingAddress' attribute in ReferenceToken object
# 0.0.8
#   - Cleaned up items that aren't required with the remodeled services
#   - Created new APIs, removed ones not used
#   - Setup APIs as loyalty and offers categories (tags)
# 0.0.7
#   - Updated ReferenceToken to have more accurate attribute names, removed use value
#   - Cleaned up examples in the models
# 0.0.6
#     - No change.
# 0.0.5
#     - No change.
# 0.0.4
#     - Initial Version
#-------------------------------------
swagger: '2.0'
info:
  version: 0.2.2
  title: uCom Value-Add Services
  description: Services related to loyalty accounts such as new account creation, card registration, card transaction history, card details etc.
tags:
  - name: loyalty
    description: Operations and details about a loyalty accounts.
  - name: offers
    description: Operations and details about offers

host: int.api.firstdata.com
basePath: /ucom
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:

  /v1/loyalty/accounts:
    post:
      tags:
        - loyalty
      summary: Get loyalty account details
      description: Get loyalty account details from the issuer systems.  This is a general inquirey and not for information related to being vaulted at First Data.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          description: Details about loyalty account information.
          in: body
          schema:
            type: object
            properties:
              fdCustomerId:
                $ref: '#/definitions/FdCustomerId'
              fdAccountId:
                $ref: '#/definitions/FdAccountId'
              loyaltyAccount:
                $ref: '#/definitions/Loyalty'
              hostExtraInfo:
                type: array
                minItems: 0
                items:
                  $ref: '#/definitions/NVP'
                uniqueItems: true
      responses:
        200:
          $ref: '#/responses/OK'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        500:
          $ref: '#/responses/ServerError'
        204:
          $ref: '#/parameters/LocationParam'

  /v1/loyalty/accounts/{requestId}:
    get:
      tags:
        - loyalty
      summary: Get loyalty account details based on request id
      description: Get loyalty account details based on request id
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - $ref: '#/parameters/RequestIdParam'
      responses:
        200:
          $ref: '#/responses/BalanceResponse'
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        401:
          $ref: '#/responses/Unauthorized'
        500:
          $ref: '#/responses/ServerError'


  /v1/loyalty/accounts/send-verification:
    post:
      tags:
        - loyalty
      summary: Initiate some action against a loyalty account
      description: Reserved for calls that initiate an action outside of normal CRUD behavior and not easily modeled.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          description: Details about what action to initiate.
          in: body
          schema:
            type: object
            properties:
              fdCustomerId:
                $ref: '#/definitions/FdCustomerId'
              fdAccountId:
                $ref: '#/definitions/FdAccountId'
              loyaltyAccount:
                $ref: '#/definitions/Loyalty'
      responses:
        204:
          $ref: '#/responses/NoContent'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        500:
          $ref: '#/responses/ServerError'

  /v1/loyalty/transactions:
    post:
      tags:
        - loyalty
      summary: 'Get loyalty account details - account information, status'
      description: 'Get loyalty account details - account information, status'
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/StartDateParam'
        - $ref: '#/parameters/EndDateParam'
        - $ref: '#/parameters/PageNumberParam'
        - $ref: '#/parameters/PageSizeParam'
        - $ref: '#/parameters/FiltersParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          description: Details about loyalty account information.
          in: body
          schema:
            type: object
            properties:
              fdCustomerId:
                $ref: '#/definitions/FdCustomerId'
              fdAccountId:
                $ref: '#/definitions/FdAccountId'
              loyaltyAccount:
                $ref: '#/definitions/Loyalty'
              hostExtraInfo:
                type: array
                minItems: 0
                items:
                  $ref: '#/definitions/NVP'
                uniqueItems: true
      responses:
        200:
          description: List of loyalty transactions
          schema:
            type: array
            items:
              $ref: '#/definitions/LoyaltyTransaction'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'

  /v1/value-add/available-offers:
    post:
      tags:
        - offers
      summary: Creates an offer event for a client
      description: Based on a combination of criteria, create an offer event and return details to the client application.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          description: Details about what fields to update for the given loyalty account.
          in: body
          schema:
            $ref: '#/definitions/OffersRequest'
      responses:
        200:
          description: List of available offers
          schema:
            type: object
            properties:
              availOffersTrxnId:
                description: Identifier to be carried along with subsequent interactions using the available offers returned to the client.
                type: string
              basket:
                type: object
                properties:
                  saleItems:
                    type: array
                    items:
                      $ref: '#/definitions/POSItem'
                  currencyCode:
                    $ref: '#/definitions/ISO-4217'
              offers:
                type: array
                items:
                  $ref: '#/definitions/PromotionalOffer'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'

  /v1/value-add/available-offers/{availOffersTrxnId}:
    delete:
      tags:
        - offers
      summary: Deletes available offers by transaction id
      description: Deletes available offers by transaction id.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - $ref: '#/parameters/AvailOffersTrxnIdParam'
      responses:
        204:
          $ref: '#/responses/NoContent'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'

  /v1/value-add/select-offer:
    post:
      tags:
        - offers
      summary: Obtains an offer with the loyalty host
      description: Based on a combination of criteria, An offer can be obtained from the list of available offers.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          description: Details about what fields needed for obtaining an offer.
          in: body
          schema:
            $ref: '#/definitions/SelectOfferRequest'
      responses:
        204:
          $ref: '#/responses/NoContent'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'

  /v1/value-add/opt-ins/acknowledge:
    post:
      tags:
        - opt-ins
      summary: Submits opt-in consents with the host
      description: Based on a combination of criteria, Submits consents and return details to the client application.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          description: Details about what fields to update for the given loyalty account.
          in: body
          schema:
            $ref: '#/definitions/OptInRequest'
      responses:
        204:
          $ref: '#/responses/NoContent'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'

  /v1/value-add/opt-ins:
    post:
      tags:
        - opt-ins
      summary: Retrieving the consent information for a given loyalty account from the host
      description: Based on a combination of criteria, Gets the list of consents.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          description: Details about what fields needed for retrieving content.
          in: body
          schema:
            $ref: '#/definitions/OptInRequest'
      responses:
        200:
          description: List the status of consents
          schema:
            type: object
            properties:
              consents:
                type: array
                minItems: 0
                items:
                  $ref: '#/definitions/Consent'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'


definitions:
#-------------------------------------
# Operational Models
#-------------------------------------
  OptInRequest:
    title: OptIn request
    type: object
    properties:
      accountInfo:
        description: Accounts that is request to perform opt-in
        properties:
          fdCustomerId:
            $ref: '#/definitions/FdCustomerId'
          fdAccountId:
            $ref: '#/definitions/FdAccountId'
          loyaltyAccount:
            $ref: '#/definitions/Loyalty'
      consents:
        description: Consent details
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/Consent'

  OffersRequest:
    title: Offers request
    type: object
    properties:
      merchantInfo:
        $ref: '#/definitions/StoreDetail'
      basket:
        type: object
        properties:
          saleItems:
            type: array
            items:
              $ref: '#/definitions/POSItem'
          currencyCode:
            $ref: '#/definitions/ISO-4217'
          requestedAmount:
            $ref: '#/definitions/RequestedAmount'
      requestType:
        description: Offers request type
        type: array
        minItems: 0
        items:
          type: string
      deviceInfo:
        $ref: '#/definitions/DeviceInfo'
      accountInfo:
        description: Accounts that may have applicable offers
        properties:
          fdCustomerId:
            $ref: '#/definitions/FdCustomerId'
          fdAccountId:
            $ref: '#/definitions/FdAccountId'
          loyaltyAccount:
            $ref: '#/definitions/Loyalty'
          hostExtraInfo:
            type: array
            minItems: 0
            items:
              $ref: '#/definitions/NVP'
            uniqueItems: true

  SelectOfferRequest:
    description: Offer that will be used for selection.
    type: object
    properties:
      fdCustomerId:
        $ref: '#/definitions/FdCustomerId'
      fdAccountId:
        $ref: '#/definitions/FdAccountId'
      loyaltyAccount:
        $ref: '#/definitions/Loyalty'
      promotionalOffer:
        $ref: '#/definitions/PromotionalOffer'

#-------------------------------------
# Resource Models
#-------------------------------------
  Address:
    description: A physical mailing address for this user.
    type: object
    properties:
      type:
        description: Canonical type values of "work", "home", and "other".
        type: string
      streetAddress:
        description: The full street address component, which may include house number, street name, P.O. box, and multi-line extended street address information.
        type: string
      locality:
        description: The city or locality component.
        type: string
      region:
        description: The state or region component.
        type: string
      postalCode:
        description: The zip code or postal code component.
        type: string
      country:
        description: The country name component.  When specified, the value MUST be in ISO 3166-1 "alpha-2" code format; e.g., the United States and Sweden are "US" and "SE", respectively.
        type: string
      formatted:
        description: The full mailing address, formatted for display or use with a mailing label.
        type: string
      primary:
        description: Indicates if this is the default address for the associated resource. It only has meaning when used in a set or array of addresses.
        type: boolean
    example:
      type: "work"
      streetAddress: "100 Universal City Plaza"
      locality: "Hollywood"
      region: "CA"
      postalCode: "91608"
      country: "US"
      formatted: "100 Universal City Plaza\nHollywood, CA 91608 US"
      primary: true

  Consent:
    description: Contains information about Opt-In consent
    type: object
    properties:
      consentId:
        type: string
      consentVersion:
        type: string
        example: ESS_APP_001
      consentChannel:
        type: string
        example: ESS_092019
      consentType:
        type: string
        example: LOYALTY
      additionalInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true

  ExpiryDate:
    description: Contains account expiration data and needs to either send the values in individual fields OR as a singleValue.
    type: object
    properties:
      month:
        type: string
        description: Month format 'MM'
        pattern: "[0-9]{2,2}"
        minLength: 2
        maxLength: 2
        example: "09"
      year:
        type: string
        description: Year format 'YY'
        pattern: "[0-9]{2,2}"
        minLength: 2
        maxLength: 2
        example: "20"
      singleValue:
        type: string
        description: Month and year together, 'MMYY' or 'MMYYYY'.  If the latter format, the string will be parsed and validated per the given format.  Any other format will be rejected.
        minLength: 4
        maxLength: 6

  FdCustomerId:
    title: FD Customer ID
    description: FD customer identifier tied to the vaulted accounts.
    type: string
    example: "cuid-0987613457398475"

  FdAccountId:
    description: Unique identifier for a customer account vaulted with uCom
    type: string
    example: "muid-3d4f2ac...c91014f2dc1"

  ISO-4217:
    description: Holds currency information
    type: object
    properties:
      code:
        type: string
        default: "USD"
        example: "USD"
      number:
        type: integer
        default: 840
        example: 840
      digits:
        type: integer
        default: 2
        example: 2
      currency:
        type: string
        default: "US Dollar"
        example: "US Dollar"

  Link:
    description: Model to communicate linked resources.
    type: object
    required:
      - href
      - rel
    properties:
      href:
        description: URL to linked resource.
        type: string
        format: uri
      rel:
        description: Defines the type of link relationship to current resource.
        type: string
        enum:
          - current.page
          - previous.page
          - next.page
          - self
        example:
          "self"
      method:
        description: Defines the HTTP method for the given href.
        type: string
        default: "GET"
        example:
          "GET"
      id:
        description: Identifier to the resource.
        type: string
        example:
          "415e5cf6bfdb11e8a355529269fb1459"

  Loyalty:
    description: Information about a Loyalty account.
    type: object
    properties:
      accountId:
        description: Account identifier, can be used for traditional card number or any alphanumeric value.  For example, a unique value not shown on the card, email address, phone number, social id, etc.
        type: string
        example: "email-id@example.com"
      cardNumber:
        description: Card number of loyalty account. The accountId parameter superscedes this field.  This field is ignored when the request is to create a new acccount.
        type: string
        example: '905960447'
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      alias:
        description: Last four values of the cardNumber
        type: string
        readOnly: true
        example: "1111"
      accountStatus:
        $ref: '#/definitions/LoyaltyAccountStatus'
      loyaltyProgram:
        $ref: '#/definitions/LoyaltyProgram'
      pin:
        description: Security pin number
        type: string
      communications:
        description: Methods the account onwer has agreed to be contacted
        type: object
        properties:
          email:
            type: boolean
          phone:
            type: boolean
          sms:
            type: boolean
      commonFlags:
        description: Common true/false settings on an account
        type: object
        properties:
          tncAccepted:
            type: boolean
          canEarn:
            type: boolean
          canRedeem:
            type: boolean
          isChildAccount:
            type: boolean
          isVirtualAccount:
            description: Indicates if the account has an associated plastic card or not.
            type: boolean
      balance:
        $ref: '#/definitions/LoyaltyBalance'
      token:
        $ref: '#/definitions/ReferenceToken'
      metadata:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true

  LoyaltyBalance:
    type: object
    properties:
      balance:
        type: number
      minRedeemUnits:
        type: number
      maxRedeemUnits:
        type: number
      unitType:
        $ref: '#/definitions/BalanceUnitTypes'
      conversionRatio:
        type: number
      currencyValue:
        type: number
      currencyCode:
        $ref: '#/definitions/ISO-4217'
    readOnly: true

  LoyaltyProgram:
    description: Value object to hold a list of loyalty items.
    type: object
    properties:
      programId:
        description: Unique identifier used to provide link between applications across disparate systems.
        type: string
      hostProgramId:
        description: Loyalty program Id used by the host (cloud) solution. Not in used in uCom system. For future use.
        type: string
      programName:
        description: Loyalty program name. Common name for the given loyalty program
        type: string
      programDesc:
        description:
          Used to describe the loyalty program and perhaps used to display to
          the client.
        type: string
      programProvider:
        description: Sponsor of the loyalty program.
      loyaltyType:
        $ref: '#/definitions/LoyaltyType'
      programStatus:
        $ref: '#/definitions/ProgramStatus'

  LoyaltyTransaction:
    title: Loyalty Account Transaction
    type: object
    properties:
      transactionDateTime:
        description: The "DateTime" that the transaction was performed.
        type: string
        format: date-time
      transactionType:
        description: Transaction type as defined by the account issuer.
        type: string
      transactionUnits:
        type: number
      unitType:
        $ref: '#/definitions/BalanceUnitTypes'
      balance:
        $ref: '#/definitions/LoyaltyBalance'

  LoyaltyBalanceTransactionInfo:
    type: object
    description: Loyalty balance transaction response.
    properties:
      requestId:
        description: Unique identifier of request used to retrieve balance.
        type: string
        readOnly: true
        example: 485-27834-285903824-095
      requestStatus:
        $ref: '#/definitions/RequestStatus'
      createdDateTime:
        type: string
        description: Date and time of resource creation.
        format: date-time
        readOnly: true
        example: '2016-04-16T16:06:05.000Z'
      lastUpdatedDateTime:
        type: string
        description: Last updated Date and time of resource.
        format: date-time
        readOnly: true
        example: '2016-04-16T16:06:05.000Z'
      balances:
        type: array
        items:
          $ref: '#/definitions/LoyaltyBalanceInfo'

  LoyaltyBalanceInfo:
    type: object
    properties:
      loyalty:
        $ref: '#/definitions/Loyalty'
      balanceStatus:
        $ref: '#/definitions/BalanceStatus'
      hostExtraInfo:
        minItems: 0
        uniqueItems: true
        type: array
        description: Key value pairs providing additional details from host on the balance retrieval.
           Key 'host.account.status' will provide current account status from the host.
           Key 'host.transaction.status' will provide the transaction result as success or failure.
           Key 'host.transaction.error' will provide error message from Host if transaction status is failure
        items:
          $ref: '#/definitions/NVP'

  NVP:
    title: Name and Value pair.
    type: object
    properties:
      name:
        type: string
      value:
        type: string
      valueAsList:
        type: array
        minItems: 0
        items:
          type: string

  POSItem:
    description: Structure to support passing POS sale info as part of the sale request.
    type: object
    properties:
      itemDescription:
        type: string
        example: "Standard Wash"
      itemPrice:
        type: number
        format: double
        example: 7.50
      unitOfMeasurement:
        type: string
        example: "each"
      unitsSold:
        type: number
        format: double
        example: 1
      totalItemSaleAmount:
        type: number
        format: double
        example: 7.50
      originalItemPrice:
        type: number
        format: double
        example: 7.50
      originalTotalSaleAmount:
        type: number
        format: double
        example: 7.50
      posCodeFormat:
        type: string
        example: "plu"
      posCode:
        type: string
        example: "102"
      posCodeModifier:
        type: string
        example: "1"
      productCode:
        type: string
        example: "102"
      tax:
        type: array
        items:
          $ref: '#/definitions/TaxDetails'
      type:
        $ref: '#/definitions/SaleItemType'
      serviceLevelCode:
          $ref: '#/definitions/ServiceLevelCode'
      priceAdjustments:
        type: array
        items:
          $ref: '#/definitions/PriceAdjustment'
      washCodes:
        type: array
        items:
          $ref: '#/definitions/WashCode'
      priceTier:
        type: string

  PromotionalOffer:
    description: Offer opportunity details
    type: object
    properties:
      offerReferenceId:
        description: Unique identifier for an offer.
        type: string
      offerName:
        description: Common name for the reward.
        type: string
      offerDescription:
        description: Description about the reward details.
        type: string
      type:
        description: Type can be used to distinguish offers, i.e EARN
      offerProvider:
        description: Provider name of the offer
        type: string
      partnerGroup:
        description: Partner group names where the offer can be obtained
        type: array
        minItems: 0
        items:
          type: string
      offerMessage:
        description: The offer information that is for the client to see on the user-interface.  This is most often set by the host system.
        type: string
      effectiveDateTime:
        description: Starting time for a reward validity.
        type: string
        format: date-time
      expiryDateTime:
        description: Ending time for a reward to be applied.
        type: string
        format: date-time
      visibleFrom:
        description: Date when offer will start the visibility.
        type: string
        format: date-time
      visibleTo:
        description: Date when offer will end the visibility.
        type: string
        format: date-time
      registrationFrom:
        description: Date when offer start with the registration.
        type: string
        format: date-time
      registrationTo:
        description: Date when offer end with the registration.
        type: string
        format: date-time
      promotionId:
        description: Links to associated promotion if it applies.
        type: string
      isExclusive:
        description: Indicator if offer can be combined with other offers or is mutually exclusive.
        type: boolean
      userAcceptanceRequired:
        description: Indicator if a user has to accept the offer before it can be applied to a transaction or accrued in an account.
        type: boolean
      offerStatus:
        $ref: '#/definitions/OfferStatus'
      currencyCode:
        $ref: '#/definitions/ISO-4217'
      qualifiers:
        description: Conditions that must be met for the rewared to be awarded.
        type: object
        properties:
          currency:
            type: array
            items:
              properties:
                currencyType:
                  $ref: '#/definitions/ValueAddCurrencyType'
                value:
                  description: Value of the reward in the associated currency.
                  type: string
          saleItems:
            type: array
            items:
              $ref: '#/definitions/POSItem'
      offerCostInfo:
        description: Offer cost details.
        type: object
        properties:
          currency:
            type: array
            items:
              properties:
                currencyType:
                  $ref: '#/definitions/ValueAddCurrencyType'
                value:
                  description: Value of the Offer cost associated with currency.
                  type: string
          saleItems:
            type: array
            items:
              $ref: '#/definitions/POSItem'
      reward:
        $ref: '#/definitions/Reward'
      metadata:
        description: Details about what to display, images, messaging, etc.
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
      offerRealizationType:
        $ref: '#/definitions/OfferRealizationType'

  PriceAdjustment:
    description: Structure to support providing price adjustment for sale item.
    type: object
    properties:
      adjustmentId:
        type: string
        example: "discount prepay"
      productCode:
        type: string
        example: "941"
      programID:
        type: string
        example: "P66"
      reason:
        type: string
        example: "loyaltyOffer"
      amount:
        type: number
        format: double
        example: 0.1
      percentage:
        type: number
        format: float
        example: 10
      itemPrice:
        type: number
        format: double
        example: 7.50
      unitOfMeasurement:
        type: string
        example: "each"
      unitsSold:
        type: number
        format: double
        example: 1
      rebateLabel:
        type: string
        example: "HostDiscount"
      maxQuantity:
        type: number
        format: double
        example: 7.50
      offerStatus:
        $ref: '#/definitions/OfferStatus'

  RequestedAmount:
    title: Requested Amount
    description: Requested amount for the given redemption request in lower denomination.
    type: number
    format: double
    minimum: 0
    exclusiveMinimum: true
    example: '500.00'

  ReferenceToken:
    description: Surrogate value used to represent a handle to an account without sharing PCI/PII data to look it up.
    type: object
    properties:
      tokenId:
        description: Actual token value
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      tokenProvider:
        description: Indicates what system is the originator of the token
        type: string
        example: "TRANS_ARMOR"
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      tokenType:
        $ref: '#/definitions/ReferenceTokenType'
      nameOnCard:
        description: Name as printed on physical card or on virtual account
        type: string
        example: "John Smith"
      cardType:
        $ref: '#/definitions/CreditCardType'
      cardSubType:
        description: Merchant or brand specific information about the type of account
        type: string
        example: "ABCD"
      billingAddress:
        $ref: '#/definitions/Address'

  Reward:
    description: Reward details
    type: object
    properties:
      rewardId:
        description: Unique identifier for the reward instance
        type: string
      rewardDescription:
        description: reward description
        type: string
      effectiveDateTime:
        description: Starting time for a reward validity.
        type: string
        format: date-time
      expiryDateTime:
        description: Ending time for a reward to be applied.
        type: string
        format: date-time
      offerReferenceId:
        description: Link to the offer that provided the opportunity for a customer to receive the reward.
        type: string
      currencyCode:
        $ref: '#/definitions/ISO-4217'
      values:
        description: Medium of exchange for the value.
        type: object
        properties:
          transactionLevel:
            type: array
            items:
              properties:
                currencyType:
                  $ref: '#/definitions/ValueAddCurrencyType'
                value:
                  description: Value of the reward in the associated currency.
                  type: string
                realizationCode:
                  $ref: '#/definitions/RewardRealizationCode'
                priceAdjustments:
                  type: array
                  items:
                    $ref: '#/definitions/PriceAdjustment'
          lineItemLevel:
            type: array
            items:
              properties:
                saleItem:
                  $ref: '#/definitions/POSItem'
                realizationCode:
                  $ref: '#/definitions/RewardRealizationCode'
      dispensationCode:
        $ref: '#/definitions/RewardDispensationCode'

  StoreDetail:
    description: Store details.
    type: object
    properties:
      locationId:
        type: string
        example: '50001'

  TaxDetails:
    description: Tax details.
    type: object
    properties:
      code:
        type: string
        example: TX01
      description:
        type: string
        example: Sales Tax
      amount:
        type: string
        example: '7.50'
      rate:
          type: string
          example: '13.5'

  ThreeDSecure:
    description: Details of ThreeDSecure transaction used to process the challege flow
    type: object
    properties:
      transactionId:
        description: Transaction id generated on the server
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      transactionStatus:
        type: string
        description: Transactions status of 3DS server
        example: "C"
      transactionStatusReason:
        type: string
        description: Reason for the transaction status
      challengeResponse:
        type: string
        example: "ewogIC"
      challengeIndicator:
        type: string
        example: "01 = No preference
                  02 = No challenge requested
                  03 = Challenge requested: 3DS Requestor Preference
                  04 = Challenge requested: Mandate"
      dsTransactionId:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      acsTransactionId:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      serverTransactionId:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      acsReferenceNumber:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      acsSignedContent:
        type: string
        example: "292bb6b88....6fc4446894f878b7e32bd5e"
      cardType:
        $ref: '#/definitions/CreditCardType'
      challengeRequest:
        type: string
        example: "ewogICAiYW.......MjJjMGVjIgp9"
      acsUrl:
        type: string
        example: "https://test.modirum.com/dstests/ACSEmu2"
      iframeContent:
        type: string
        example: "<iframe></iframe>"
      termUrl:
        type: string
        example: "https://mydomain/3dstest?transactionId=292bb6b886fc4446894f878b7e32bd5e"
      isThreeDSMethodCompleted:
        type: boolean
        example: true
      isAuthenticationCompleted:
        type: boolean
        example: true
      cavv:
        type: string
        description: Card authenticaion verificaiton value
      threeDSVersion:
        type: string
      expiryDateTime:
        description: 3DS challenge transaction expiry date time.
        type: string
        readOnly: true
        format: date-time
        example: "2020-01-01T16:06:05Z"
      eci:
        type: string
        description: Electronic Commerce Indicator value

  WashCode:
    description: Purchased wash information.
    type: object
    properties:
      code:
        description: Wash code generated by the POS system.
        type: string
      description:
        description: Wash code description generated by the POS system.
        type: string
      expiration:
        description: Expiration date for the purchased wash code
        type: string
        format: date-time
      message:
        description: Field to carry message from site system for display to customer.
        type: string

#-------------------------------------
# Common Models
#-------------------------------------
  DeviceInfo:
    description: Request origin device details
    type: object
    required:
      - id
      - kind
    properties:
      id:
        description: Unique Id for the device. Value should not contain line feeds, carriage returns, tabs, leading or trailing spaces, or multiple spaces.
        type: string
        example: "537edec8-d33e-4ee8-93a7-b9f61876950c"
      kind:
        description: Possible values are mobile, wearable, automobile, embedded,desktop, other.
        type: string
        example: "mobile"
      details:
        title: deviceData
        description: Device data information from multiple providers.
        type: array
        minItems: 0
        uniqueItems: true
        items:
          description: Collection of device data
          type: object
          properties:
            provider:
              description: Identifies the provider of the data and is often used when decrypting data on the server.
              type: string
              example: "InAuth"
            dataCapture:
              description: Device data captured as a bundle and transmitted as an encrypted and/or specifically formated string.
              type: object
              properties:
                rawData:
                  description: Device capture - raw data blob
                  type: string
                  example: "aaaaaXREUVZGRlFY...aMV"
                dataEventId:
                  description: Event identifier used map state on the server.
                  type: string
                  example: "BB8E4E92...Fz1E063113"
                captureTime:
                  description: Device data capture time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
                  type: string
                  format: date-time
                  example: "2016-04-16T16:06:05Z"
            dataStatic:
              description: Device static details
              type: object
              properties:
                os:
                  description: Device OS name
                  type: string
                  example: "Android 5.1.1 Lollipop"
                osVersion:
                  description: Device OS version
                  type: string
                  example: "5.1.1 Lollipop"
                model:
                  description: Device model
                  type: string
                  example: "XT1540"
                type:
                  description: Device type
                  type: string
                  example: "Moto G"
            dataDynamic:
              description: Device location details
              type: object
              properties:
                latitude:
                  description: Device position - latitude at the time of the data event
                  type: string
                  example: "13.0827 N"
                longitude:
                  description: Device position - longitude at the time of the data event
                  type: string
                  example: "80.2707 E"
                ipAddress:
                  description: IP address
                  type: string
                  example: "172.27.37.221"
                captureTime:
                  description: Device data capture time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
                  type: string
                  format: date-time
                  example: "2016-04-16T16:06:05Z"
            dataApplication:
              description: Mobile application specific data
              type: object
              properties:
                version:
                  description: Mobile application version.
                  type: string
                  format: sting
                  example: "1.0.0"
                name:
                  description: Mobile application name.
                  type: string
                  format: sting
                  example: "aplication-name"
                country:
                  description: Mobile application store country.
                  type: string
                  format: sting
                  example: "US"
      additionalInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
    example:
      {
      id: "537edec8-d33e-4ee8-93a7-b9f61876950c",
      kind: "mobile",
      details: [{
        provider: "InAuth",
        dataCapture: {
          rawData: "aaaaaXREUVZGRlFY...aMV",
          dataEventId: "BB8E4E92...Fz1E063113",
          captureTime: "2016-04-16T16:06:05Z"
        },
        dataStatic: {
           os: "Android 5.1.1 Lollipop",
           osVersion: "5.1.1 Lollipop",
           model: "XYX-1",
           Type: "Moto G"
          },
        dataDynamic: {
          latitude: "13.0827 N",
          longitude: "80.2707 E",
          ipAddress: "172.27.37.221",
          captureTime: "2016-04-16T16:06:05Z"
          }
      }],
      additionalInfo: [{
         name: "some-key",
         value: "some-value"
      }]
    }

  Error:
    description: Model for error messaging
    type: object
    properties:
      code:
        type: string
        description: Uniquely identifies an error condition. Client applications need to read and handle errors based on this.
      message:
        type: string
        description: A generic description of the error condition.
      category:
        type: string
        description: The resource associated with the error condition.
      developerInfo:
        type: object
        description: Information that needs to be understood by the client developers and should not be interpreted for application processing.
        properties:
          developerMessage:
            type: string
            description: An elaborative description of the error description.
          moreInfo:
            type: string
            description: Link to the error in Developer page.
          fieldError:
            description: Detailed information about message format errors.
            type: array
            items:
              properties:
                field:
                  description: The property or attribute associated with the error
                  type: string
                message:
                  description: Information specific to a property or attribute.
                  type: string
      hostExtraInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
      threeDSecureInfo:
        $ref: '#/definitions/ThreeDSecure'
      _links:
        type: array
        items:
          $ref: '#/definitions/Link'

    example:
      code: '40000'
      message: Example Error
      category: example
      developerInfo:
        developerMessage: Invalid Message format in request payload
        moreInfo: 'https://www.example.com/errors/40000'
        fieldError:
          - field: example id
            message: exampleId is mandatory

#-------------------------------------
# ENUM Models
#-------------------------------------
  BalanceUnitTypes:
    description: Indicator to determine how to display balances
    type: string
    enum:
      - CENTS
      - MILES
      - POINTS
      - STARS
      - LITRES

  BalanceStatus:
    type: string
    description: Indicates the status of the balance transaction of a given account.
      'INPROGRESS' - Balance retrieval is still in inprogress
      'COMPLETED' - Balance is available
      'ERROR' - Balance retrieval failed. System error
      'UNAVAILABLE' - Balance is not available. Check Host extra info for additional details
    enum:
      - INPROGRESS
      - COMPLETED
      - ERROR
      - UNAVAILABLE

  CreditCardType:
    title: Credit Card Type
    description: Indicates the type of credit account association
    type: string
    enum:
      - AMEX
      - DISCOVER
      - MASTERCARD
      - PLCC
      - VISA
      - OTHER

  LoyaltyAccountStatus:
    description: Indicator of the account state as indicated by the loyalty issuer.
    type: string
    enum:
      - ENROLLED
      - ANONYMOUS
      - PARTIAL
      - PENDING_DATA
      - PENDING_VERIFICATION
      - INACTIVE
      - BLOCKED

  LoyaltyType:
    description: Identifier to indicate type of Loyalty program being registered.
    type: string
    enum:
      - LOCAL
      - NATIONAL

  OfferStatus:
    description: Maintain the status of stackable promotions
    type: object
    properties:
      code:
        description: Indicates offer status code, NOT_ACTIVATED | ACTIVATED | REDEEMED | DECLINED | CANCELLED | FAILED
        type: string
      statusInfo:
        description: Details about what to display, images, messaging, etc.
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true

  OfferRealizationType:
    description: Identifier to indicate the type of a Loyalty Offer.
    type: string
    enum:
      - SPLIT_PAYMENT
      - PRE_ITEM_AMOUNT_OFF
      - POST_ITEM_AMOUNT_OFF
      - PRICE_ROLLBACK
      - HBD
      - TRANSACTION_LEVEL

  ProgramStatus:
    description: Indicates if the given loyalty program is still active or not.
    type: string
    enum:
      - ENABLED
      - DISABLED
      - CONTRACTED_ONLY

  RequestStatus:
    type: string
    description: Indicates the status of the overall request.
      'INPROGRESS' - Balance retrieval is still in inprogress for one or more accounts
      'COMPLETED' - Balance retrieval is completed for all accounts
    readOnly: true
    enum:
      - INPROGRESS
      - COMPLETED

  ReferenceTokenType:
    description: Indicates if the given loyalty program is still active or not.
    type: string
    enum:
      - FORMAT_PRESERVING_MULTI_USE
      - FORMAT_PRESERVING_SINGLE_USE
      - CLAIM_CHECK_NONCE
      - RANDOM_MULTI_USE
      - RANDOM_SINGLE_USE
      - CLAIM_CHECK_NONCE_WITH_PINCAPTURE

  RewardDispensationCode:
    description: Indicates when a reward is to be redeemed.
    type: string
    enum:
      - INSTANT
      - DEFERRED

  RewardRealizationCode:
    description: Indicates how a reward is applied to a transaction.
    type: string
    enum:
      - NEW_PRICE
      - PERCENT_OFF
      - AMOUNT_OFF
      - EARN
      - REDEEM

  SaleItemType:
    description: Indicates the type of item
    type: string
    enum:
      - FUEL
      - CARWASH
      - OTHER

  ServiceLevelCode:
    description: Indicates service level code.
    type: string
    default: 'S'
    enum:
      - S
      - F
      - N
      - X

  ValueAddCurrencyType:
    description: Indicates the type of units used to show value of a reward.
    type: string
    enum:
      - MONEY
      - POINTS
      - DISTANCE
      - COUNTS
      - VOLUMES
      - VISITS
      - PERCENTAGE

#-------------------------------------
# Responses
#-------------------------------------
responses:
  Created:
    description: Resource created
    headers:
      Location:
        type: string
        description: Location of newly created resource.
    schema:
      $ref: '#/definitions/Loyalty'

  OK:
    description: OK
    schema:
      $ref: '#/definitions/Loyalty'

  BalanceResponse:
    description: Loyalty balance response based on request id
    schema:
      $ref: '#/definitions/LoyaltyBalanceTransactionInfo'

  NoContent:
    description: The request succeeded but there’s really nothing to show.

  BadRequest:
    description: Bad request
    schema:
      $ref: '#/definitions/Error'

  Unauthorized:
    description: Unauthorized

  NotFound:
    description: Not Found - The requested resource doesn't exist.
    schema:
      $ref: '#/definitions/Error'

  Conflict:
    description:
      Conflict - The requested operation conflicts with the current state of the
      identified resource.
    schema:
      $ref: '#/definitions/Error'

  ServerError:
    description: An unexpected server error occured.
    schema:
      $ref: '#/definitions/Error'


#-------------------------------------
# Parameter Models
#-------------------------------------
parameters:
  AcceptLanguageParam:
    name: Accept-Language
    description: The Accept-Language header contains information about the language preference of a user. This HTTP header is useful to multilingual sites for deciding the best language to serve to the client. i.e en-US,fr-CA
    in: header
    type: string

  ApiKeyParam:
    name: Api-Key
    description: An API key is a string value passed by a client app to the API proxies. The key uniquely identifies the client app.
    in: header
    required: true
    type: string

  AuthorizationParam:
    name: Authorization
    description: Authorization information for the request. Format- `HMAC {hmacToken}`
    in: header
    required: true
    type: string

  AvailOffersTrxnIdParam:
    name: availOffersTrxnId
    description: Available offers transaction id
    in: path
    required: true
    type: string

  ClientTokenParam:
    name: Client-Token
    description: Used to pass the original client OAuth token information given in a client-credentials flow.  This field is only used when the server is making the request and needs to link the transaction to a specific client.  Format- `Bearer {access_token}`
    in: header
    type: string

  ClientRequestIdParam:
    name: Client-Request-Id
    description:  Contains a unique ID generated by the client that can be used for enforcing idempotency on POST actions. POSTs are inherently non-idempotent  and submitting the exact same request multiple times would create duplicate resources. Note:- Omitting this header increases the risk of duplicate transactions, which for payments could cost the client issues like double-billing.
    in: header
    required: true
    type: string

  LocationParam:
    name: Location
    description: Indicates the target of a redirection i.e /v1/loyalty/accounts/{requestId}
    in: header
    type: string

  FdCustomerIdQueryParam:
    name: fdCustomerId
    description: Unique identifier for a customer profile registered with uCom
    in: query
    required: true
    type: string

  FdAccountIdQueryParam:
    name: fdAccountId
    description: Unique identifier for a customer account vaulted with uCom
    in: query
    required: true
    type: string

  StartDateParam:
    name: startDate
    description: Date from which transactions are to be retrieved. Format YYYYMMDD
    in: query
    required: false
    type: string
    format: date-time

  EndDateParam:
    name: endDate
    description: Date upto which transactions are to be retrieved. Format YYYYMMDD
    in: query
    required: false
    type: string
    format: date-time

  PageNumberParam:
    name: pageNo
    description: Page number
    in: query
    required: false
    type: integer

  PageSizeParam:
    name: pageSize
    description: 'Max number of records per page. Supported values - 5, 10, 15, 20, 25 ..50'
    in: query
    required: false
    type: integer

  FiltersParam:
    name: filters
    description: Used to limit data in the response body
    in: query
    required: false
    type: string

  RequestIdParam:
    name: requestId
    description: Unique identifier for the request.
    in: path
    required: true
    type: string

  TimestampParam:
    name: Timestamp
    description: Epoch timestamp in the request initiating system
    in: header
    required: true
    type: string

  SubMerchantIdParam:
    name: Sub-Merchant-Id
    description: Sub Merchant Id contains information about the merchant identifier
    in: header
    type: string

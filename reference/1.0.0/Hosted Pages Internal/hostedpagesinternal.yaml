openapi: 3.0.1
info:
  title: uCom Hosted Pages Services
  description: Services provides CRUD operaion for hosted pages. With the help of
    these APIs hosted pages will be created and rendred to UI.
  version: 0.2.2
servers:
- url: https://int.api.firstdata.com/ucom
tags:
- name: hosted-pages
  description: Operations and details about a hosted pages.
paths:
  /v1/hosted-pages/configurations:
    post:
      tags:
      - hosted-pages
      description: This API is to create page configurations.This will be used by
        admin to create a page for partner.
      parameters:
      - name: Api-Key
        in: header
        description: An API key is a string value passed by a client app to the API
          proxies. The key uniquely identifies the client app.
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Epoch timestamp in the request initiating system
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Format `HMAC {hmacToken}`
        required: true
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: Contains a unique ID generated by the client that can be used
          for enforcing idempotency on POST actions. POSTs are inherently non-idempotent
          and submitting the exact same request multiple times would create duplicate
          resources. Note:- Omitting this header increases the risk of duplicate transactions,
          which for payments could cost the client issues like double-billing.
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: The Accept-Language header contains information about the language
          preference of a user. This HTTP header is useful to multilingual sites for
          deciding the best language to serve to the client. i.e en-US,fr-CA
        schema:
          type: string
      - name: Sub-Merchant-Id
        in: header
        description: Sub Merchant Id contains information about the merchant identifier
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationRequest'
        required: true
      responses:
        201:
          description: Resource created
          headers:
            Location:
              description: Location of newly created resource.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageConfiguration'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: payload
  /v1/hosted-pages/configurations/{configId}:
    get:
      tags:
      - hosted-pages
      description: This API will get the page configuration for specific partner.
      parameters:
      - name: Api-Key
        in: header
        description: An API key is a string value passed by a client app to the API
          proxies. The key uniquely identifies the client app.
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Epoch timestamp in the request initiating system
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Format `HMAC {hmacToken}`
        required: true
        schema:
          type: string
      - name: configId
        in: path
        description: This is id to fetch page configurations.
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: The Accept-Language header contains information about the language
          preference of a user. This HTTP header is useful to multilingual sites for
          deciding the best language to serve to the client. i.e en-US,fr-CA
        schema:
          type: string
      - name: Sub-Merchant-Id
        in: header
        description: Sub Merchant Id contains information about the merchant identifier
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PageConfiguration'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - hosted-pages
      description: This API is to update page configurations - pageCSS/PageJson. This
        API can be use to update CSS and Json both with different content type. for
        CSS update  Content type is text/css and for Json update content type is application/json.
      parameters:
      - name: Api-Key
        in: header
        description: An API key is a string value passed by a client app to the API
          proxies. The key uniquely identifies the client app.
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Epoch timestamp in the request initiating system
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Format `HMAC {hmacToken}`
        required: true
        schema:
          type: string
      - name: configId
        in: path
        description: This is id to fetch page configurations.
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: The Accept-Language header contains information about the language
          preference of a user. This HTTP header is useful to multilingual sites for
          deciding the best language to serve to the client. i.e en-US,fr-CA
        schema:
          type: string
      - name: Sub-Merchant-Id
        in: header
        description: Sub Merchant Id contains information about the merchant identifier
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationRequest'
        required: true
      responses:
        204:
          description: The request succeeded but thereâ€™s really nothing to show.
          content: {}
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: Conflict - The requested operation conflicts with the current
            state of the identified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: payload
components:
  schemas:
    ConfigurationRequest:
      type: object
      properties:
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
        configuration:
          $ref: '#/components/schemas/PageConfiguration'
      description: Hosted page configuration request
    Link:
      required:
      - href
      - rel
      type: object
      properties:
        href:
          type: string
          description: URL to linked page resource.
          format: uri
          example: https://api.example.com/v1/hosted-pages/pages/page-id-123457/
        rel:
          type: string
          description: Defines the type of link relationship to current page resource.
          example: account.add
        method:
          type: string
          description: Defines the HTTP method for the given href.
          example: GET
          default: GET
      description: Model to communicate linked page resources.
    NVP:
      title: Name and Value pair.
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        valueAsList:
          minItems: 0
          type: array
          items:
            type: string
    PageConfiguration:
      title: Page request
      type: object
      properties:
        pageJson:
          type: string
          description: It provides the Json for the page.
          example: ""
        pageCss:
          type: string
          description: It provides the css for the page.
          example: '{ @font-face{ font-family: EMprint; src:url(''/mAccountsWeb/css/exxon-font/Emprint/EMprint-Regular.ttf'');
            } body { margin: 0px; padding: 1% 0 1%; background-color: white; color:
            #959595; font-size: 12pt; font-family: EMprint; } }'
        configId:
          type: string
          description: page id of page configuration.
          example: hosted-page-123456
        pageType:
          type: string
          description: The purpose of the page. It can be add account page, add or
            save payment card page, etc.
          example: account.add
        _links:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Link'
    DeviceInfo:
      required:
      - id
      - kind
      type: object
      properties:
        id:
          type: string
          description: Unique Id for the device. Value should not contain line feeds,
            carriage returns, tabs, leading or trailing spaces, or multiple spaces.
          example: 537edec8-d33e-4ee8-93a7-b9f61876950c
        kind:
          type: string
          description: Possible values are mobile, wearable, automobile, embedded,desktop,
            other.
          example: mobile
        details:
          title: deviceData
          minItems: 0
          uniqueItems: true
          type: array
          description: Device data information from multiple providers.
          items:
            type: object
            properties:
              provider:
                type: string
                description: Identifies the provider of the data and is often used
                  when decrypting data on the server.
                example: InAuth
              dataCapture:
                type: object
                properties:
                  rawData:
                    type: string
                    description: Device capture - raw data blob
                    example: aaaaaXREUVZGRlFY...aMV
                  dataEventId:
                    type: string
                    description: Event identifier used map state on the server.
                    example: BB8E4E92...Fz1E063113
                  captureTime:
                    type: string
                    description: Device data capture time in Internet Date/Time format
                      - yyyy-MM-dd'T'HH:mm:ss'Z'
                    format: date-time
                    example: 2016-04-16T16:06:05Z
                description: Device data captured as a bundle and transmitted as an
                  encrypted and/or specifically formated string.
              dataStatic:
                type: object
                properties:
                  os:
                    type: string
                    description: Device OS name
                    example: Android 5.1.1 Lollipop
                  osVersion:
                    type: string
                    description: Device OS version
                    example: 5.1.1 Lollipop
                  model:
                    type: string
                    description: Device model
                    example: XT1540
                  type:
                    type: string
                    description: Device type
                    example: Moto G
                description: Device static details
              dataDynamic:
                type: object
                properties:
                  latitude:
                    type: string
                    description: Device position - latitude at the time of the data
                      event
                    example: 13.0827 N
                  longitude:
                    type: string
                    description: Device position - longitude at the time of the data
                      event
                    example: 80.2707 E
                  ipAddress:
                    type: string
                    description: IP address
                    example: 172.27.37.221
                  captureTime:
                    type: string
                    description: Device data capture time in Internet Date/Time format
                      - yyyy-MM-dd'T'HH:mm:ss'Z'
                    format: date-time
                    example: 2016-04-16T16:06:05Z
                description: Device location details
              dataApplication:
                type: object
                properties:
                  version:
                    type: string
                    description: Mobile application version.
                    format: sting
                    example: 1.0.0
                  name:
                    type: string
                    description: Mobile application name.
                    format: sting
                    example: aplication-name
                  country:
                    type: string
                    description: Mobile application store country.
                    format: sting
                    example: US
                description: Mobile application specific data
            description: Collection of device data
        additionalInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
      description: Request origin device details
      example:
        id: 537edec8-d33e-4ee8-93a7-b9f61876950c
        kind: mobile
        details:
        - provider: InAuth
          dataCapture:
            rawData: aaaaaXREUVZGRlFY...aMV
            dataEventId: BB8E4E92...Fz1E063113
            captureTime: 2016-04-16T16:06:05Z
          dataStatic:
            os: Android 5.1.1 Lollipop
            osVersion: 5.1.1 Lollipop
            model: XYX-1
            Type: Moto G
          dataDynamic:
            latitude: 13.0827 N
            longitude: 80.2707 E
            ipAddress: 172.27.37.221
            captureTime: 2016-04-16T16:06:05Z
        additionalInfo:
        - name: some-key
          value: some-value
    Error:
      type: object
      properties:
        code:
          type: string
          description: Uniquely identifies an error condition. Client applications
            need to read and handle errors based on this.
        message:
          type: string
          description: A generic description of the error condition.
        category:
          type: string
          description: The resource associated with the error condition.
        developerInfo:
          type: object
          properties:
            developerMessage:
              type: string
              description: An elaborative description of the error description.
            moreInfo:
              type: string
              description: Link to the error in Developer page.
            fieldError:
              type: array
              description: Detailed information about message format errors.
              items:
                type: object
                properties:
                  field:
                    type: string
                    description: The property or attribute associated with the error
                  message:
                    type: string
                    description: Information specific to a property or attribute.
          description: Information that needs to be understood by the client developers
            and should not be interpreted for application processing.
      description: Model for error messaging
      example:
        code: "40000"
        message: Example Error
        category: example
        developerInfo:
          developerMessage: Invalid Message format in request payload
          moreInfo: https://www.example.com/errors/40000
          fieldError:
          - field: example id
            message: exampleId is mandatory
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Conflict:
      description: Conflict - The requested operation conflicts with the current state
        of the identified resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Created:
      description: Resource created
      headers:
        Location:
          description: Location of newly created resource.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PageConfiguration'
    NoContent:
      description: The request succeeded but thereâ€™s really nothing to show.
      content: {}
    NotFound:
      description: Not Found - The requested resource doesn't exist.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    OK:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PageConfiguration'
    ServerError:
      description: An unexpected server error occured.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content: {}
  parameters:
    AcceptLanguageParam:
      name: Accept-Language
      in: header
      description: The Accept-Language header contains information about the language
        preference of a user. This HTTP header is useful to multilingual sites for
        deciding the best language to serve to the client. i.e en-US,fr-CA
      schema:
        type: string
    ApiKeyParam:
      name: Api-Key
      in: header
      description: An API key is a string value passed by a client app to the API
        proxies. The key uniquely identifies the client app.
      required: true
      schema:
        type: string
    AuthorizationParam:
      name: Authorization
      in: header
      description: Format `HMAC {hmacToken}`
      required: true
      schema:
        type: string
    SubMerchantIdParam:
      name: Sub-Merchant-Id
      in: header
      description: Sub Merchant Id contains information about the merchant identifier
      schema:
        type: string
    ClientRequestIdParam:
      name: Client-Request-Id
      in: header
      description: Contains a unique ID generated by the client that can be used for
        enforcing idempotency on POST actions. POSTs are inherently non-idempotent
        and submitting the exact same request multiple times would create duplicate
        resources. Note:- Omitting this header increases the risk of duplicate transactions,
        which for payments could cost the client issues like double-billing.
      required: true
      schema:
        type: string
    ConfigIdParam:
      name: configId
      in: path
      description: This is id to fetch page configurations.
      required: true
      schema:
        type: string
    TimestampParam:
      name: Timestamp
      in: header
      description: Epoch timestamp in the request initiating system
      required: true
      schema:
        type: string

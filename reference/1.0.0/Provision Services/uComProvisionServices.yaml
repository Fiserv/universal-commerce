#-------------------------------------
# Document Change Log
# 0.2.2
#     - No Changes
# 0.2.1
#     - Added MoneyNetwork account type
#     - Added SEC code for ACH
#     - Added EBT account type
#     - Added Merchant id as header field
#     - Added asset provider field in the ACH
# 0.2.0
#     - Added 'OTHER' CreditCardType
#     - Added fields in ThreeDSecure object
#     - Added support for digital payments vaulting
#     - Added PAN type and BIN
#     - Added Expiry Date to InApp entities
#     - Added Developer Email in ApplePay/GooglePay/SamsungPay objects
#     - Added ECIIndicator in ApplePay/GooglePay/SamsungPay objects
# 0.1.9
#     - No change.
# 0.1.8
#     - Added Fleet account type
#     - Added 3ds web support
#     - Added account type for ACH
# 0.1.7
#     - Added hostedExtraInfo in Account object
#     - Added credit in Paypal object
#     - Added enrollment status and bank name in the ACH object
#     - Removed deviceId within Account object
#     - Added 3ds challenge transaction expiry date time in ThreeDSecure
# 0.1.6
#     - Added ExpiryDate in Loyalty object
#     - Added Accept-Language header field
# 0.1.5
#     - Added 'currencyValue' & 'currencyCode' to LoyaltyBalance
#     - Added Link in the Error object.
#     - Adding billingPhone in the Credit object
# 0.1.4
#     - Introduced venmo account type under Account object
#     - Credit is added to MasterPass
#     - Added ThreeDSecure under Account object
#     - acsSignedContent and CardType in threeDSecureInfo object
# 0.1.3
#     - Adding NVP with valueAsList
#     - Added securityQuestions and additionalInfo entities
#     - update in DeviceInfo.
# 0.1.2
#     - No change.
# 0.1.1
#     - removed transactionId, oldPin, pin, type, token object from ach
#     - added cardNumber, expiryDate, cardType in ach object
#     - Introduced MasterPass capabilities
#     - Added 'id' attribute to Link
# 0.1.0
#     - Added client-token in the header field
# 0.0.9
#     - Introduced 'ach', 'token', 'accountOwner', 'visaCheckout' elements in Account object
#     - Added 'cardSubType' attribute in Credit object
#     - Added 'nonce' attribute in Paypal object
# 0.0.8
#     - No change.
# 0.0.7
#   - Updated ReferenceToken to have more accurate attribute names, removed use value
#   - Cleaned up examples in the models
# 0.0.6
#     - No change.
# 0.0.5
#     - No change.
# 0.0.4
#     - No change.
# 0.0.3
#     - No change.
# 0.0.2
#     - PATCH operation updated to send 202, 206 for success scenario with 'Provision' object is response body.
#     - Added 'osVersion' attribute to 'DeviceInfo' object.
#     - Enhanced 'ProvisionStatus' enum with 'OTP_REQUIRED' and 'PENDING_VERIFICATION' values.
#     - Updated patch operation to send 200 instead of 206 with response body.
#     - Updated patch operation to send 204 with no response body.
#     - Removed 409 from patch.
#     - OTP channel can be more than one. Made it array.
#     - Changed ProvisionStatus to REFERRED from DEFERRED.
# 0.0.1
#     - Initial Version
#-------------------------------------
swagger: '2.0'
info:
  version: 0.2.2
  title: uCom Account Provisioning Services
  description: Services related to provisioning a new account with a remote provider.
tags:
  - name: provisions
    description: Operations and details about a provisioning a card to the vault using issuer validation.
host: int.api.firstdata.com
basePath: /ucom
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1/customers/{fdCustomerId}/provisions:
    post:
      tags:
        - provisions
      description: Provisioning is used to create a new account in a remote system.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdParam'
        - $ref: '#/parameters/FdCustomerIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/Provision'
      responses:
        201:
          $ref: '#/responses/Created'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/ServerError'

  /v1/customers/{fdCustomerId}/provisions/{provisionId}:
    patch:
      tags:
        - provisions
      description: Provisioning is used to update an account in a remote system.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/FdCustomerIdParam'
        - $ref: '#/parameters/ProvisionIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/Provision'
      responses:
        200:
          $ref: '#/responses/OK'
        202:
          $ref: '#/responses/Accepted'
        204:
          $ref: '#/responses/NoContent'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'

    get:
      tags:
        - provisions
      description: API to get the provision OTP method.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/FdCustomerIdParam'
        - $ref: '#/parameters/ProvisionIdParam'
        - $ref: '#/parameters/QueryFields'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
      responses:
        200:
          $ref: '#/responses/OK'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'

    delete:
      tags:
        - provisions
      description: API to deleted the provisioned account.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/FdCustomerIdParam'
        - $ref: '#/parameters/ProvisionIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
      responses:
        204:
          $ref: '#/responses/NoContent'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'

definitions:
#-------------------------------------
# Operational Models
#-------------------------------------
  Provision:
    description: Represents an event to vault an account that requires a multi-step and potentially asynchrounous process to complete.
    type: object
    properties:
      provisionId:
        description: Account provision identifier.
        type: string
        example: "prov-reqt-id-123456"
      fdCustomerId:
        description: uCom customer identifier.
        type: string
        example: "cust-id-123456"
      process:
        $ref: '#/definitions/ProvisionProcess'
      account:
        $ref: '#/definitions/Account'
      otpChannels:
        type: array
        items:
          $ref: '#/definitions/OTPChannels'
      issuerExtraInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
      deviceInfo:
        $ref: '#/definitions/DeviceInfo'
      _links:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/Link'
        uniqueItems: true

#-------------------------------------
# Resource Models
#-------------------------------------
  Account:
    description: Account information - can only be ONE of the account types. Currently OpenAPI doesn't support a "oneOf" tag to show this constraint in hte spec.
    type: object
    properties:
      fdAccountId:
        description: Unique identifier for a customer account vaulted with uCom
        type: string
      type:
        $ref: '#/definitions/AccountType'
      status:
        $ref: '#/definitions/AccountStatus'
      credit:
        $ref: '#/definitions/Credit'
      prepaid:
        $ref: '#/definitions/Prepaid'
      loyalty:
        $ref: '#/definitions/Loyalty'
      paypal:
        $ref: '#/definitions/Paypal'
      token:
        $ref: '#/definitions/ReferenceToken'
      ach:
        $ref: '#/definitions/ACH'
      accountOwner:
        $ref: '#/definitions/User'
      visaCheckout:
        $ref: '#/definitions/VisaCheckout'
      venmo:
        $ref: '#/definitions/Venmo'
      masterpass:
        $ref: '#/definitions/MasterPass'
      fleet:
        $ref: '#/definitions/Fleet'
      applePay:
        $ref: '#/definitions/ApplePay'
      samsungPay:
        $ref: '#/definitions/SamsungPay'
      googlePay:
        $ref: '#/definitions/GooglePay'
      threeDSecureInfo:
        $ref: '#/definitions/ThreeDSecure'
      moneyNetwork:
        $ref: '#/definitions/MoneyNetwork'
      ebt:
        $ref: '#/definitions/EBT'
      nickName:
        description: Name given by the user to label the account that has meaning for them visually.
        type: string
      securityQuestions:
        description: A list of questions.
        type: array
        items:
          $ref: '#/definitions/Question'
      additionalInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
      hostExtraInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
      dateCreated:
        description: Date created time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
        type: string
        format: date-time
        example: "2016-04-16T16:06:05Z"
      dateModified:
        description: Date modified time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
        type: string
        format: date-time
        example: "2016-04-16T16:06:05Z"

  ACH:
    description: Information about an ACH account
    type: object
    properties:
      accountNumber:
        type: string
        description: Unique number identifying the ACH account provided by Financial institution.
        example: '92658250156'
      routingNumber:
        type: string
        description: Number to identify the financial institution
        example: '999999999'
      secCode:
        type: string
        description: SEC Code is optional data, It is specifically required for ACH account which is ruled by NACHA compliance.
      cardNumber:
        description: ACH Card number, can only be sent when vaulting an account.  This field will NOT be present in responses.
        type: string
        example: "9111111111111111"
      cardType:
        $ref: '#/definitions/AchCardType'
      securityCode:
        type: string
        description: Code to validate the ACH account, like micro deposit or security code.
        example: '278356'
      alias:
        description: Last four values of the cardNumber
        type: string
        readOnly: true
        example: "1111"
      enrollmentStatus:
        $ref: '#/definitions/AchEnrollmentStatus'
      enrollmentSubStatuses:
        type: array
        items:
          $ref: '#/definitions/AchEnrollmentSubStatus'
      accountType:
        $ref: '#/definitions/AchAccountType'
      bankName:
        type: string
        description: Name of the bank associated with the ACH account
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      assetProvider:
        $ref: '#/definitions/AssetProvider'

  Address:
    description: A physical mailing address for this user.
    type: object
    properties:
      type:
        description: Canonical type values of "work", "home", and "other".
        type: string
      streetAddress:
        description: The full street address component, which may include house number, street name, P.O. box, and multi-line extended street address information.
        type: string
      locality:
        description: The city or locality component.
        type: string
      region:
        description: The state or region component.
        type: string
      postalCode:
        description: The zip code or postal code component.
        type: string
      country:
        description: The country name component.  When specified, the value MUST be in ISO 3166-1 "alpha-2" code format; e.g., the United States and Sweden are "US" and "SE", respectively.
        type: string
      formatted:
        description: The full mailing address, formatted for display or use with a mailing label.
        type: string
      primary:
        description: Indicates if this is the default address for the associated resource. It only has meaning when used in a set or array of addresses.
        type: boolean
    example:
      type: "work"
      streetAddress: "100 Universal City Plaza"
      locality: "Hollywood"
      region: "CA"
      postalCode: "91608"
      country: "US"
      formatted: "100 Universal City Plaza\nHollywood, CA 91608 US"
      primary: true

  ApplePay:
    type: object
    properties:
      version:
        type: string
        example: "EC_v1"
      developerEmail:
        type: string
      signature:
        type: string
        example: "MIAGCSqGSIb......AAAA=="
      decryptAlias:
        description: field of the public key certificate.
        type: string
        example: "oslo.com.xxx.Prod_mer"
      data:
        type: string
        example: "3CguW5ecfTz...Yuhw="
      applicationData:
        type: string
        example: "VEVTVA=="
      dPanLast4:
        type: string
        example: "9876"
      bin:
        type: string
      eciIndicator:
        type: string
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      panType:
        type: string
      cardType:
        $ref: '#/definitions/CreditCardType'
        example: "VISA"
      header:
        type: object
        properties:
          applicationDataHash:
            type: string
          ephemeralPublicKey:
            type: string
            example: "MFkwEwYHKoZIzj0CIKoZIz.....NBQQ=="
          publicKeyHash:
            type: string
            example: "+vbONwRlVqJX0........"
          transactionId:
            type: string
            example: "3827c5a02638.....34d50"
      token:
        $ref: '#/definitions/ReferenceToken'
      billingAddress:
        $ref: '#/definitions/Address'
      billingPhone:
        $ref: '#/definitions/Phone'

  AssetProvider:
    type: object
    properties:
      providerName:
        type: string
        example: "coinbase"

  Credit:
    description: Information on a credit account
    type: object
    properties:
      cardNumber:
        description: Primary account number, can only be sent when vaulting an account.  This field will NOT be present in responses.
        type: string
        example: "4111111111111111"
      bin:
        type: string
      nameOnCard:
        description: Name as printed on physical card or on virtual account
        type: string
        example: "John Smith"
      alias:
        description: Last four values of the cardNumber
        type: string
        readOnly: true
        example: "1111"
      cardType:
        $ref: '#/definitions/CreditCardType'
      cardSubType:
        description: Merchant or brand specific information about the type of account
        type: string
        example: "ABCD"
      billingAddress:
        $ref: '#/definitions/Address'
      billingPhone:
        $ref: '#/definitions/Phone'
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      securityCode:
        type: string
        example: "444"
      sequenceNumber:
        description: Applicable only for private-label accounts
        type: string
        example: "01"
      token:
        $ref: '#/definitions/ReferenceToken'

  Email:
    description: Email address for the user.
    type: object
    properties:
      type:
        description: The "type" sub-attribute is used to provide a classification meaningful to the (human) user.  The user interface should encourage the use of basic values of "work", "home", and "other" and MAY allow additional type values to be used at the discretion of the service client.
        type: string
      value:
        description: The value SHOULD be specified according to RFC5321.
        type: string
      primary:
        description:
          Defines if this entry is to be used as the primary or default for the
          user.
        type: boolean
        default: false
    example:
      value: bjensen@example.com
      type: work
      primary: true


  EBT:
    description: Electronic Benefits Transfer card information
    type: object
    properties:
      cardNumber:
        description: Primary account number, can only be sent when vaulting an account.  This field will NOT be present in responses.
        type: string
      nameOnCard:
        description: Name as printed on physical card or on virtual account
        type: string
      alias:
        description: Last four values of the cardNumber
        type: string
        readOnly: true
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      bin:
        description: BIN of EBT card
        type: string
        readOnly: true
      pin:
        description: PIN for EBT card
        type: string
      pinCaptureId:
        description: Session id used on client side SDK to capture the card pin
        type: string
      transactionId:
        description: The unique transaction ID
        type: string
      balance:
        $ref: '#/definitions/EBTBalance'
      metadata:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
      token:
        $ref: '#/definitions/ReferenceToken'

  EBTBalance:
    type: object
    properties:
      cashBalance:
        type: number
      cashCurrencyCode:
        $ref: '#/definitions/ISO-4217'
      snapBalance:
        type: number
      snapCurrencyCode:
        $ref: '#/definitions/ISO-4217'
    readOnly: true

  ExpiryDate:
    description: Contains account expiration data and needs to either send the values in individual fields OR as a singleValue.
    type: object
    properties:
      month:
        type: string
        description: Month format 'MM'
        pattern: "[0-9]{2,2}"
        minLength: 2
        maxLength: 2
        example: "09"
      year:
        type: string
        description: Year format 'YY'
        pattern: "[0-9]{2,2}"
        minLength: 2
        maxLength: 2
        example: "20"
      singleValue:
        type: string
        description: Month and year together, 'MMYY' or 'MMYYYY'.  If the latter format, the string will be parsed and validated per the given format.  Any other format will be rejected.
        minLength: 4
        maxLength: 6

  Fleet:
    description: Information on a Fleet account
    type: object
    properties:
      cardNumber:
        description: Primary account number, can only be sent when vaulting an account.  This field will NOT be present in responses.
        type: string
      nameOnCard:
        description: Name as printed on physical card or on virtual account
        type: string
      alias:
        description: Card alias
        type: string
        readOnly: true
      cardType:
        $ref: '#/definitions/FleetCardType'
      billingAddress:
        $ref: '#/definitions/Address'
      billingPhone:
        $ref: '#/definitions/Phone'
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      securityCode:
        type: string
      sequenceNumber:
        description: Sequence number of the card.
        type: string
      token:
        $ref: '#/definitions/ReferenceToken'

  GooglePay:
    description: Google Payment specific information
    type: object
    properties:
      version:
        description: Identifies encryption/signing scheme.
        type: string
        example: "EC_v1"
      developerEmail:
        type: string
      signature:
        description: Signature to verify Google initiated message.
        type: string
        example: "MIAGCSqGSIb......AAAA=="
      data:
        description: Data includes encryptedMessage, ephemeralPublicKey, tag.
        type: string
        example: "{\"encryptedMessage\":\"8nx...u003d\",\"ephemeralPublicKey\":\"BGH...u003d\",\"tag\":\"nvm...\\u003d\"}"
      dPanLast4:
        type: string
        example: "9876"
      bin:
        type: string
      eciIndicator:
        type: string
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      panType:
        type: string
      cardType:
        $ref: '#/definitions/CreditCardType'
        example: "VISA"
      token:
        $ref: '#/definitions/ReferenceToken'
      billingAddress:
        $ref: '#/definitions/Address'
      billingPhone:
        $ref: '#/definitions/Phone'

  Group:
    description: Group
    type: object
    properties:
      value:
        description: The id of the group.
        type: string
      href:
        description: The URI of the corresponding "Group" resources to which the user belongs.
        type: string
      display:
        description: The common name of the group.
        type: string
    example:
      value: e9e30dba-f08f-4109-8486-d5c6a331660a
      href: 'https://example.com/v2/Groups/e9e30dba-f08f-4109-8486'
      display: Tour Guides

  Identity:
    description: Information about user identity.
    type: object
    properties:
      type:
        description: The "type" sub-attribute is used to provide a classification meaningful to the (human) user.  The user interface should encourage the use of basic values of "driving_license", "ssn", and "other" and MAY allow additional type values to be used at the discretion of the service client.
        type: string
        example: 'driving_license'
      value:
        description: The actual number as provided by issuing authority to identify user.
        type: string
        example: '05978345'
      issuingState:
        description: To be populated only in applicable identity types
        type: string
        example: 'GA'

  IMS:
    description: Instant messaging address for the user.
    type: object
    properties:
      value:
        description: A shortened version one of the following values - aim, gtalk, icq, xmpp, msn, skype, qq, yahoo, or other. This will change with popularity of various applicatiions at any time.
        type: string
      type:
        type: string
      primary:
        description: Flag to indicate primary account
        type: boolean
        default: false
    example:
      value: someaimhandle
      type: aim

  ISO-4217:
    description: ISO 4217 currency format in which the balance is represented.
    type: object
    properties:
      code:
        type: string
        default: "USD"
        example: "USD"
      number:
        type: integer
        default: 840
        example: 840
      digits:
        type: integer
        default: 2
        example: 2
      currency:
        type: string
        default: "US Dollar"
        example: "US Dollar"

  Loyalty:
    description: Information about a Loyalty account.
    type: object
    properties:
      accountId:
        description: Account identifier, can be used for traditional card number or any alphanumeric value.  For example, a unique value not shown on the card, email address, phone number, social id, etc.
        type: string
        example: "email-id@example.com"
      cardNumber:
        description: Card number of loyalty account. The accountId parameter superscedes this field.  This field is ignored when the request is to create a new acccount.
        type: string
        example: '905960447'
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      alias:
        description: Last four values of the cardNumber
        type: string
        readOnly: true
        example: "1111"
      accountStatus:
        $ref: '#/definitions/LoyaltyAccountStatus'
      loyaltyProgram:
        $ref: '#/definitions/LoyaltyProgram'
      pin:
        description: Security pin number
        type: string
      communications:
        description: Methods the account onwer has agreed to be contacted
        type: object
        properties:
          email:
            type: boolean
          phone:
            type: boolean
          sms:
            type: boolean
      commonFlags:
        description: Common true/false settings on an account
        type: object
        properties:
          tncAccepted:
            type: boolean
          canEarn:
            type: boolean
          canRedeem:
            type: boolean
          isChildAccount:
            type: boolean
          isVirtualAccount:
            description: Indicates if the account has an associated plastic card or not.
            type: boolean
      balance:
        $ref: '#/definitions/LoyaltyBalance'
      token:
        $ref: '#/definitions/ReferenceToken'
      metadata:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true

  LoyaltyBalance:
    type: object
    properties:
      balance:
        type: number
      minRedeemUnits:
        type: number
      maxRedeemUnits:
        type: number
      unitType:
        $ref: '#/definitions/BalanceUnitTypes'
      conversionRatio:
        type: number
      currencyValue:
        type: number
      currencyCode:
        $ref: '#/definitions/ISO-4217'
    readOnly: true

  LoyaltyProgram:
    description: Value object to hold a list of loyalty items.
    type: object
    properties:
      programId:
        description: Unique identifier used to provide link between applications across disparate systems.
        type: string
      hostProgramId:
        description: Loyalty program Id used by the host (cloud) solution. Not in used in uCom system. For future use.
        type: string
      programName:
        description: Loyalty program name. Common name for the given loyalty program
        type: string
      programDesc:
        description: Used to describe the loyalty program and perhaps used to display to the client.
        type: string
      programProvider:
        description: Sponsor of the loyalty program.
        type: string
      loyaltyType:
        $ref: '#/definitions/LoyaltyType'
      programStatus:
        $ref: '#/definitions/ProgramStatus'
    example:
      programId: "TEST_PROGRAM"
      hostProgramId: "TEST_HOST_PROGRAM"
      programName: "TEST_LOAYLTY_PROGRAM"
      programDesc: "Test loyalty program"
      programProvider: "Test Provider"
      loyaltyType: "LOCAL"
      status: "ENABLED"

  Link:
    description: Model to communicate linked resources.
    type: object
    required:
      - href
      - rel
    properties:
        href:
          description: URL to linked resource.
          type: string
          format: uri
          example:
            "https://api.example.com/v1/customers/cust-id-123456/accounts/acct-id-123456"
        rel:
          description: Defines the type of link relationship to current resource.
          type: string
          example:
            "linked.account"
        method:
          description: Defines the HTTP method for the given href.
          type: string
          default: "GET"
          example:
            "GET"
        id:
          description: Identifier to the resource.
          type: string
          example:
            "415e5cf6bfdb11e8a355529269fb1459"

  MasterPass:
    description: Information about a MasterPass account.
    type: object
    properties:
      transactionId:
        type: string
        description: MasterPass generated Unique identifier for accessing the account details.
        example: "1234567890120298"
      credit:
        $ref: '#/definitions/Credit'

  MoneyNetwork:
    type: object
    properties:
      accountNumber:
        type: string
      cardNumber:
        type: string
      firstName:
        type: string
      lastName:
        type: string

  NVP:
    title: Name and Value pair.
    type: object
    properties:
      name:
        type: string
      value:
        type: string
      valueAsList:
        type: array
        minItems: 0
        items:
          type: string

  OTPChannels:
    description: channles to receive OTP - can be SMS, Phone or email. This object will be set only in case of request/reply of OTP methods.
    type: object
    properties:
      id:
        type: string
      type:
        type: string
        readOnly: true
      hint:
        description: phone number or email id hint. Masked mail id or phone number.
        type: string
        readOnly: true
      preferred:
        type: boolean
        default: false
      deliveryModes:
        type: array
        items:
          $ref: '#/definitions/OTPDeliveryModes'
        readOnly: false
      selectedMode:
         $ref: '#/definitions/OTPDeliveryModes'
      optCode:  #Encrypted
        description: It contains OTP sent to use via voice, SMS or Email in encrypted format.
        type: string
    example:
      id: "ch02"
      type: "Cell"
      hint: "xxx-xxx-6789"
      preferred: ??
      deliveryModes: [
      "VOICE",
      "SMS"
      ]
      selected: "SMS"
      otpCode: "6789"

  OTPDeliveryModes:
    description: This is OTP delivery options. It can be SMS, Phone, Email. This will be used in both cases - Receive OTP channel and Send OTP channel.
    type: object
    enum:
      - VOICE
      - SMS
      - EMAIL

  Paypal:
    description: Information about a Paypal account.
    type: object
    properties:
      payerId:
        type: string
        description: Paypal generated Unique identfier for a Paypal account.
        example: "LPLWNMTBWMFAY"
      nonce:
        type: string
        description: Paypal generated nonce.
        example: "ab12-124C-ab12-124C-ab12-124C"
      credit:
        $ref: '#/definitions/Credit'

  Phone:
    description: Phone number for the user.
    type: object
    properties:
      value:
        description: The value SHOULD be specified according to the format defined in RFC3966, e.g., 'tel:+1-201-555-0123'.
        type: string
      type:
        description: Often has typical values of "work", "home", "mobile", "fax", "pager", and "other" and MAY allow more types to be defined by the service client.
        type: string
      primary:
        description: Defines if this entry is to be used as the primary or default for the user.
        type: boolean
        default: false
    example:
      value: 555-555-5555
      type: work

  Photo:
    description:  A URI that is a uniform resource locator (as defined in Section 1.1.3 of RFC3986) that points to a resource location representing the user's image. The resource MUST be a file (e.g., a GIF, JPEG, or PNG image file) rather than a web page containing an image.
    type: object
    properties:
      value:
        description: URI pointing to user's image file.
        type: string
      type:
        description:
          Defines the following canonical values to represent popular photo
          sizes - "photo" and "thumbnail".
        type: string
    example:
      value: 'https://photos.example.com/profilephoto/72930000000Ccne/F'
      type: thumbnail

  PersonName:
    description: The components of the user's name.
    type: object
    properties:
      formatted:
        description: The full name, including all middle names, titles, and suffixes as appropriate, formatted for display (e.g.,"Ms. Barbara Jane Jensen, III").
        type: string
      familyName:
        description: The family name of the User, or last name in most Western languages (e.g., "Jensen" given the full name "Ms. Barbara Jane Jensen, III").
        type: string
      givenName:
        description: The given name of the User, or first name in most Western languages (e.g., "Barbara" given the full name "Ms. Barbara Jane Jensen, III").
        type: string
      middleName:
        description: The middle name(s) of the User (e.g., "Jane" given the full name "Ms. Barbara Jane Jensen, III").
        type: string
      honorificPrefix:
        description: The honorific prefix(es) of the User, or title in most Western languages (e.g., "Ms." given the full name "Ms. Barbara Jane Jensen, III").
        type: string
      honorificSuffix:
        description: The honorific suffix(es) of the User, or suffix in most Western languages (e.g., "III" given the full name "Ms. Barbara Jane Jensen, III").
        type: string
    example:
      formatted: "Ms. Barbara J Jensen III"
      familyName: "Jensen"
      givenName: "Barbara"
      middleName: "Jane"
      honorificPrefix: "Ms."
      honorificSuffix: "III"

  Prepaid:
    description: Prepaid (a.k.a. gift) account information
    type: object
    properties:
      cardNumber:
        description: Prepaid card number.
        type: string
        example: "6759649826438453"
      cardSubType:
        description: Merchant or brand specific information about the type of account.Issuer/group information.
        type: string
        example: "Merchant Brand"
      securityCode:
        description: Security code of prepaid card
        type: string
        example: "345"
      promotionCode:
        description: Promotion code for prepaid account activation.
        type: string
      alias:
        type: string
        readOnly: true
        example: "8453"
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      balance:
        $ref: '#/definitions/PrepaidBalance'
      token:
        $ref: '#/definitions/ReferenceToken'

  PrepaidBalance:
    description: Details of balance in the prepaid card.
    required:
      - currentBalance
      - currencyCode
    properties:
      currentBalance:
        description: The current balance of prepaid card in lower denomination of the currency.
        type: number
      beginBalance:
        description: The balance of prepaid card before a transaction in lower denomination of the currency.
        type: number
      currencyCode:
        $ref: '#/definitions/ISO-4217'
      currencyType:
        $ref: '#/definitions/CurrencyPairType'
    readOnly: true
    example:
      currentBalance: 1100
      beginBalance: 1000
      currencyCode: 840
      currencyType: "BASE"

  ProvisionProcess:
    description: Details about the process of provisioning an accont.
    type: object
    properties:
      status:
        $ref: '#/definitions/ProvisionStatus'
      createdTime:
        description: Provision request creation date time value.
        type: string
        format: date-time
        readOnly: true
        example: "2017-03-21T08:15:30-05:00"
      expiryTime:
        description: Date time provision will or has become invalid.
        type: string
        format: date-time
        readOnly: true
        example: "2017-03-22T08:15:30-05:00"
      lastUpdatedTime:
        description: Date and time of update proviosn request to uCom.
        type: string
        format: date-time
        readOnly: true
        example: "2017-03-21T08:18:30-05:00"

  Question:
    description: Question and answer to validate a account profile.
    type: object
    properties:
      id:
        type: string
        description: Unique identifier for a question
      value:
        type: string
        description: Question string
      answer:
        type: string
        description: Answer string

  ReferenceToken:
    description: Surrogate value used to represent a handle to an account without sharing PCI/PII data to look it up.
    type: object
    properties:
      tokenId:
        description: Actual token value
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      tokenProvider:
        description: Indicates what system is the originator of the token
        type: string
        example: "TRANS_ARMOR"
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      tokenType:
        $ref: '#/definitions/ReferenceTokenType'

  SamsungPay:
    type: object
    properties:
      version:
        type: string
        example: "EC_v1"
      developerEmail:
        type: string
      data:
        type: string
        example: "3CguW5ecfTzO...03d"
      signature:
        type: string
        example: "MIAGCSqGSIb......AAAA=="
      decryptAlias:
        description: field of the public key certificate.
        type: string
        example: "oslo.com.xxx.Prod_mer"
      dPanLast4:
        type: string
        example: "9876"
      bin:
        type: string
      eciIndicator:
        type: string
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      panType:
        type: string
      cardType:
        $ref: '#/definitions/CreditCardType'
        example: "VISA"
      header:
        type: object
        properties:
          ephemeralPublicKey:
            type: string
            example: "MFkwEw...03d"
          publicKeyHash:
            type: string
            example: "+vbONw...IM="
      token:
        $ref: '#/definitions/ReferenceToken'
      billingAddress:
        $ref: '#/definitions/Address'
      billingPhone:
        $ref: '#/definitions/Phone'


  ThreeDSecure:
    description: Details of ThreeDSecure transaction used to process the challege flow
    type: object
    properties:
      transactionId:
        description: Transaction id generated on the server
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      transactionStatus:
        type: string
        description: Transactions status of 3DS server
        example: "C"
      transactionStatusReason:
        type: string
        description: Reason for the transaction status
      challengeResponse:
        type: string
        example: "ewogIC"
      challengeIndicator:
        type: string
        example: "01 = No preference
                  02 = No challenge requested
                  03 = Challenge requested: 3DS Requestor Preference
                  04 = Challenge requested: Mandate"
      dsTransactionId:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      acsTransactionId:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      serverTransactionId:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      acsReferenceNumber:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      acsSignedContent:
        type: string
        example: "292bb6b88....6fc4446894f878b7e32bd5e"
      cardType:
        $ref: '#/definitions/CreditCardType'
      challengeRequest:
        type: string
        example: "ewogICAiYW.......MjJjMGVjIgp9"
      acsUrl:
        type: string
        example: "https://test.modirum.com/dstests/ACSEmu2"
      iframeContent:
        type: string
        example: "<iframe></iframe>"
      termUrl:
        type: string
        example: "https://mydomain/3dstest?transactionId=292bb6b886fc4446894f878b7e32bd5e"
      isThreeDSMethodCompleted:
        type: boolean
        example: true
      isAuthenticationCompleted:
        type: boolean
        example: true
      cavv:
        type: string
        description: Card authenticaion verificaiton value
      threeDSVersion:
        type: string
      expiryDateTime:
        description: 3DS challenge transaction expiry date time.
        type: string
        readOnly: true
        format: date-time
        example: "2020-01-01T16:06:05Z"
      eci:
        type: string
        description: Electronic Commerce Indicator value

  User:
    description: User resource as defined by the System for Cross-domain Identity Management (SCIM). For more info see http://www.simplecloud.info
    type: object
    required:
      - externalId
    properties:
      id:
        description: Unique identifier for a customer profile registered with uCom.
        type: string
        readOnly: true
        example: "fdCustomerId"
      externalId:
        description: A String that is an identifier for the resource as defined by the provisioning client. While the server does not enforce uniqueness, it is assumed that the value's uniqueness is controlled by the client setting the value.
        type: string
        example: "123abc456def890ghi098jkl765mno"
      userName:
        description: A service provider's unique identifier for the user, typically used by the user to directly authenticate to the service provider.
        type: string
        example: "bjensen@example.com"
      name:
        $ref: '#/definitions/PersonName'
      displayName:
        description: 'The name of the user, suitable for display to end-users.'
        type: string
        example: Babs Jensen
      nickName:
        description:
          The casual way to address the user in real life, e.g., "Bob" or
          "Bobby" instead of "Robert".
        type: string
        example: Babs
      profileUrl:
        description: A URI that is a uniform resource locator (as defined in Section 1.1.3 of [RFC3986]) and that points to a location representing the user's online profile (e.g., a web page)
        type: string
        example: 'https://login.example.com/bjensen'
      emails:
        type: array
        items:
          $ref: '#/definitions/Email'
      addresses:
        type: array
        items:
          $ref: '#/definitions/Address'
      phoneNumbers:
        type: array
        items:
          $ref: '#/definitions/Phone'
      ims:
        type: array
        items:
          $ref: '#/definitions/IMS'
      photos:
        type: array
        items:
          $ref: '#/definitions/Photo'
      userType:
        description: Used to identify the relationship between the organization and the user.
        type: string
        example: Employee
      title:
        description: 'The user''s title, such as "Vice President".'
        type: string
        example: Tour Guide
      preferredLanguage:
        description: Indicates the user's preferred written or spoken languages and is generally used for selecting a localized user interface.
        type: string
        example: en-US
      locale:
        description: Used to indicate the User's default location for purposes of localizing such items as currency, date time format, or numerical representations.
        type: string
        example: en-US
      timezone:
        description: The User's time zone
        type: string
        example: America/Los_Angeles
      active:
        description: A Boolean value indicating the user's administrative status. The definitive meaning of this attribute is determined by the service provider.
        type: boolean
        example: true
      password:
        description: This attribute is intended to be used as a means to set, replace, or compare (i.e., filter for equality) a password.
        type: string
        example: some-hashed-value
      groups:
        description: A list of groups to which the user belongs, either through direct membership, through nested groups, or dynamically calculated.
        type: array
        items:
          $ref: '#/definitions/Group'
      identities:
        type: array
        items:
          $ref: '#/definitions/Identity'

  Venmo:
    description: Information about a Venmo account.
    type: object
    properties:
      nonce:
        type: string
        description: Venmo generated nonce.
        example: "ab12-124C-ab12-124C-ab12-124C"

  VisaCheckout:
    description: Visa Checkout information
    type: object
    properties:
      callId:
        description: Identifier corresponding to an account enrolled with Visa Checkout system.
        type: string
        example: "1234732704291071701"
      credit:
        $ref: '#/definitions/Credit'

#-------------------------------------
# Common Models
#-------------------------------------
  DeviceInfo:
    description: Request origin device details
    type: object
    required:
      - id
      - kind
    properties:
      id:
        description: Unique Id for the device. Value should not contain line feeds, carriage returns, tabs, leading or trailing spaces, or multiple spaces.
        type: string
        example: "537edec8-d33e-4ee8-93a7-b9f61876950c"
      kind:
        description: Possible values are mobile, wearable, automobile, embedded,desktop, other.
        type: string
        example: "mobile"
      details:
        title: deviceData
        description: Device data information from multiple providers.
        type: array
        minItems: 0
        uniqueItems: true
        items:
          description: Collection of device data
          type: object
          properties:
            provider:
              description: Identifies the provider of the data and is often used when decrypting data on the server.
              type: string
              example: "InAuth"
            dataCapture:
              description: Device data captured as a bundle and transmitted as an encrypted and/or specifically formated string.
              type: object
              properties:
                rawData:
                  description: Device capture - raw data blob
                  type: string
                  example: "aaaaaXREUVZGRlFY...aMV"
                dataEventId:
                  description: Event identifier used map state on the server.
                  type: string
                  example: "BB8E4E92...Fz1E063113"
                captureTime:
                  description: Device data capture time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
                  type: string
                  format: date-time
                  example: "2016-04-16T16:06:05Z"
            dataStatic:
              description: Device static details
              type: object
              properties:
                os:
                  description: Device OS name
                  type: string
                  example: "Android 5.1.1 Lollipop"
                osVersion:
                  description: Device OS version
                  type: string
                  example: "5.1.1 Lollipop"
                model:
                  description: Device model
                  type: string
                  example: "XT1540"
                type:
                  description: Device type
                  type: string
                  example: "Moto G"
            dataDynamic:
              description: Device location details
              type: object
              properties:
                latitude:
                  description: Device position - latitude at the time of the data event
                  type: string
                  example: "13.0827 N"
                longitude:
                  description: Device position - longitude at the time of the data event
                  type: string
                  example: "80.2707 E"
                ipAddress:
                  description: IP address
                  type: string
                  example: "172.27.37.221"
                captureTime:
                  description: Device data capture time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
                  type: string
                  format: date-time
                  example: "2016-04-16T16:06:05Z"
            dataApplication:
              description: Mobile application specific data
              type: object
              properties:
                version:
                  description: Mobile application version.
                  type: string
                  format: sting
                  example: "1.0.0"
                name:
                  description: Mobile application name.
                  type: string
                  format: sting
                  example: "aplication-name"
                country:
                  description: Mobile application store country.
                  type: string
                  format: sting
                  example: "US"
      additionalInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
    example:
      {
      id: "537edec8-d33e-4ee8-93a7-b9f61876950c",
      kind: "mobile",
      details: [{
        provider: "InAuth",
        dataCapture: {
          rawData: "aaaaaXREUVZGRlFY...aMV",
          dataEventId: "BB8E4E92...Fz1E063113",
          captureTime: "2016-04-16T16:06:05Z"
        },
        dataStatic: {
           os: "Android 5.1.1 Lollipop",
           osVersion: "5.1.1 Lollipop",
           model: "XYX-1",
           Type: "Moto G"
          },
        dataDynamic: {
          latitude: "13.0827 N",
          longitude: "80.2707 E",
          ipAddress: "172.27.37.221",
          captureTime: "2016-04-16T16:06:05Z"
          }
      }],
      additionalInfo: [{
         name: "some-key",
         value: "some-value"
      }]
    }

  Error:
    description: Model for error messaging
    type: object
    properties:
      code:
        type: string
        description: Uniquely identifies an error condition. Client applications need to read and handle errors based on this.
      message:
        type: string
        description: A generic description of the error condition.
      category:
        type: string
        description: The resource associated with the error condition.
      developerInfo:
        type: object
        description: Information that needs to be understood by the client developers and should not be interpreted for application processing.
        properties:
          developerMessage:
            type: string
            description: An elaborative description of the error description.
          moreInfo:
            type: string
            description: Link to the error in Developer page.
          fieldError:
            description: Detailed information about message format errors.
            type: array
            items:
              properties:
                field:
                  description: The property or attribute associated with the error
                  type: string
                message:
                  description: Information specific to a property or attribute.
                  type: string
      hostExtraInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
      threeDSecureInfo:
        $ref: '#/definitions/ThreeDSecure'
      _links:
        type: array
        items:
          $ref: '#/definitions/Link'

    example:
      code: "40000"
      message: "Example Error"
      category: "example"
      developerInfo:
        developerMessage: "Invalid Message format in request payload"
        moreInfo: "https://www.example.com/errors/40000"
        fieldError:
          - field: "example id"
            message: "exampleId is mandatory"

#-------------------------------------
# ENUM Models
#-------------------------------------
  AccountStatus:
    description: Indicates the status of an account.
    type: string
    enum:
      - ACTIVE
      - INACTIVE
      - TERMINATED

  AccountType:
    description: Type of Account vaulted
    type: string
    enum:
      - CREDIT
      - PREPAID
      - ACH
      - LOYALTY
      - PAYPAL
      - MASTERPASS
      - VENMO
      - THREEDSECURE
      - VAULTED_ACCOUNT
      - FLEET
      - APPLE_PAY
      - SAMSUNG_PAY
      - GOOGLE_PAY
      - MONEYNETWORK
      - EBT

  AchEnrollmentStatus:
    description: Indicates ACH enrollment status
    type: string
    enum:
      - ACTIVE
      - PENDING
      - PENDING_LINKED_ACCOUNT

  AchEnrollmentSubStatus:
    description: Indicates ACH enrollment pending status
    type: string
    enum:
        - PENDING_BANK_VALIDATION
        - PENDING_PIN_VALIDATION
        - PENDING_EMAIL_VALIDATION
        - PENDING_PHONE_VALIDATION
        - PENDING_SOFT_BLOCK
        - PENDING_HARD_BLOCK

  AchCardType:
    description: Indicates the type of ACH card association
    type: string
    enum:
      - CONNECTPAY

  AchAccountType:
    description: ACH account type
    type: string
    enum:
      - CHECKING
      - SAVINGS

  BalanceUnitTypes:
    description: Indicator to determine how to display balances
    type: string
    enum:
      - CENTS
      - MILES
      - POINTS
      - STARS
      - LITRES

  CreditCardType:
    description: Indicates the type of credit account association
    type: string
    enum:
      - AMEX
      - DISCOVER
      - MASTERCARD
      - PLCC
      - VISA
      - OTHER

  CurrencyPairType:
    description: Describes the type of currency where BASE represents the currency from Host and TRANSACTION represents the one requested.
    type: string
    enum:
      - BASE
      - TRANSACTION

  FleetCardType:
    description: Indicates the type of fleet account association
    type: string
    enum:
      - WEX

  LoyaltyAccountStatus:
    description: Indicator of the account state as indicated by the loyalty issuer.
    type: string
    enum:
      - ENROLLED
      - ANONYMOUS
      - PARTIAL
      - PENDING_DATA
      - PENDING_VERIFICATION
      - INACTIVE
      - BLOCKED

  LoyaltyType:
    description: Identifier to indicate type of Loyalty program being registered.
    type: string
    enum:
      - LOCAL
      - NATIONAL

  ProgramStatus:
    description: Indicates if the given loyalty program is still active or not.
    type: string
    enum:
      - ENABLED
      - DISABLED
      - CONTRACTED_ONLY

  ProvisionStatus:
    description: Status of the provisioning service transaction.
    type: string
    enum:
      - REQUESTED
      - APPROVED
      - COMPLETED
      - DECLINED
      - REFERRED
      - OTP_REQUIRED
      - PENDING_VERIFICATION

  ReferenceTokenType:
    description: Indicates if the given loyalty program is still active or not.
    type: string
    enum:
      - FORMAT_PRESERVING_MULTI_USE
      - FORMAT_PRESERVING_SINGLE_USE
      - CLAIM_CHECK_NONCE
      - RANDOM_MULTI_USE
      - RANDOM_SINGLE_USE
      - CLAIM_CHECK_NONCE_WITH_PINCAPTURE

#-------------------------------------
# Responses
#-------------------------------------
responses:
  Created:
    description: Resource created
    headers:
      Location:
        type: string
        description: Location of newly created resource.
    schema:
      $ref: '#/definitions/Provision'

  OK:
    description: OK
    schema:
      $ref: '#/definitions/Provision'

  NoContent:
    description: The request succeeded but there’s really nothing to show.

  BadRequest:
    description: Bad request
    schema:
      $ref: '#/definitions/Error'

  Unauthorized:
    description: Unauthorized

  NotFound:
    description: Not Found - The requested resource doesn't exist.
    schema:
      $ref: '#/definitions/Error'

  Conflict:
    description: Conflict - The requested operation conflicts with the current state of the identified resource.
    schema:
      $ref: '#/definitions/Error'

  ServerError:
    description: An unexpected server error occured.
    schema:
      $ref: '#/definitions/Error'

  PartialContent:
    description: The request succeeded containing requested range of data as described by request.
    schema:
      $ref: '#/definitions/Provision'

  Accepted:
    description: The request has been accepted for processing, but the processing has not been completed.
    schema:
      $ref: '#/definitions/Provision'

#-------------------------------------
# Parameter Models
#-------------------------------------
parameters:
  AcceptLanguageParam:
    name: Accept-Language
    description: The Accept-Language header contains information about the language preference of a user. This HTTP header is useful to multilingual sites for deciding the best language to serve to the client. i.e en-US,fr-CA
    in: header
    type: string

  ApiKeyParam:
    name: Api-Key
    description: An API key is a string value passed by a client app to the API proxies. The key uniquely identifies the client app.
    in: header
    required: true
    type: string

  AuthorizationParam:
    name: Authorization
    description: Authorization information for the request. Format- `HMAC {hmacToken}`
    in: header
    required: true
    type: string

  ClientTokenParam:
    name: Client-Token
    description: Used to pass the original client OAuth token information given in a client-credentials flow.  This field is only used when the server is making the request and needs to link the transaction to a specific client.  Format- `Bearer {access_token}`
    in: header
    type: string

  ClientRequestIdParam:
    name: Client-Request-Id
    description: Contains a unique ID generated by the client that can be used for enforcing idempotency on POST actions. POSTs are inherently non-idempotent and submitting the exact same request multiple times would create duplicate resources.
      Note:- Omitting this header increases the risk of duplicate transactions, which for payments could cost the client issues like double-billing.
    in: header
    required: true
    type: string

  FdCustomerIdParam:
    name: fdCustomerId
    description: Unique identifier provided for the customer profile
    in: path
    required: true
    type: string

  FdAccountIdParam:
    name: fdAccountId
    description: Unique identifier provided for the vaulted account
    in: path
    required: true
    type: string

  ProvisionIdParam:
    name: provisionId
    description: Unique identifier provided for the provision object
    in: path
    required: true
    type: string

  SubMerchantIdParam:
    name: Sub-Merchant-Id
    description: Sub Merchant Id contains information about the merchant identifier
    in: header
    type: string

  QueryFields:
    name: fields
    description: This can be SMS, e-mail, phone.
    in: query
    required: false
    default: OTP
    type: string

  TimestampParam:
    name: Timestamp
    description: Epoch timestamp in the request initiating system
    in: header
    required: true
    type: string

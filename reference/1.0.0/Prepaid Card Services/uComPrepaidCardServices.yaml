#-------------------------------------
# Document Change Log
# 0.2.2
#     - Added new V2 endpoints for void transactions
#     - Added new V2 endpoints for mutiple transaction calls
# 0.2.1
#     - Added Walmart pay as fundingSource
#     - Added SEC code for ACH
#     - Added EBT as funding source
#     - Added Merchant id as header field
#     - Added asset provider field in the ACH
# 0.2.0
#     - Added 'OTHER' CreditCardType
#     - Added fields in ThreeDSecure object
#     - Added Price tier in POSItem
#     - Added PAN type and BIN
#     - Added Expiry Date to InApp entities
#     - Added Developer Email in ApplePay/GooglePay/SamsungPay objects
#     - Added ECIIndicator in ApplePay/GooglePay/SamsungPay objects
#     - Added local payment methods for Ideal and Bancontact
# 0.1.9
#     - Updated PriceAdjustment to add maxQuantity
#     - Added OfferStatus in the PriceAdjustments
#     - Added washcodes under POSItem
#     - Added dynamic descriptors API model
#     - Added external customer id
# 0.1.8
#     - Added 3ds web support
#     - Added new API for prepaid transaction history with pagenation
#     - Added account type for ACH
# 0.1.7
#     - Added credit in Paypal object
#     - Added enrollment status and bank name in the ACH object
#     - Added Vipps as a funding source.
#     - Added new API to retrieve balance based on request id
#     - Updated PriceAdjustment as list under POSItem
#     - Added 3ds challenge transaction expiry date time in ThreeDSecure
# 0.1.6
#     - No change.
#     - Added SecurityCode in valuted Account
#     - Added VAULTED_ACCOUNT as AccountType
#     - Added Accept-Language header field
#     - Added PurchaseInfo in the PrepaidTransaction, depricated orderId from the parent object
# 0.1.5
#     - Added Link in the Error object.
#     - Added Amazon Pay funding source
#     - acsSignedContent and CardType in threeDSecureInfo object
#     - Added altMerchantId in the PrepaidTransaction object
#     - Added billing phone in Credit,ApplePay, GooglePay, SamsungPay objects
# 0.1.4
#     - Added AccountType and AccountStatus entities under VaultedAccount
#     - Added ACH under funding source.
#     - Added Venmo under funding source.
#     - Added PATCH operation on purchase and reload transactions
#     - Added ThreeDSecure object for purchase and reload transactions
# 0.1.3
#     - Adding NVP with valueAsList
#     - Added 'billingAddress' element in 'AndroidPay', 'ApplePay', 'GooglePay' and 'SamsungPay'
#     - update in DeviceInfo.
# 0.1.2
#   - No change.
# 0.1.1
#   - Added 'token' attribute to 'ApplePay' & 'AndroidPay'
#   - Added 'cardType' attribute in 'ApplePay'
#   - Added 'cardType', 'dPanLast4' attribute in 'AndroidPay', 'GooglePay' and 'SamsungPay'
#   - Added 'id' attribute to Link
#   - Added 'Client-Request-Id' header to Reload api
#   - Added 'approvedAmount' attribute to FundingInfo
#   - Modified Http method type from GET to POST for prepaid balance and transations APIs.
# 0.1.0
#   - Added 'googlePay' as 'fundingSource'
#   - Added client-token in the header field
# 0.0.9
#   - Added cardSubType attribute to Credit entity.
# 0.0.8
#     - No change.
# 0.0.7
#   - Updated ReferenceToken to have more accurate attribute names, removed use value
#   - Cleaned up examples in the models
# 0.0.6
#   - Updated to use ReferenceToken model
# 0.0.5
#     - No change.
# 0.0.4
#     - No change.
# 0.0.3
#     - No change.
# 0.0.2
#     - Added 'osVersion' attribute to 'DeviceInfo' object.
# 0.0.1
#     - Initial Version
#-------------------------------------
swagger: '2.0'
info:
  version: 0.2.2
  title: uCom Prepaid Account Services
  description: Services related to prepaid cards such as creating a new prepaid card, balance check, reloading funds, balance transfer etc.
tags:
  - name: balance
    description: Operations and details about prepaid balance.
  - name: purchase
    description: Operations and details about prepaid purchase.
  - name: void
    description: Operations and details about prepaid void.
  - name: reload
    description: Operations and details about prepaid reload.
  - name: merge
    description: Operations and details about prepaid merge.
  - name: transaction
    description: Operations and details about prepaid merge.
host: int.api.firstdata.com
basePath: /ucom
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1/prepaids/balances:
    post:
      tags:
        - balance
      description: Service to retrieve the balance of an anonymous Prepaid Card.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/PrepaidAccountRequest'
      responses:
        200:
          $ref: '#/responses/OK'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        500:
          $ref: '#/responses/ServerError'
        204:
          $ref: '#/parameters/LocationParam'

  /v1/prepaids/aggregate-balances:
    post:
      tags:
        - balance
      description: Service to retrieve the balance of an anonymous Prepaid Card.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/PrepaidAggregateRequest'
      responses:
        200:
          $ref: '#/responses/AggregateBalanceResponse'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        500:
          $ref: '#/responses/ServerError'
        204:
          $ref: '#/parameters/LocationParam'

  /v1/prepaids/balances/{requestId}:
    get:
      tags:
        - balance
      description: Service to retrieve the balance based on request identifier.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/RequestIdParam'
        - $ref: '#/parameters/SubMerchantIdParam'
      responses:
        200:
          $ref: '#/responses/BalanceResponse'
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        401:
          $ref: '#/responses/Unauthorized'
        500:
          $ref: '#/responses/ServerError'


  /v1/prepaids/purchases:
    post:
      tags:
        - purchase
      description: Service to create a new Prepaid card.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/PrepaidAccountRequest'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/PrepaidPurchase'
        202:
          description: Partially Created
          schema:
            $ref: '#/definitions/PrepaidPurchase'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/ServerError'

  /v2/prepaids/purchases:
    get:
      tags:
        - purchase
      description: Service to create a new Prepaid card.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdQueryParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/PrepaidPurchase'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/ServerError'

  /v2/prepaids/multi-purchases:
    post:
      tags:
        - purchase
      description: Service to create new Prepaid cards.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/PrepaidMultiAccountRequest'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/PrepaidMultiPurchase'
        207:
          description: Multiple status
          schema:
            $ref: '#/definitions/PrepaidMultiPurchase'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          $ref: '#/responses/Conflict'
        425:
          $ref: '#/responses/TooEarly'
        500:
          $ref: '#/responses/ServerError'


  /v1/prepaids/void:
    post:
      tags:
        - void
      description: Service to deduct/cashout prepaid account.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/PrepaidVoidRequest'
      responses:
        200:
          description: Voided
          schema:
            $ref: '#/definitions/PrepaidVoid'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/ServerError'

  /v2/prepaids/void:
    get:
      tags:
        - void
      description: Service to deduct/cashout prepaid account.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdQueryParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
      responses:
        200:
          description: Voided
          schema:
            $ref: '#/definitions/PrepaidVoid'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/ServerError'

  /v2/prepaids/multi-void:
    post:
      tags:
        - void
      description: Service to deduct/cashout prepaid accounts.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdParam'
        - $ref: '#/parameters/ClientRequestIdQueryParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/PrepaidMultiVoidRequest'
      responses:
        200:
          description: Voided
          schema:
            $ref: '#/definitions/PrepaidMultiVoid'
        207:
          description: Multiple status
          schema:
            $ref: '#/definitions/PrepaidMultiVoid'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          $ref: '#/responses/Conflict'
        425:
          $ref: '#/responses/TooEarly'
        500:
          $ref: '#/responses/ServerError'

  /v1/prepaids/purchases/{fdTransactionId}:
    patch:
      tags:
        - purchase
      description: Service to patch a Prepaid card.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/FdTransactionIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            type: object
            properties:
              action:
                $ref: '#/definitions/UpdateActionType'
              deviceInfo:
                $ref: '#/definitions/DeviceInfo'
      responses:
        200:
          description: Created
          schema:
            $ref: '#/definitions/PrepaidPurchase'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/ServerError'

  /v1/prepaids/purchases/{fdTransactionId}/void:
    post:
      tags:
        - purchase
      summary: Void of a purchase transaction.
      description: Void of a purchase transaction.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/FdTransactionIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/VoidRequest'
      responses:
        200:
          $ref: '#/responses/OK'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'

  /v2/prepaids/purchases/{fdTransactionId}/void:
    post:
      tags:
        - purchase
      summary: Void of a purchase transaction.
      description: Void of a purchase transaction.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/FdTransactionIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/PrepaidVoidRequest'
      responses:
        200:
          description: Voided
          schema:
            $ref: '#/definitions/PrepaidVoid'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'

  /v2/prepaids/purchases/{fdParentTransactionId}/multi-void:
    post:
      tags:
        - purchase
      summary: Void of purchase transactions.
      description: Void of purchase transactions.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/FdParentTransactionIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/PrepaidMultiVoidRequest'
      responses:
        200:
          description: Voided
          schema:
            $ref: '#/definitions/PrepaidMultiVoid'
        207:
          description: Multiple status
          schema:
            $ref: '#/definitions/PrepaidMultiVoid'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'

  /v1/prepaids/reloads:
    post:
      tags:
        - reload
      description: Service to load fund into a vaulted Prepaid Card.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/LoadFundsRequest'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/LoadFundsPurchase'
        202:
          description: Partially Created
          schema:
            $ref: '#/definitions/LoadFundsPurchase'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/ServerError'

  /v2/prepaids/reloads:
    get:
      tags:
        - reload
      description: Service to load fund into a vaulted Prepaid Card.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdQueryParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/LoadFundsPurchase'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/ServerError'

  /v2/prepaids/multi-reloads:
    post:
      tags:
        - reload
      description: Service to load fund into a vaulted Prepaid Card.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/LoadMultiFundsRequest'
      responses:
        200:
          description: Created
          schema:
            $ref: '#/definitions/LoadMultiFundsPurchase'
        207:
          description: Multiple Status
          schema:
            $ref: '#/definitions/LoadMultiFundsPurchase'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          $ref: '#/responses/Conflict'
        425:
          $ref: '#/responses/TooEarly'
        500:
          $ref: '#/responses/ServerError'


  /v1/prepaids/reloads/{fdTransactionId}:
    patch:
      tags:
        - reload
      description: Service to load fund into a vaulted Prepaid Card.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/FdTransactionIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            type: object
            properties:
              action:
                $ref: '#/definitions/UpdateActionType'
              deviceInfo:
                $ref: '#/definitions/DeviceInfo'
      responses:
        200:
          description: Created
          schema:
            $ref: '#/definitions/LoadFundsPurchase'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/ServerError'

  /v1/prepaids/reloads/{fdTransactionId}/void:
    post:
      tags:
        - reload
      summary: Void of a reload transaction.
      description: Void of a reload transaction.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/FdTransactionIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/VoidRequest'
      responses:
        200:
          $ref: '#/responses/OK'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'

  /v2/prepaids/reloads/{fdTransactionId}/void:
    post:
      tags:
        - reload
      summary: Void of a reload transaction.
      description: Void of a reload transaction.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/FdTransactionIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/PrepaidVoidRequest'
      responses:
        200:
          description: Voided
          schema:
            $ref: '#/definitions/PrepaidVoid'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'

  /v2/prepaids/reloads/{fdParentTransactionId}/multi-void:
    post:
      tags:
        - reload
      summary: Void of reload transactions.
      description: Void of reload transactions.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/FdParentTransactionIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/PrepaidMultiVoidRequest'
      responses:
        200:
          description: Voided
          schema:
            $ref: '#/definitions/PrepaidMultiVoid'
        207:
          description: Multiple status
          schema:
            $ref: '#/definitions/PrepaidMultiVoid'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        425:
          $ref: '#/responses/TooEarly'
        500:
          $ref: '#/responses/ServerError'

  /v1/prepaids/merges:
    post:
      tags:
        - merge
      description: Service to merge balance from one vaulted prepaid card to another vaulted prepaid card.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/MergeAccountsRequest'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/MergeBalanceTransaction'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/ServerError'

  /v2/prepaids/merges:
    get:
      tags:
        - merge
      description: Service to merge balance from one vaulted prepaid card to another vaulted prepaid card.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdQueryParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/MergeBalanceTransaction'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/ServerError'

  /v1/prepaids/merges/{fdTransactionId}/void:
    post:
      tags:
        - merge
      summary: Void of a merge transaction.
      description: Void of a merge transaction.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/FdTransactionIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/VoidRequest'
      responses:
        200:
          $ref: '#/responses/OK'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'

  /v2/prepaids/merges/{fdTransactionId}/void:
    post:
      tags:
        - merge
      summary: Void of a merge transaction.
      description: Void of a merge transaction.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/FdTransactionIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/PrepaidVoidRequest'
      responses:
        200:
          description: Voided
          schema:
            $ref: '#/definitions/PrepaidVoid'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'

  /v1/prepaids/transactions:
    post:
      tags:
        - transaction
      description: Service to retrieve transactions on a vaulted Prepaid Card from the host.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/PrepaidAccountRequest'
      responses:
        200:
          description: OK
          schema:
            title: TransactionList
            type: array
            items:
              $ref: '#/definitions/PrepaidTransaction'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/ServerError'

  /v1/prepaids/txn-history:
    post:
      tags:
        - transaction
      description: Service to retrieve transactions on a vaulted Prepaid Card from the host.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/PageNumberParam'
        - $ref: '#/parameters/PageSizeParam'
        - $ref: '#/parameters/StartDateParam'
        - $ref: '#/parameters/EndDateParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/PrepaidAccountRequest'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/PrepaidTxnSearchResult'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        500:
          $ref: '#/responses/ServerError'

definitions:
#-------------------------------------
# Operational Models
#-------------------------------------

  LoadFundsRequest:
    description: Reload a Prepaid Account Request
    type: object
    properties:
      fdCustomerId:
        $ref: '#/definitions/FdCustomerId'
      externalCustomerId:
        $ref: '#/definitions/ExternalCustomerId'
      transaction:
        $ref: '#/definitions/LoadFundsPurchase'
      deviceInfo:
        $ref: '#/definitions/DeviceInfo'

  LoadMultiFundsRequest:
    description: Reload a Prepaid Account Requests
    type: object
    properties:
      fdCustomerId:
        $ref: '#/definitions/FdCustomerId'
      externalCustomerId:
        $ref: '#/definitions/ExternalCustomerId'
      parentExternalId:
        type: string
        description: External transaction id reference
      merchantTransactionId:
        type: string
        description: Merchant transaction id
      purchaseInfo:
          $ref: '#/definitions/PurchaseInfo'
      replayCount:
        description: Indicates request retry attempt count.
        type: number
      postDate:
        description: Settlement date for the transaction. Format- MMDDYYYY
        type: string
        format: date
        example: "08232019"
      hostExtraInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
      transactions:
        type: array
        items:
          $ref: '#/definitions/LoadFundsPurchase'
      deviceInfo:
        $ref: '#/definitions/DeviceInfo'

  MergeAccountsRequest:
    description: Merge a Accounts Request
    type: object
    properties:
      fdCustomerId:
        $ref: '#/definitions/FdCustomerId'
      externalCustomerId:
        $ref: '#/definitions/ExternalCustomerId'
      transaction:
        $ref: '#/definitions/MergeBalanceTransaction'
      deviceInfo:
        $ref: '#/definitions/DeviceInfo'


  PrepaidAggregateRequest:
    description: Prepaid Aggregate Request
    type: object
    properties:
      fdCustomerId:
        $ref: '#/definitions/FdCustomerId'
      externalCustomerId:
        $ref: '#/definitions/ExternalCustomerId'
      groupNames:
        type: array
        minItems: 0
        items:
          type: string
      transaction:
        $ref: '#/definitions/PrepaidPurchase'
      deviceInfo:
        $ref: '#/definitions/DeviceInfo'

  PrepaidAccountRequest:
    description: Purchase a Prepaid Account Request
    type: object
    properties:
      fdCustomerId:
        $ref: '#/definitions/FdCustomerId'
      externalCustomerId:
        $ref: '#/definitions/ExternalCustomerId'
      transaction:
        $ref: '#/definitions/PrepaidPurchase'
      deviceInfo:
        $ref: '#/definitions/DeviceInfo'

  PrepaidMultiAccountRequest:
    description: Purchase Multiple Prepaid Account Request
    type: object
    properties:
      fdCustomerId:
        $ref: '#/definitions/FdCustomerId'
      parentExternalId:
        type: string
        description: External transaction id reference
      merchantTransactionId:
        type: string
        description: Merchant transaction id
      externalCustomerId:
        $ref: '#/definitions/ExternalCustomerId'
      purchaseInfo:
          $ref: '#/definitions/PurchaseInfo'
      replayCount:
        description: Indicates request retry attempt count.
        type: number
      postDate:
        description: Settlement date for the transaction. Format- MMDDYYYY
        type: string
        format: date
        example: "08232019"
      hostExtraInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
      transactions:
        type: array
        items:
          $ref: '#/definitions/PrepaidPurchase'
      deviceInfo:
        $ref: '#/definitions/DeviceInfo'

  PrepaidVoidRequest:
    description: Purchase a Prepaid Account Request
    type: object
    properties:
      fdCustomerId:
        $ref: '#/definitions/FdCustomerId'
      externalCustomerId:
        $ref: '#/definitions/ExternalCustomerId'
      transaction:
        $ref: '#/definitions/PrepaidVoid'
      deviceInfo:
        $ref: '#/definitions/DeviceInfo'

  PrepaidMultiVoidRequest:
    description: Purchase Multiple Prepaid Void Request
    type: object
    properties:
      fdCustomerId:
        $ref: '#/definitions/FdCustomerId'
      externalCustomerId:
        $ref: '#/definitions/ExternalCustomerId'
      parentExternalId:
        type: string
        description: External transaction id reference
      merchantTransactionId:
        type: string
        description: Merchant transaction id
      purchaseInfo:
          $ref: '#/definitions/PurchaseInfo'
      replayCount:
        description: Indicates request retry attempt count.
        type: number
      operationType:
        $ref: '#/definitions/OperationType'
      postDate:
        description: Settlement date for the transaction. Format- MMDDYYYY
        type: string
        format: date
        example: "08232019"
      hostExtraInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
      transactions:
        type: array
        items:
          $ref: '#/definitions/PrepaidVoid'
      deviceInfo:
        $ref: '#/definitions/DeviceInfo'

  VoidRequest:
    type: object
    properties:
      fdCustomerId:
        $ref: '#/definitions/FdCustomerId'
      externalCustomerId:
        $ref: '#/definitions/ExternalCustomerId'
      deviceInfo:
        $ref: '#/definitions/DeviceInfo'

#-------------------------------------
# Resource Models
#-------------------------------------
  ACH:
    description: Information about an ACH account
    type: object
    properties:
      accountNumber:
        type: string
        description: Unique number identifying the ACH account provided by Financial institution.
        example: '92658250156'
      routingNumber:
        type: string
        description: Number to identify the financial institution
        example: '999999999'
      secCode:
        type: string
        description: SEC Code is optional data, It is specifically required for ACH account which is ruled by NACHA compliance.
      cardNumber:
        description: ACH Card number, can only be sent when vaulting an account.  This field will NOT be present in responses.
        type: string
        example: "9111111111111111"
      cardType:
        $ref: '#/definitions/AchCardType'
      securityCode:
        type: string
        description: Code to validate the ACH account, like micro deposit or security code.
        example: '278356'
      alias:
        description: Last four values of the cardNumber
        type: string
        readOnly: true
        example: "1111"
      enrollmentStatus:
        $ref: '#/definitions/AchEnrollmentStatus'
      enrollmentSubStatuses:
        type: array
        items:
          $ref: '#/definitions/AchEnrollmentSubStatus'
      accountType:
        $ref: '#/definitions/AchAccountType'
      bankName:
        type: string
        description: Name of the bank associated with the ACH account
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      assetProvider:
        $ref: '#/definitions/AssetProvider'

  Address:
    description: A physical mailing address for this user.
    type: object
    properties:
      type:
        description: Canonical type values of "work", "home", and "other".
        type: string
      streetAddress:
        description: The full street address component, which may include house number, street name, P.O. box, and multi-line extended street address information.
        type: string
      locality:
        description: The city or locality component.
        type: string
      region:
        description: The state or region component.
        type: string
      postalCode:
        description: The zip code or postal code component.
        type: string
      country:
        description: The country name component.  When specified, the value MUST be in ISO 3166-1 "alpha-2" code format; e.g., the United States and Sweden are "US" and "SE", respectively.
        type: string
      formatted:
        description: The full mailing address, formatted for display or use with a mailing label.
        type: string
      primary:
        description: Indicates if this is the default address for the associated resource. It only has meaning when used in a set or array of addresses.
        type: boolean
    example:
      type: "work"
      streetAddress: "100 Universal City Plaza"
      locality: "Hollywood"
      region: "CA"
      postalCode: "91608"
      country: "US"
      formatted: "100 Universal City Plaza\nHollywood, CA 91608 US"
      primary: true

  AmazonPay:
    type: object
    properties:
      token:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      chargeId:
        type: string
        example: "73883992djj39939djj929992jj08838"
      chargeReferenceId:
        type: string
        example: "8jdw838dhhskk9299299299ueuuue838"
      credit:
        $ref: '#/definitions/Credit'

  AndroidPay:
    type: object
    properties:
      data:
        type: string
        example: 3CguW5ecfTzO...03d
      signature:
        type: string
        example: "MIAGCSqGSIb......AAAA=="
      decryptAlias:
        description: field of the public key certificate.
        type: string
        example: "oslo.com.xxx.Prod_mer"
      dPanLast4:
        type: string
        example: "9876"
      cardType:
        $ref: '#/definitions/CreditCardType'
        example: "VISA"
      header:
        type: object
        properties:
          ephemeralPublicKey:
            type: string
            example: MFkwEw...03d
          publicKeyHash:
            type: string
            example: +vbONw...IM=
      token:
        $ref: '#/definitions/ReferenceToken'
      billingAddress:
        $ref: '#/definitions/Address'
      billingPhone:
        $ref: '#/definitions/Phone'

  ApplePay:
    type: object
    properties:
      version:
        type: string
        example: EC_v1
      developerEmail:
        type: string
      signature:
        type: string
        example: "MIAGCSqGSIb......AAAA=="
      decryptAlias:
        description: field of the public key certificate.
        type: string
        example: "oslo.com.xxx.Prod_mer"
      data:
        type: string
        example: 3CguW5ecfTz...Yuhw=
      applicationData:
        type: string
        example: VEVTVA==
      dPanLast4:
        type: string
        example: "9876"
      bin:
        type: string
      eciIndicator:
        type: string
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      panType:
        type: string
      cardType:
        $ref: '#/definitions/CreditCardType'
        example: "VISA"
      header:
        type: object
        properties:
          applicationDataHash:
            type: string
          ephemeralPublicKey:
            type: string
            example: MFkwEwYHKoZIzj0CIKoZIz.....NBQQ==
          publicKeyHash:
            type: string
            example: +vbONwRlVqJX0........
          transactionId:
            type: string
            example: 3827c5a02638.....34d50
      token:
        $ref: '#/definitions/ReferenceToken'
      billingAddress:
        $ref: '#/definitions/Address'
      billingPhone:
        $ref: '#/definitions/Phone'

  Authorization:
    description: Information related to the authorization transaction on the source card.
    type: object
    properties:
      authorizationId:
        description: Unique identifier for the payment authorization.
        type: string
        example: 8a34843d4f2acc91014f2dc1e85e0122
      transactionTime:
        description: Transaction date time value.
        type: string
        format: date-time
        readOnly: true
        example: '2017-03-21T08:15:30-05:00'
    readOnly: true

  AggregateBalanceTransactionInfo:
    type: object
    description: Prepaid balance transaction response.
    properties:
      totalBalance:
        description: sum of prepaid card in lower denomination of the currency.
        type: number
      groupBalances:
        type: array
        items:
          $ref: '#/definitions/GroupPrepaidBalanceInfo'

  AssetProvider:
    type: object
    properties:
      providerName:
        type: string
        example: "coinbase"

  BalanceInfo:
    description: Details of balance in the prepaid card.
    required:
      - currentBalance
      - currencyCode
    properties:
      currentBalance:
        description: The current balance of prepaid card in lower denomination of the currency.
        type: number
      beginBalance:
        description: The balance of prepaid card before a transaction in lower denomination of the currency.
        type: number
      currencyCode:
        $ref: '#/definitions/ISO-4217'
      currencyType:
        $ref: '#/definitions/CurrencyPairType'
    readOnly: true
    example:
      currentBalance: 1100
      beginBalance: 1000

  Bancontact:
    type: object
    properties:
      returnUrl:
        type: string
      deepLink:
        type: string
      alias:
        type: string
        example: "9876"
      cardType:
        $ref: '#/definitions/CreditCardType'
        example: "VISA"

  Credit:
    description: Information on a credit account
    type: object
    properties:
      cardNumber:
        description: Primary account number, can only be sent when vaulting an account. This field will NOT be present in responses.
        type: string
        example: "4111111111111111"
      bin:
        type: string
      nameOnCard:
        description: Name as printed on physical card or on virtual account
        type: string
        example: John Smith
      alias:
        description: Last four values of the cardNumber
        type: string
        readOnly: true
        example: "1111"
      cardType:
        $ref: '#/definitions/CreditCardType'
      cardSubType:
        description: Merchant or brand specific information about the type of account
        type: string
        example: ABCD
      billingAddress:
        $ref: '#/definitions/Address'
      billingPhone:
        $ref: '#/definitions/Phone'
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      securityCode:
        type: string
        example: "444"
      sequenceNumber:
        description: Applicable only for private-label accounts
        type: string
        example: "01"
      token:
        $ref: '#/definitions/ReferenceToken'

  DynamicDescriptors:
    properties:
      merchantCategoryCode:
        type: string
        description: 'Merchant category code'
      merchantName:
        type: string
        description: 'Merchant name'
      merchantEmail:
        $ref: '#/definitions/Email'
      customerServiceNumber:
        $ref: '#/definitions/Phone'
      serviceEntitlementNumber:
        type: string
        description: 'Service entitlement number'
      merchantAddress:
        $ref: '#/definitions/Address'

  EBT:
    description: Electronic Benefits Transfer card information
    type: object
    properties:
      cardNumber:
        description: Primary account number, can only be sent when vaulting an account.  This field will NOT be present in responses.
        type: string
      nameOnCard:
        description: Name as printed on physical card or on virtual account
        type: string
      alias:
        description: Last four values of the cardNumber
        type: string
        readOnly: true
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      bin:
        description: BIN of EBT card
        type: string
        readOnly: true
      pin:
        description: PIN for EBT card
        type: string
      pinCaptureId:
        description: Session id used on client side SDK to capture the card pin
        type: string
      transactionId:
        description: The unique transaction ID
        type: string
      balance:
        $ref: '#/definitions/EBTBalance'
      metadata:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
      token:
        $ref: '#/definitions/ReferenceToken'

  EBTBalance:
    type: object
    properties:
      cashBalance:
        type: number
      cashCurrencyCode:
        $ref: '#/definitions/ISO-4217'
      snapBalance:
        type: number
      snapCurrencyCode:
        $ref: '#/definitions/ISO-4217'
    readOnly: true

  Email:
    description: Email address for the user.
    type: object
    properties:
      type:
        description: The "type" sub-attribute is used to provide a classification meaningful to the (human) user.  The user interface should encourage the use of basic values of "work", "home", and "other" and MAY allow additional type values to be used at the discretion of the service client.
        type: string
      value:
        description: The value SHOULD be specified according to RFC5321.
        type: string
      primary:
        description:
          Defines if this entry is to be used as the primary or default for the
          user.
        type: boolean
        default: false
    example:
      value: bjensen@example.com
      type: work
      primary: true

  ExpiryDate:
    description: Contains account expiration data and needs to either send the values in individual fields OR as a singleValue.
    type: object
    properties:
      month:
        type: string
        description: Month format 'MM'
        pattern: "[0-9]{2,2}"
        minLength: 2
        maxLength: 2
        example: "09"
      year:
        type: string
        description: Year format 'YY'
        pattern: "[0-9]{2,2}"
        minLength: 2
        maxLength: 2
        example: "20"
      singleValue:
        type: string
        description: Month and year together, 'MMYY' or 'MMYYYY'.  If the latter format, the string will be parsed and validated per the given format.  Any other format will be rejected.
        minLength: 4
        maxLength: 6

  ExternalCustomerId:
    title: External Customer ID
    description: External customer id.
    type: string

  FdCustomerId:
    title: FD Customer ID
    description: FD customer identifier tied to the vaulted accounts.
    type: string
    example: cuid-0987613457398475

  FundingInfo:
    description: Source of funding to purchase or reload the value of a prepaid account.
    type: object
    properties:
      fundValue:
        description: Requested fund amount for the gift card.
        type: number
        example: 100
      approvedAmount:
        description: Approved fund amount for the gift card.
        type: number
        example: 100
        readOnly: true
      isFullDeduction:
        description: Flag that indicates if the full amount needs to be cashedout
        type: boolean
      isMerchantFunded:
        description: Flag that indicates if the source of the payment is funded by merchant vs customer
        type: boolean
      isPartialTransactionAllowed:
        description: Flag that indicates if partial transaction is allowed or not
        type: boolean
      merchantFundId:
        description: Merchant account identfier which will be used for funding the prepaid card transactions.
        type: string
        example: M11AC8616001
      currencyCode:
        $ref: '#/definitions/ISO-4217'
      fundingSource:
        $ref: '#/definitions/FundingSource'

  FundingSource:
    description: Holds information about funding source for the payment transaction. Can hold only one above the provided funding sources.
    type: object
    properties:
      saveToVault:
        description: Flag to indicate if the destination account should be stored in the secure vault.
        type: boolean
        default: false
        example: false
      type:
        $ref: '#/definitions/FundingSourceType'
      vaultedAccount:
        $ref: '#/definitions/VaultedAccount'
      credit:
        $ref: '#/definitions/Credit'
      prepaid:
        $ref: '#/definitions/Prepaid'
      applePay:
        $ref: '#/definitions/ApplePay'
      androidPay:
        $ref: '#/definitions/AndroidPay'
      samsungPay:
        $ref: '#/definitions/SamsungPay'
      paypal:
        $ref: '#/definitions/Paypal'
      token:
        $ref: '#/definitions/ReferenceToken'
      visaCheckout:
        $ref: '#/definitions/VisaCheckout'
      googlePay:
        $ref: '#/definitions/GooglePay'
      masterpass:
        $ref: '#/definitions/MasterPass'
      ach:
        $ref: '#/definitions/ACH'
      venmo:
        $ref: '#/definitions/Venmo'
      vipps:
        $ref: '#/definitions/Vipps'
      amazonPay:
        $ref: '#/definitions/AmazonPay'
      ideal:
        $ref: '#/definitions/Ideal'
      bancontact:
        $ref: '#/definitions/Bancontact'
      walmartPay:
        $ref : '#/definitions/WalmartPay'
      ebt:
        $ref: '#/definitions/EBT'


  GooglePay:
    description: Google Payment specific information
    type: object
    properties:
      version:
        description: Identifies encryption/signing scheme.
        type: string
        example: "EC_v1"
      developerEmail:
        type: string
      signature:
        description: Signature to verify Google initiated message.
        type: string
        example: "MIAGCSqGSIb......AAAA=="
      data:
        description: Data includes encryptedMessage, ephemeralPublicKey, tag.
        type: string
        example: "{\"encryptedMessage\":\"8nx...u003d\",\"ephemeralPublicKey\":\"BGH...u003d\",\"tag\":\"nvm...\\u003d\"}"
      dPanLast4:
        type: string
        example: "9876"
      bin:
        type: string
      eciIndicator:
        type: string
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      panType:
        type: string
      cardType:
        $ref: '#/definitions/CreditCardType'
        example: "VISA"
      token:
        $ref: '#/definitions/ReferenceToken'
      billingAddress:
        $ref: '#/definitions/Address'
      billingPhone:
        $ref: '#/definitions/Phone'

  GroupPrepaidBalanceInfo:
    description: Group prepaid balance information
    type: object
    properties:
      groupName:
        description: Identifies encryption/signing scheme.
        type: string
      groupBalance:
        description: sum of prepaid card in lower denomination of the currency.
        type: number
      balances:
        type: array
        items:
          $ref: '#/definitions/PrepaidBalanceInfo'

  Ideal:
    type: object
    properties:
      returnUrl:
        type: string
      deepLink:
        type: string

  ISO-4217:
    description: ISO 4217 currency format in which the balance is represented.
    type: object
    properties:
      code:
        type: string
        default: USD
      number:
        type: integer
        default: 840
      digits:
        type: integer
        default: 2
      currency:
        type: string
        default: US Dollar
    example:
      code: USD
      number: 840
      digits: 2
      currency: US Dollar

  Link:
    description: Model to communicate linked resources.
    type: object
    required:
      - href
      - rel
    properties:
      href:
        description: URL to linked resource.
        type: string
        format: uri
        example:
            "https://api.example.com/v1/customers/cust-id-123456/accounts/acct-id-123456"
      rel:
        description: Defines the type of link relationship to current resource.
        type: string
        example: linked.account
      method:
        description: Defines the HTTP method for the given href.
        type: string
        default: GET
        example: GET
      id:
        description: Identifier to the resource.
        type: string
        example:
          "415e5cf6bfdb11e8a355529269fb1459"

  LoadMultiFundsPurchase:
    description: Information related to Fund load operation.
    type: object
    properties:
        parentTransactionId:
          description: Unique identifier of multi load transaction.
          type: string
          readOnly: true
          example: "485-27834-285903824-095"
        merchantTransactionId:
          type: string
          description: Merchant transaction id
        createdTime:
          description: Prepaid Card creation date time value.
          type: string
          format: date-time
          readOnly: true
          example: "2017-03-21T08:15:30-05:00"
        parentExternalId:
          type: string
          description: External transaction id reference
        purchaseInfo:
          $ref: '#/definitions/PurchaseInfo'
        transactions:
          type: array
          items:
            $ref: '#/definitions/LoadFundsPurchase'

  LoadFundsPurchase:
    description: Information related to Fund load operation.
    type: object
    required:
      - fundingInfo
      - destinationCard
    properties:
      transactionId:
        description: Unique identifier for this purchasing transaction.
        type: string
        readOnly: true
        example: 485-27834-285903824-095
      saveToVault:
        description: Flag to indicate if the destination card should be vaulted to a secure repository for future use for the given customer.
        type: boolean
        default: false
      dynamicDescriptors:
        $ref: '#/definitions/DynamicDescriptors'
      status:
        $ref: '#/definitions/PrepaidStatus'
      destinationCard:
        description: Information related to the account receiving the funds.
        type: object
        properties:
          account:
            $ref: '#/definitions/Prepaid'
          vaultedAccount:
            $ref: '#/definitions/VaultedAccount'
          balanceInfo:
            $ref: '#/definitions/PrepaidBalance'
      fundingInfo:
        $ref: '#/definitions/FundingInfo'
      purchaseInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/PurchaseInfo'
      postDate:
        description: Settlement date for the transaction. Format- MMDDYYYY
        type: string
        format: date
        example: "08232019"
      merchantId:
        description: Merchant identifier where the transaction is being performed.
        type: string
        example: "M117008616001"
      storeId:
        description: Store identifier where the transaction is being performed.
        type: string
        example: "123456"
      merchantTokenCode:
        description: Merchant token code used for token generation
        type: string
      merchantTerminalId:
        description: Merchant terminal identifier
        type: string
      externalId:
        type: string
        description: External transaction id reference
      merchantTransactionId:
        type: string
        description: Merchant transaction id
      hostExtraInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
      threeDSecureInfo:
          $ref: '#/definitions/ThreeDSecure'
      errorInfo:
          $ref: '#/definitions/Error'

  NVP:
    title: Name and Value pair.
    type: object
    properties:
      name:
        type: string
      value:
        type: string
      valueAsList:
        type: array
        minItems: 0
        items:
          type: string

  MasterPass:
      description: MasterPass information
      type: object
      properties:
        transactionId:
          description: Identifier corresponding to an account enrolled with MasterPass system.
          type: string
          example: "1234732704291071701"
        credit:
          $ref: '#/definitions/Credit'

  MergeBalanceTransaction:
    description: Information related to balance merge operation
    type: object
    properties:
      transactionId:
        description: Unique identifier for this purchasing transaction.
        type: string
        readOnly: true
        example: 485-27834-285903824-095
      status:
        $ref: '#/definitions/PrepaidStatus'
      activateVirtualCard:
        description: Indicates whether uCom needs to activate a destination account
        type: boolean
        example: true
      dynamicDescriptors:
        $ref: '#/definitions/DynamicDescriptors'
      purchaseInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/PurchaseInfo'
      source:
        description: Information related to the Source account.
        type: object
        properties:
          account:
            $ref: '#/definitions/Prepaid'
          vaultedAccount:
            $ref: '#/definitions/VaultedAccount'
          authorization:
            $ref: '#/definitions/Authorization'
      destination:
        description: Information related to the Destination account.
        type: object
        properties:
          account:
            $ref: '#/definitions/Prepaid'
          vaultedAccount:
            $ref: '#/definitions/VaultedAccount'
          balanceInfo:
            $ref: '#/definitions/PrepaidBalance'
      hostExtraInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'

  Order:
    description: Information about the order details
    type: object
    required:
      - orderId
    properties:
      orderId:
        description: Client provided unique identifier for the order related to the requested authorization
        type: string
        example: "Order001"
      altOrderId:
        type: string
        description: Alternate order id
      orderType:
        type: string
        description: Type of the order
      emails:
        type: array
        items:
          $ref: '#/definitions/Email'
      addresses:
        type: array
        items:
          $ref: '#/definitions/Address'
      phoneNumbers:
        type: array
        items:
          $ref: '#/definitions/Phone'

  OfferStatus:
    description: Maintain the status of stackable promotions
    type: object
    properties:
      code:
        description: Indicates offer status code, NOT_ACTIVATED | ACTIVATED | REDEEMED | DECLINED | CANCELLED | FAILED
        type: string
      statusInfo:
        description: Details about what to display, images, messaging, etc.
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true

  PageLink:
    description: Page link information.
    type: object
    readOnly: true
    properties:
      firstPage:
        type: boolean
        description: Indicates if the list contains first page data
      lastPage:
        type: boolean
        description: Indicates if the list contains last page data
        example: false
      currentPage:
        type: integer
        description: Current page number
        example: 1
      currentPageRecords:
        type: integer
        description: Number of records in current page
        example: 25
      totalPages:
        type: integer
        example: 2
      totalRecords:
        type: integer
        example: 27
      sortOrder:
        type: string
        enum:
          - asc
          - desc
        example: asc
        default: asc
      _links:
        type: array
        items:
          $ref: '#/definitions/Link'

  Paypal:
    description: Information about a Paypal account.
    type: object
    properties:
      payerId:
        type: string
        description: Paypal generated Unique identfier for a Paypal account.
        example: "LPLWNMTBWMFAY"
      nonce:
        type: string
        description: Paypal generated nonce.
        example: "ab12-124C-ab12-124C-ab12-124C"
      credit:
        $ref: '#/definitions/Credit'

  Phone:
    description: Phone number for the user.
    type: object
    properties:
      value:
        description: The value SHOULD be specified according to the format defined in RFC3966, e.g., 'tel:+1-201-555-0123'.
        type: string
      type:
        description: Often has typical values of "work","billing", "home", "mobile", "fax", "pager", and "other" and MAY allow more types to be defined by the service client.
        type: string
      extension:
        description: Defines the extension of the phone number.
        type: string
      primary:
        description: Defines if this entry is to be used as the primary or default for the user.
        type: boolean
        default: false
    example:
      value: 555-555-5555
      type: billing
      extension: "2145"

  POSItem:
    description: Structure to support passing POS sale info as part of the sale request.
    type: object
    properties:
      itemDescription:
        type: string
        example: Standard Wash (or) Unleaded Petrol
      itemPrice:
        type: number
        format: double
        example: 7.5
      unitOfMeasurement:
        type: string
        example: each
      unitsSold:
        type: number
        format: double
        example: 1
      totalItemSaleAmount:
        type: number
        format: double
        example: 7.5
      originalItemPrice:
        type: number
        format: double
        example: 7.50
      originalTotalSaleAmount:
        type: number
        format: double
        example: 7.50
      posCodeFormat:
        type: string
        example: plu
      posCode:
        type: string
        example: '102'
      posCodeModifier:
        type: string
        example: '1'
      productCode:
        type: string
        example: "102"
      tax:
        type: array
        items:
          $ref: '#/definitions/TaxDetails'
      type:
          $ref: '#/definitions/POSItemType'
      serviceLevelCode:
          $ref: '#/definitions/ServiceLevelCode'
      priceAdjustments:
        type: array
        items:
          $ref: '#/definitions/PriceAdjustment'
      washCodes:
        type: array
        items:
          $ref: '#/definitions/WashCode'
      priceTier:
        type: string

  Prepaid:
    description: Prepaid (a.k.a. gift) account information
    type: object
    properties:
      cardNumber:
        description: Prepaid card number.
        type: string
        example: '6759649826438453'
      cardSubType:
        description: Merchant or brand specific information about the type of account.Issuer/group information.
        type: string
        example: "Merchant Brand"
      securityCode:
        description: Security code of prepaid card
        type: string
        example: '345'
      alias:
        type: string
        readOnly: true
        example: '8453'
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      merchantId:
        description: Merchant identifier for prepaid transaction.
        type: string
        example: "M117008616001"
      altMerchantId:
        description: Alternate Merchant identifier for prepaid transaction.
        type: string
        example: "23232"
      promotionCode:
        description: Promotion code for prepaid account activation.
        type: string
      isEANRequired:
        type: boolean
        example: true
      balance:
        $ref: '#/definitions/PrepaidBalance'
      ebtBalance:
        $ref: '#/definitions/EBTBalance'
      vaultedAccount:
        $ref: '#/definitions/VaultedAccount'
      token:
        $ref: '#/definitions/ReferenceToken'

  PrepaidBalance:
    description: Details of balance in the prepaid card.
    required:
      - currentBalance
      - currencyCode
    properties:
      currentBalance:
        description: The current balance of prepaid card in lower denomination of the currency.
        type: number
        example: "1000"
      beginBalance:
        description: The balance of prepaid card before a transaction in lower denomination of the currency.
        type: number
        example: "1100"
      currencyCode:
        $ref: '#/definitions/ISO-4217'
      currencyType:
        $ref: '#/definitions/CurrencyPairType'
    readOnly: true

  PrepaidBalanceInfo:
    type: object
    properties:
      prepaid:
        $ref: '#/definitions/Prepaid'
      balanceStatus:
        $ref: '#/definitions/BalanceStatus'
      hostExtraInfo:
        minItems: 0
        uniqueItems: true
        type: array
        description: Key value pairs providing additional details from host on the balance retrieval.
           Key 'host.account.status' will provide current account status from the host.
           Key 'host.transaction.status' will provide the transaction result as success or failure.
           Key 'host.transaction.error' will provide error message from Host if transaction status is failure
        items:
          $ref: '#/definitions/NVP'

  PrepaidBalanceTransactionInfo:
    type: object
    description: Prepaid balance transaction response.
    properties:
      requestId:
        description: Unique identifier of request used to retrieve balance.
        type: string
        readOnly: true
        example: 485-27834-285903824-095
      requestStatus:
        $ref: '#/definitions/RequestStatus'
      createdDateTime:
        type: string
        description: Date and time of resource creation.
        format: date-time
        readOnly: true
        example: '2016-04-16T16:06:05.000Z'
      lastUpdatedDateTime:
        type: string
        description: Last updated Date and time of resource.
        format: date-time
        readOnly: true
        example: '2016-04-16T16:06:05.000Z'
      totalBalance:
        description: sum of prepaid card in lower denomination of the currency.
        type: number
      balances:
        type: array
        items:
          $ref: '#/definitions/PrepaidBalanceInfo'


  PrepaidMultiPurchase:
    description: Multi prepaid transaction details.
    type: object
    properties:
        parentTransactionId:
          description: Unique identifier of multi transaction.
          type: string
          readOnly: true
          example: "485-27834-285903824-095"
        merchantTransactionId:
          type: string
          description: Merchant transaction id
        createdTime:
          description: Prepaid Card creation date time value.
          type: string
          format: date-time
          readOnly: true
          example: "2017-03-21T08:15:30-05:00"
        parentExternalId:
          type: string
          description: External transaction id reference
        purchaseInfo:
          $ref: '#/definitions/PurchaseInfo'
        transactions:
          type: array
          items:
            $ref: '#/definitions/PrepaidPurchase'


  PrepaidPurchase:
    description: Details about purchasing a prepaid (gift) card.
    type: object
    required:
      - fundingInfo
    properties:
      transactionId:
        description: Unique identifier for this purchasing transaction.
        type: string
        readOnly: true
        example: "485-27834-285903824-095"
      saveToVault:
        description: Flag to indicate if the account should be stored in the secure vault.
        type: boolean
        default: true
      dynamicDescriptors:
        $ref: '#/definitions/DynamicDescriptors'
      status:
        $ref: '#/definitions/PrepaidStatus'
      account:
        $ref: '#/definitions/Prepaid'
      merchantId:
        description: Merchant identifier where the transaction is being performed.
        type: string
        example: "M117008616001"
      storeId:
        description: Store identifier where the transaction is being performed.
        type: string
        example: "123456"
      merchantTokenCode:
        description: Merchant token code used for token generation
        type: string
      merchantTerminalId:
        description: Merchant terminal identifier
        type: string
      externalId:
        type: string
        description: External transaction id reference
      merchantTransactionId:
        type: string
        description: Merchant transaction id
      createdTime:
        description: Prepaid Card creation date time value.
        type: string
        format: date-time
        readOnly: true
        example: "2017-03-21T08:15:30-05:00"
      fundingInfo:
        $ref: '#/definitions/FundingInfo'
      postDate:
        description: Settlement date for the transaction. Format- MMDDYYYY
        type: string
        format: date
        example: "08232019"
      purchaseInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/PurchaseInfo'
      _links:
        description: Link to the account for future reference.
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/Link'
        uniqueItems: true
        readOnly: true
      hostExtraInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
      threeDSecureInfo:
          $ref: '#/definitions/ThreeDSecure'
      errorInfo:
          $ref: '#/definitions/Error'


  PrepaidTransaction:
    description: Information related to a transaction on a Prepaid Card.
    type: object
    properties:
      amount:
        description: Transactional amount in lower denomination of the currency.
        type: number
        example: 100
      currencyCode:
        $ref: '#/definitions/ISO-4217'
      info:
        description: Informational description about the transaction.
        type: string
        example: Balance Merge
      transactionTime:
        description: Transaction date time value.
        type: string
        format: date-time
        readOnly: true
        example: 2017-03-21T08:15:30-05:00
      altMerchantId:
        description: Alternate MID information
        type: string

  PrepaidTxnSearchResult:
    description: This object contains site records for lat lag based request.
    type: object
    readOnly: true
    properties:
      pages:
        $ref: '#/definitions/PageLink'
      transactions:
        type: array
        items:
          $ref: '#/definitions/PrepaidTransaction'

  PrepaidVoid:
      description: Details about voiding a prepaid (gift) card.
      type: object
      required:
        - fundingInfo
      properties:
        transactionId:
          description: Unique identifier for this void transaction.
          type: string
          example: "485-27834-285903824-095"
        dynamicDescriptors:
          $ref: '#/definitions/DynamicDescriptors'
        status:
          $ref: '#/definitions/PrepaidStatus'
        account:
          $ref: '#/definitions/Prepaid'
        fundingInfo:
          $ref: '#/definitions/FundingInfo'
        operationType:
          $ref: '#/definitions/OperationType'
        merchantId:
          description: Merchant identifier where the transaction is being performed.
          type: string
          example: "M117008616001"
        storeId:
          description: Store identifier where the transaction is being performed.
          type: string
          example: "123456"
        externalId:
          type: string
          description: External transaction id reference
        merchantTransactionId:
          type: string
          description: Merchant transaction id
        postDate:
          description: Settlement date for the transaction. Format- MMDDYYYY
          type: string
          format: date
          example: "08232019"
        purchaseInfo:
          type: array
          minItems: 0
          items:
            $ref: '#/definitions/PurchaseInfo'
        hostExtraInfo:
          type: array
          minItems: 0
          items:
            $ref: '#/definitions/NVP'
          uniqueItems: true
        threeDSecureInfo:
            $ref: '#/definitions/ThreeDSecure'
        errorInfo:
            $ref: '#/definitions/Error'

  PrepaidMultiVoid:
    description: Multi prepaid void transaction details.
    type: object
    properties:
        parentTransactionId:
          description: Unique identifier of multi transaction.
          type: string
          readOnly: true
          example: "485-27834-285903824-095"
        merchantTransactionId:
          type: string
          description: Merchant transaction id
        createdTime:
          description: Prepaid void creation date time value.
          type: string
          format: date-time
          readOnly: true
          example: "2017-03-21T08:15:30-05:00"
        parentExternalId:
          type: string
          description: External transaction id reference
        purchaseInfo:
          $ref: '#/definitions/PurchaseInfo'
        transactions:
          type: array
          items:
            $ref: '#/definitions/PrepaidVoid'

  PriceAdjustment:
    description: Structure to support providing price adjustment for sale item.
    type: object
    properties:
      adjustmentId:
        type: string
        example: "discount prepay"
      productCode:
        type: string
        example: "941"
      programID:
        type: string
        example: "P66"
      reason:
        type: string
        example: "loyaltyOffer"
      amount:
        type: number
        format: double
        example: 0.1
      percentage:
        type: number
        format: float
        example: 10
      itemPrice:
        type: number
        format: double
        example: 7.50
      unitOfMeasurement:
        type: string
        example: "each"
      unitsSold:
        type: number
        format: double
        example: 1
      rebateLabel:
        type: string
        example: "HostDiscount"
      maxQuantity:
        type: number
        format: double
        example: 7.50
      offerStatus:
        $ref: '#/definitions/OfferStatus'

  PurchaseInfo:
    description: Information about Resources associated with the Transaction.  The common example is the car wash system.
    type: object
    properties:
      id:
        description: Unique identifier for the resource.
        type: string
      name:
        description: Common name for the resource.
        type: string
      order:
        $ref: '#/definitions/Order'
      items:
        description: Item(s) for sale at the resource.  Common examples are the car wash packages for sale.
        type: array
        items:
          $ref: '#/definitions/POSItem'

  ReferenceToken:
    description: Surrogate value used to represent a handle to an account without sharing PCI/PII data to look it up.
    type: object
    properties:
      tokenId:
        description: Actual token value
        type: string
        example: 292bb6b886fc4446894f878b7e32bd5e
      tokenProvider:
        description: Indicates what system is the originator of the token
        type: string
        example: TRANS_ARMOR
      expiryDate:
        $ref: '#/definitions/ExpiryDate'

  TaxDetails:
    description: Tax details.
    type: object
    properties:
      code:
        type: string
        example: TX01
      description:
        type: string
        example: Sales Tax
      amount:
        type: string
        example: '7.50'
      rate:
          type: string
          example: '13.5'

  ThreeDSecure:
    description: Details of ThreeDSecure transaction used to process the challege flow
    type: object
    properties:
      transactionId:
        description: Transaction id generated on the server
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      transactionStatus:
        type: string
        description: Transactions status of 3DS server
        example: "C"
      transactionStatusReason:
        type: string
        description: Reason for the transaction status
      challengeResponse:
        type: string
        example: "ewogIC"
      challengeIndicator:
        type: string
        example: "01 = No preference
                  02 = No challenge requested
                  03 = Challenge requested: 3DS Requestor Preference
                  04 = Challenge requested: Mandate"
      dsTransactionId:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      acsTransactionId:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      serverTransactionId:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      acsReferenceNumber:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      acsSignedContent:
        type: string
        example: "292bb6b88....6fc4446894f878b7e32bd5e"
      cardType:
        $ref: '#/definitions/CreditCardType'
      challengeRequest:
        type: string
        example: "ewogICAiYW.......MjJjMGVjIgp9"
      acsUrl:
        type: string
        example: "https://test.modirum.com/dstests/ACSEmu2"
      iframeContent:
        type: string
        example: "<iframe></iframe>"
      termUrl:
        type: string
        example: "https://mydomain/3dstest?transactionId=292bb6b886fc4446894f878b7e32bd5e"
      isThreeDSMethodCompleted:
        type: boolean
        example: true
      isAuthenticationCompleted:
        type: boolean
        example: true
      cavv:
        type: string
        description: Card authenticaion verificaiton value
      threeDSVersion:
        type: string
      expiryDateTime:
        description: 3DS challenge transaction expiry date time.
        type: string
        readOnly: true
        format: date-time
        example: "2020-01-01T16:06:05Z"
      eci:
        type: string
        description: Electronic Commerce Indicator value

  SamsungPay:
    type: object
    properties:
      version:
        type: string
        example: EC_v1
      developerEmail:
        type: string
      data:
        type: string
        example: 3CguW5ecfTzO...03d
      signature:
        type: string
        example: "MIAGCSqGSIb......AAAA=="
      decryptAlias:
        description: field of the public key certificate.
        type: string
        example: "oslo.com.xxx.Prod_mer"
      dPanLast4:
        type: string
        example: "9876"
      bin:
        type: string
      eciIndicator:
        type: string
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      panType:
        type: string
      cardType:
        $ref: '#/definitions/CreditCardType'
        example: "VISA"
      header:
        type: object
        properties:
          ephemeralPublicKey:
            type: string
            example: MFkwEw...03d
          publicKeyHash:
            type: string
            example: +vbONw...IM=
      token:
        $ref: '#/definitions/ReferenceToken'
      billingAddress:
        $ref: '#/definitions/Address'
      billingPhone:
        $ref: '#/definitions/Phone'

  VaultedAccount:
    description: FD Account information
    type: object
    properties:
      fdAccountId:
        description: Unique identifier for a customer account vaulted with uCom
        type: string
      securityCode:
        description: Card Verificatiion value.
        type: string
      status:
        $ref: '#/definitions/AccountStatus'
      type:
        $ref: '#/definitions/AccountType'
    example:
      fdAccountId: muid-3d4f2ac...c91014f2dc1

  Venmo:
    description: Information about a Venmo account.
    type: object
    properties:
      nonce:
        type: string
        description: Venmo generated nonce.
        example: "ab12-124C-ab12-124C-ab12-124C"

  Vipps:
    description: Information about a Vipps account. 'credit' is a read-only property.
    type: object
    required:
      - paymentId
    properties:
      paymentId:
        type: string
        description: The payment_id of Vipps. Used to correlate with the webhook of an open order.
        example: "ab12-124C-ab12-124C-ab12-124C"
      credit:
        $ref: '#/definitions/Credit'

  VisaCheckout:
      description: Visa Checkout information
      type: object
      properties:
        callId:
          description: Identifier corresponding to an account enrolled with Visa Checkout system.
          type: string
          example: "1234732704291071701"
        credit:
          $ref: '#/definitions/Credit'

  WashCode:
    description: Purchased wash information.
    type: object
    properties:
      code:
        description: Wash code generated by the POS system.
        type: string
      description:
        description: Wash code description generated by the POS system.
        type: string
      expiration:
        description: Expiration date for the purchased wash code
        type: string
        format: date-time
      message:
        description: Field to carry message from site system for display to customer.
        type: string

  WalmartPay:
    type: object
    properties:
        credit:
          $ref: '#/definitions/Credit'
        token:
          $ref: '#/definitions/ReferenceToken'
#-------------------------------------
# Common Models
#-------------------------------------
  DeviceInfo:
    description: Request origin device details
    type: object
    required:
      - id
      - kind
    properties:
      id:
        description: Unique Id for the device. Value should not contain line feeds, carriage returns, tabs, leading or trailing spaces, or multiple spaces.
        type: string
        example: "537edec8-d33e-4ee8-93a7-b9f61876950c"
      kind:
        description: Possible values are mobile, wearable, automobile, embedded,desktop, other.
        type: string
        example: "mobile"
      details:
        title: deviceData
        description: Device data information from multiple providers.
        type: array
        minItems: 0
        uniqueItems: true
        items:
          description: Collection of device data
          type: object
          properties:
            provider:
              description: Identifies the provider of the data and is often used when decrypting data on the server.
              type: string
              example: "InAuth"
            dataCapture:
              description: Device data captured as a bundle and transmitted as an encrypted and/or specifically formated string.
              type: object
              properties:
                rawData:
                  description: Device capture - raw data blob
                  type: string
                  example: "aaaaaXREUVZGRlFY...aMV"
                dataEventId:
                  description: Event identifier used map state on the server.
                  type: string
                  example: "BB8E4E92...Fz1E063113"
                captureTime:
                  description: Device data capture time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
                  type: string
                  format: date-time
                  example: "2016-04-16T16:06:05Z"
            dataStatic:
              description: Device static details
              type: object
              properties:
                os:
                  description: Device OS name
                  type: string
                  example: "Android 5.1.1 Lollipop"
                osVersion:
                  description: Device OS version
                  type: string
                  example: "5.1.1 Lollipop"
                model:
                  description: Device model
                  type: string
                  example: "XT1540"
                type:
                  description: Device type
                  type: string
                  example: "Moto G"
            dataDynamic:
              description: Device location details
              type: object
              properties:
                latitude:
                  description: Device position - latitude at the time of the data event
                  type: string
                  example: "13.0827 N"
                longitude:
                  description: Device position - longitude at the time of the data event
                  type: string
                  example: "80.2707 E"
                ipAddress:
                  description: IP address
                  type: string
                  example: "172.27.37.221"
                captureTime:
                  description: Device data capture time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
                  type: string
                  format: date-time
                  example: "2016-04-16T16:06:05Z"
            dataApplication:
              description: Mobile application specific data
              type: object
              properties:
                version:
                  description: Mobile application version.
                  type: string
                  format: sting
                  example: "1.0.0"
                name:
                  description: Mobile application name.
                  type: string
                  format: sting
                  example: "aplication-name"
                country:
                  description: Mobile application store country.
                  type: string
                  format: sting
                  example: "US"
      additionalInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true

  Error:
    description: Model for error messaging
    type: object
    readOnly: true
    properties:
      code:
        type: string
        description: Uniquely identifies an error condition. Client applications need to read and handle errors based on this.
      message:
        type: string
        description: A generic description of the error condition.
      category:
        type: string
        description: The resource associated with the error condition.
      developerInfo:
        type: object
        description: Information that needs to be understood by the client developers and should not be interpreted for application processing.
        properties:
          developerMessage:
            type: string
            description: An elaborative description of the error description.
          moreInfo:
            type: string
            description: Link to the error in Developer page.
          fieldError:
            description: Detailed information about message format errors.
            type: array
            items:
              properties:
                field:
                  description: The property or attribute associated with the error
                  type: string
                message:
                  description: Information specific to a property or attribute.
                  type: string
      hostExtraInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
      threeDSecureInfo:
          $ref: '#/definitions/ThreeDSecure'
      _links:
        type: array
        items:
          $ref: '#/definitions/Link'


#-------------------------------------
# ENUM Models
#-------------------------------------
  AccountStatus:
    description: Indicates the status of an account.
    type: string
    readOnly: true
    enum:
      - ACTIVE
      - INACTIVE
      - TERMINATED
      - ISSUER_TERMINATED
      - WALLET_TERMINATED
      - PENDING

  AccountType:
    description: Type of Account vaulted
    type: string
    readOnly: true
    enum:
      - CREDIT
      - PREPAID
      - ACH
      - LOYALTY
      - PAYPAL
      - MASTERPASS
      - VENMO
      - VAULTED_ACCOUNT

  AchEnrollmentStatus:
    description: Indicates ACH enrollment status
    type: string
    enum:
      - ACTIVE
      - PENDING
      - PENDING_LINKED_ACCOUNT

  AchEnrollmentSubStatus:
    description: Indicates ACH enrollment pending status
    type: string
    enum:
        - PENDING_BANK_VALIDATION
        - PENDING_PIN_VALIDATION
        - PENDING_EMAIL_VALIDATION
        - PENDING_PHONE_VALIDATION
        - PENDING_SOFT_BLOCK
        - PENDING_HARD_BLOCK

  BalanceStatus:
    type: string
    description: Indicates the status of the balance transaction of a given account.
      'INPROGRESS' - Balance retrieval is still in inprogress
      'COMPLETED' - Balance is available
      'ERROR' - Balance retrieval failed. System error
      'UNAVAILABLE' - Balance is not available. Check Host extra info for additional details
    enum:
      - INPROGRESS
      - COMPLETED
      - ERROR
      - UNAVAILABLE

  CurrencyPairType:
    description: Describes the type of currency where BASE represents the currency from Host and TRANSACTION represents the one requested.
    type: string
    enum:
      - BASE
      - TRANSACTION

  CreditCardType:
    title: Credit Card Type
    description: Indicates the type of credit account association
    type: string
    enum:
      - AMEX
      - DISCOVER
      - MASTERCARD
      - PLCC
      - VISA
      - JCB
      - DINERS
      - OTHER

  AchCardType:
    description: Indicates the type of ACH card association
    type: string
    enum:
      - CONNECTPAY

  AchAccountType:
    description: ACH account type
    type: string
    enum:
      - CHECKING
      - SAVINGS

  FundingSourceType:
    description: Describes the type of Funding source
    type: string
    readOnly: true
    enum:
      - VAULTED_ACCOUNT
      - CREDIT
      - PREPAID
      - APPLE_PAY
      - ANDRIOD_PAY
      - PAYPAL
      - TOKEN
      - NONCE
      - VCO
      - VENMO
      - LOYALTY
      - AMAZON_PAY
      - VIPPS
      - FLEET
      - BANCONTACT
      - IDEAL
      - WALMART_PAY
      - EBT

  POSItemType:
    description: Indicates the type of item
    type: string
    enum:
      - CARWASH
      - FUEL
      - OTHER

  PrepaidStatus:
    title: Prepaid Status
    description: Indicates the status of an prepaid operation.
    type: string
    readOnly: true
    enum:
      - CHALLENGED
      - APPROVED
      - FAILED
      - DECLINED

  OperationType:
    type: string
    description: Indicates the status of the balance transaction of a given account.
      'PURCHASEVOID' - Void a purchase transaction
      'RELOADVOID' - Void a relaod transaction
      'DEDUCT' - Take out funds
      'SWEEPOUT' - Sweep out balance to zero
    enum:
      - PURCHASEVOID
      - RELOADVOID
      - DEDUCT
      - SWEEPOUT

  RequestStatus:
    type: string
    description: Indicates the status of the overall request.
      'INPROGRESS' - Balance retrieval is still in inprogress for one or more accounts
      'COMPLETED' - Balance retrieval is completed for all accounts
    readOnly: true
    enum:
      - INPROGRESS
      - COMPLETED

  ServiceLevelCode:
    description: Indicates service level code.
    type: string
    default: 'S'
    enum:
      - S
      - F
      - N
      - X

  UpdateActionType:
    description: Indicates the action intended as part of patch operation.
    type: string
    enum:
      - RESUME_TRANSACTION
      - CANCEL_TRANSACTION
#-------------------------------------
# Responses
#-------------------------------------
responses:

  Created:
    description: Resource created
    headers:
      Location:
        type: string
        description: Location of newly created resource.
    schema:
      $ref: '#/definitions/Prepaid'


  OK:
    description: OK
    schema:
      $ref: '#/definitions/Prepaid'

  BalanceResponse:
    description: Prepaid balance response based on request id
    schema:
      $ref: '#/definitions/PrepaidBalanceTransactionInfo'

  AggregateBalanceResponse:
    description: Prepaid balance response based on customer id
    schema:
      $ref: '#/definitions/AggregateBalanceTransactionInfo'

  NoContent:
    description: The request succeeded but there�s really nothing to show.

  BadRequest:
    description: Bad request
    schema:
      $ref: '#/definitions/Error'

  Unauthorized:
    description: Unauthorized

  NotFound:
    description: Not Found - The requested resource doesn't exist.
    schema:
      $ref: '#/definitions/Error'

  Conflict:
    description: Conflict - The requested operation conflicts with the current state of the identified resource.
    schema:
      $ref: '#/definitions/Error'

  ServerError:
    description: An unexpected server error occured.
    schema:
      $ref: '#/definitions/Error'

  TooEarly:
    description: Request is too early to process.
    schema:
      $ref: '#/definitions/Error'

#-------------------------------------
# Parameter Models
#-------------------------------------
parameters:
  AcceptLanguageParam:
    name: Accept-Language
    description: The Accept-Language header contains information about the language preference of a user. This HTTP header is useful to multilingual sites for deciding the best language to serve to the client. i.e en-US,fr-CA
    in: header
    type: string

  ApiKeyParam:
    name: Api-Key
    description: An API key is a string value passed by a client app to the API proxies.The key uniquely identifies the client app.
    in: header
    required: true
    type: string

  AuthorizationParam:
    name: Authorization
    description: Authorization information for the request. Format- `HMAC {hmacToken}`
    in: header
    required: true
    type: string

  ClientTokenParam:
    name: Client-Token
    description: Used to pass the original client OAuth token information given in a client-credentials flow.  This field is only used when the server is making the request and needs to link the transaction to a specific client.  Format- `Bearer {access_token}`
    in: header
    type: string

  ClientRequestIdParam:
    name: Client-Request-Id
    description: Contains a unique ID generated by the client that can be used for enforcing idempotency on POST actions. POSTs are inherently non-idempotent and submitting the exact same request multiple times would create duplicate resources. Note:- Omitting this header increases the risk of duplicate transactions, which for payments could cost the client issues like double-billing.
    in: header
    required: true
    type: string


  ClientRequestIdQueryParam:
    name: clientRequestId
    description: Id used in the previous transaction.
    in: query
    type: string

  EndDateParam:
    name: endDate
    description: Date upto which transactions are to be retrieved. Format YYYYMMDD
    in: query
    required: false
    type: string
    format: date-time

  LocationParam:
    name: Location
    description: Indicates the target of a redirection i.e /v1/prepaid/balances/{requestId}
    in: header
    type: string

  FdTransactionIdParam:
    name: fdTransactionId
    description: Unique identifier provided for a purchase/sale/merge transaction.
    in: path
    required: true
    type: string

  FdParentTransactionIdParam:
    name: fdParentTransactionId
    description: Unique identifier provided for a parent transaction.
    in: path
    required: true
    type: string

  FdRefundIdParam:
    name: fdRefundId
    description: Unique identifier provided for a refund.
    in: path
    required: true
    type: string

  PageNumberParam:
    name: pageNo
    description: Page number
    in: query
    required: false
    type: integer

  PageSizeParam:
    name: pageSize
    description: 'Max number of records per page. Supported values - 5, 10, 15, 20, 25 ..50'
    in: query
    required: false
    type: integer
    allowEmptyValue: false

  RequestIdParam:
    name: requestId
    description: Unique identifier for the request.
    in: path
    required: true
    type: string

  SubMerchantIdParam:
    name: Sub-Merchant-Id
    description: Sub Merchant Id contains information about the merchant identifier
    in: header
    type: string

  StartDateParam:
    name: startDate
    description: Date from which transactions are to be retrieved. Format YYYYMMDD
    in: query
    required: false
    type: string
    format: date-time

  TimestampParam:
    name: Timestamp
    description: Epoch timestamp in the request initiating system
    in: header
    required: true
    type: string

#-------------------------------------
# Document Change Log
# 0.2.3
#     - No change
# 0.2.2
#     - No change
# 0.2.1
#     - Added MoneyNetwork account type
#     - Added SEC code for ACH
#     - Added EBT account type
#     - Added Merchant id as header field
#     - Added asset provider field in the ACH
# 0.2.0
#     - Added 'OTHER' CreditCardType
#     - Added fields in ThreeDSecure object
#     - Added support for digital payments vaulting
#     - Added PAN type and BIN
#     - Added Expiry Date to InApp entities
#     - Added Developer Email in ApplePay/GooglePay/SamsungPay objects
#     - Added merchant id and store id
#     - Added ECIIndicator in ApplePay/GooglePay/SamsungPay objects
#     - Added currency code, auth amount fields.
#     - Added DynamicDescriptors
# 0.1.9
#     - No change.
# 0.1.8
#     - Added Fleet account type
#     - Added 3ds web support
#     - Added account type for ACH
# 0.1.7
#     - Added New API for Account verification
#     - Added hostedExtraInfo in Account object
#     - Added credit in Paypal object
#     - Added enrollment status and bank name in the ACH object
#     - Removed deviceId within Account object
#     - Added query param to filter accounts based on account type
#     - Added 3ds challenge transaction expiry date time in ThreeDSecure
# 0.1.6
#     - Added securityCode in vaulted Account
#     - Added vaulted Account object under Account.
#     - Added VAULTED_ACCOUNT as AccountType
#     - Added ExpiryDate in Loyalty object
#     - Added Accept-Language header field
#     - Added New API to verify an account
# 0.1.5
#     - Added 'currencyValue' & 'currencyCode' to LoyaltyBalance
#     - Added date created and modified in the Account object.
#     - Added Link in the Error object.
#     - acsSignedContent and CardType in threeDSecureInfo object
#     - Adding billingPhone in the Credit object
# 0.1.4
#     - Introduced venmo account type under Account object
#     - Credit is added to MasterPass
#     - Added a new API for TA token generation.
#     - Added ThreeDSecure under Account object
# 0.1.3
#     - Adding NVP with valueAsList
#     - update in DeviceInfo.
# 0.1.2
#     - No change.
# 0.1.1
#     - removed transactionId, oldPin, pin, type, token object from ach
#     - added cardNumber, expiryDate, cardType in ach object
#     - Introduced MasterPass capabilities
#     - Added 'hostExtraInfo' in 'Error'
# 0.1.0
#     - added fdcustomerId in /v1/account-tokens API.
#     - added client-token in the request header
# 0.0.9
#     - Cleanup, cobranded not needed
#     - Introduced accountType, phone.extension, gender
#     - Introduced Security question section under Account Object
#     - Introduced additionalInfo for mapping NVP
#     - Introduced dateOfBirth
#     - Introduced 'ach', 'visaCheckout' elements in Account object
#     - Introduced 'identities' element in User object
#     - Added 'cardSubType' attribute inside Credit object
#     - Added 'nonce' attribute in Paypal object
# 0.0.8
#     - Added accountOwner object to Account
#     - Loyalty object updated with additional fields
# 0.0.7
#   - Updated ReferenceToken to have more accurate attribute names, removed use value
#   - Cleaned up examples in the models
# 0.0.6
#   - Added a @token to the Credit, Cobranded, Loyalty, and Prepaid models whereby a token generated or retrieved during the process can be returned to the client.
# 0.0.5
#     - No change.
# 0.0.4
#     - Changed response model of get all accounts from object to array.
#     - Added new PATCH request with fdCustomerId
# 0.0.3
#     - Added account status ISSUER_TERMINATED and WALLET_TERMINATED.
# 0.0.2
#     - Added 'osVersion' attribute to 'DeviceInfo' object.
# 0.0.1
#     - Initial Version
#-------------------------------------

openapi: 3.0.1
info:
  title: uCom Account Services
  description: Services related to uCom customer accounts.  Accounts can be credit,
    debit, loyalty, prepaid, etc.
  version: 0.2.3
servers:
  - url: https://int.api.firstdata.com/ucom
tags:
  - name: accounts
    description: Operations and details about a vaulted accounts.
paths:
  /v1/account-tokens:
    post:
      x-group-name: Account Services
      x-proxy-name: Tokenize by Card Detail
      tags:
        - accounts
      summary: Tokenize an account
      description: Tokenize an account without an associated uCom customer identifier.  The
        token will be generated by the system configured in the merchants setup.
      parameters:
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/AuthorizationParam'
        - $ref: '#/components/parameters/ClientTokenParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/AcceptLanguageParam'
        - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        description: Details of the account to be vaulted in uCom
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
        required: true
      responses:
        201:
          $ref: '#/components/responses/Created'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        500:
          $ref: '#/components/responses/ServerError'

  /v1/accounts/verification:
    post:
      x-group-name: Account Services
      x-proxy-name: Tokenize an Account by Nonce
      tags:
        - accounts
      summary: Tokenize an Account by Nonce
      description: Verify an account without an associated uCom customer identifier
      parameters:
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/AuthorizationParam'
        - $ref: '#/components/parameters/ClientTokenParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/AcceptLanguageParam'
        - $ref: '#/components/parameters/OperationTypeParam'
        - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        description: Details of the account to be verified in uCom
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountVerifyRequest'
        required: true
      responses:
        200:
          $ref: '#/components/responses/OK'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        500:
          $ref: '#/components/responses/ServerError'

  /v1/account-tokens/{nonceTokenId}/tokenization:
    post:
      x-group-name: Account Services
      x-proxy-name: Tokenize an Account by Nonce
      tags:
        - accounts
      summary: This API shoudle be called from server with HMAC in authrization header
        and nonce token in body to generate TA Token as reply object.
      description: Tokenize an account without an associated uCom customer identifier.
        The token will be generated by different FEP, depends on partner configurations.
      parameters:
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/AuthorizationParam'
        - $ref: '#/components/parameters/ClientTokenParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/NonceTokenIdParam'
        - $ref: '#/components/parameters/AcceptLanguageParam'
        - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        description: Details of the account for TA token generation.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
        required: true
      responses:
        201:
          $ref: '#/components/responses/Created'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        500:
          $ref: '#/components/responses/ServerError'

  /v1/customers/{fdCustomerId}/accounts:
    get:
      x-group-name: Account Services
      x-proxy-name: Get list of accounts
      tags:
        - accounts
      summary: Get list of accounts
      description: Fetch all accounts for a Customer profile
      parameters:
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/AuthorizationParam'
        - $ref: '#/components/parameters/ClientTokenParam'
        - $ref: '#/components/parameters/FdCustomerIdParam'
        - $ref: '#/components/parameters/DeviceIdParam'
        - $ref: '#/components/parameters/AcceptLanguageParam'
        - $ref: '#/components/parameters/AccountTypeParam'
        - $ref: '#/components/parameters/SubMerchantIdParam'
      responses:
        200:
          $ref: '#/components/responses/OK'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
    post:
      x-group-name: Account Services
      x-proxy-name: Vault an account
      tags:
        - accounts
      summary: Vault an account in uCom
      description: Register a customer account in the uCom vault
      parameters:
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/AuthorizationParam'
        - $ref: '#/components/parameters/ClientTokenParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/FdCustomerIdParam'
        - $ref: '#/components/parameters/AcceptLanguageParam'
        - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        description: Details of the account to be vaulted in uCom
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
        required: true
      responses:
        201:
          $ref: '#/components/responses/Created'
        202:
          $ref: '#/components/responses/PartiallyCreated'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        409:
          $ref: '#/components/responses/Conflict'
        500:
          $ref: '#/components/responses/ServerError'
    patch:
      x-group-name: Account Services
      x-proxy-name: Update account
      tags:
        - accounts
      summary: Update one or more account(s)
      description: Update a vaulted account where the fdCustomerId isn't know.  The
        service will attempt of find vaulted accounts based on parameters in the payload
        and update them accordingly.
      parameters:
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/AuthorizationParam'
        - $ref: '#/components/parameters/ClientTokenParam'
        - $ref: '#/components/parameters/FdCustomerIdParam'
        - $ref: '#/components/parameters/AcceptLanguageParam'
        - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        description: Details about what fields to update for the given account.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
        required: false
      responses:
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        409:
          $ref: '#/components/responses/Conflict'
        500:
          $ref: '#/components/responses/ServerError'

  /v1/customers/{fdCustomerId}/accounts/{fdAccountId}:
    get:
      x-group-name: Account Services
      x-proxy-name: Get an account details
      tags:
        - accounts
      summary: Get an account details
      description: Fetch details of a specific account
      parameters:
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/AuthorizationParam'
        - $ref: '#/components/parameters/ClientTokenParam'
        - $ref: '#/components/parameters/FdCustomerIdParam'
        - $ref: '#/components/parameters/FdAccountIdParam'
        - $ref: '#/components/parameters/DeviceIdParam'
        - $ref: '#/components/parameters/AcceptLanguageParam'
        - $ref: '#/components/parameters/SubMerchantIdParam'
      responses:
        200:
          $ref: '#/components/responses/OK'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

    delete:
      x-group-name: Account Services
      x-proxy-name: Delete a vaulted account
      tags:
        - accounts
      summary: Delete a vaulted account
      description: Delete a vaulted account
      parameters:
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/AuthorizationParam'
        - $ref: '#/components/parameters/ClientTokenParam'
        - $ref: '#/components/parameters/FdCustomerIdParam'
        - $ref: '#/components/parameters/FdAccountIdParam'
        - $ref: '#/components/parameters/DeviceIdParam'
        - $ref: '#/components/parameters/AcceptLanguageParam'
        - $ref: '#/components/parameters/SubMerchantIdParam'
      responses:
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

    patch:
      x-group-name: Account Services
      x-proxy-name: Update a vaulted account
      tags:
        - accounts
      summary: Update a vaulted account
      description: Update a vaulted account
      parameters:
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/AuthorizationParam'
        - $ref: '#/components/parameters/ClientTokenParam'
        - $ref: '#/components/parameters/FdCustomerIdParam'
        - $ref: '#/components/parameters/FdAccountIdParam'
        - $ref: '#/components/parameters/AcceptLanguageParam'
        - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        description: Details about what fields to update for the given account.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
        required: false
      responses:
        204:
          $ref: '#/components/responses/NoContent'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        409:
          $ref: '#/components/responses/Conflict'
        500:
          $ref: '#/components/responses/ServerError'

  /v1/account-tokens/{nonceTokenId}:
    get:
      x-group-name: Account Services
      x-proxy-name: Retrieve Account with Nonce
      tags:
        - accounts
      summary: Retrieve account with nonce token.
      description: Retrieve an account object by passing nonce token generated by
        POST /v1/account-tokens API.
      parameters:
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/AuthorizationParam'
        - $ref: '#/components/parameters/ClientTokenParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/NonceTokenIdParam'
        - $ref: '#/components/parameters/AcceptLanguageParam'
        - $ref: '#/components/parameters/SubMerchantIdParam'
      responses:
        200:
          $ref: '#/components/responses/OK'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        500:
          $ref: '#/components/responses/ServerError'

components:
  schemas:
#-------------------------------------
# Operational Models
#-------------------------------------
    AccountRequest:
      title: Account Request
      type: object
      properties:
        account:
          $ref: '#/components/schemas/Account'
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
        merchantId:
          type: string
          description: Merchant identifier for which the request has been initiated.
          example: M117008616001
        altMerchantId:
          type: string
          description: Alternate Merchant identifier for which the request has been
            initiated.
        merchantTokenCode:
          type: string
          description: Merchant token code used for token generation
        merchantTerminalId:
          type: string
          description: Merchant terminal identifier
        storeId:
          type: string
          description: Store identifier for which the request has been initiated
          example: "123456"
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'
        requestedAuthAmount:
          $ref: '#/components/schemas/RequestedAuthAmount'
        dynamicDescriptors:
          $ref: '#/components/schemas/DynamicDescriptors'
        supplements:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/Supplement'
        issuerExtraInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'

    AccountVerifyRequest:
      title: Account Verify Request
      type: object
      properties:
        fdCustomerId:
          type: string
          description: Unique identifier for a customer profile registered with uCom
        account:
          $ref: '#/components/schemas/Account'
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
        merchantId:
          type: string
          description: Merchant identifier for which the request has been initiated.
          example: M117008616001
        altMerchantId:
          type: string
          description: Alternate Merchant identifier for which the request has been
            initiated.
        merchantTokenCode:
          type: string
          description: Merchant token code used for token generation
        merchantTerminalId:
          type: string
          description: Merchant terminal identifier
        storeId:
          type: string
          description: Store identifier for which the request has been initiated
          example: "123456"
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'
        requestedAuthAmount:
          $ref: '#/components/schemas/RequestedAuthAmount'
        dynamicDescriptors:
          $ref: '#/components/schemas/DynamicDescriptors'
        supplements:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/Supplement'
        issuerExtraInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'

    TokenRequest:
      title: Token Request
      type: object
      properties:
        token:
          $ref: '#/components/schemas/ReferenceToken'
        account:
          $ref: '#/components/schemas/Account'
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
        dynamicDescriptors:
          $ref: '#/components/schemas/DynamicDescriptors'
        fdCustomerId:
          type: string
          description: Unique identifier for a customer profile registered with uCom
        altMerchantId:
          type: string
          description: Alternate Merchant identifier for which the request has been
            initiated.
        merchantId:
          type: string
        merchantTokenCode:
          type: string
        merchantTerminalId:
          type: string
        storeId:
          type: string

#-------------------------------------
# Resource Models
#-------------------------------------
    Account:
      type: object
      properties:
        fdAccountId:
          type: string
          description: Unique identifier for a customer account vaulted with uCom
          readOnly: true
        type:
          $ref: '#/components/schemas/AccountType'
        status:
          $ref: '#/components/schemas/AccountStatus'
        credit:
          $ref: '#/components/schemas/Credit'
        prepaid:
          $ref: '#/components/schemas/Prepaid'
        loyalty:
          $ref: '#/components/schemas/Loyalty'
        paypal:
          $ref: '#/components/schemas/Paypal'
        masterpass:
          $ref: '#/components/schemas/MasterPass'
        token:
          $ref: '#/components/schemas/ReferenceToken'
        ach:
          $ref: '#/components/schemas/ACH'
        accountOwner:
          $ref: '#/components/schemas/User'
        venmo:
          $ref: '#/components/schemas/Venmo'
        visaCheckout:
          $ref: '#/components/schemas/VisaCheckout'
        fleet:
          $ref: '#/components/schemas/Fleet'
        applePay:
          $ref: '#/components/schemas/ApplePay'
        samsungPay:
          $ref: '#/components/schemas/SamsungPay'
        googlePay:
          $ref: '#/components/schemas/GooglePay'
        threeDSecureInfo:
          $ref: '#/components/schemas/ThreeDSecure'
        moneyNetwork:
          $ref: '#/components/schemas/MoneyNetwork'
        ebt:
          $ref: '#/components/schemas/EBT'
        nickName:
          type: string
          description: Name given by the user to label the account that has meaning
            for them visually.
          example: My Favorite Account
        securityQuestions:
          type: array
          description: A list of questions.
          items:
            $ref: '#/components/schemas/Question'
        additionalInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
        hostExtraInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
        dateCreated:
          type: string
          description: Date created time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
          format: date-time
          example: 2016-04-16T16:06:05Z
        dateModified:
          type: string
          description: Date modified time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
          format: date-time
          example: 2016-04-16T16:06:05Z
        vaultedAccount:
          $ref: '#/components/schemas/VaultedAccount'
      description: Account information - can only be ONE of the account types. Currently
        OpenAPI doesn't support a "oneOf" tag to show this constraint in hte spec.

    ACH:
      type: object
      properties:
        accountNumber:
          type: string
          description: Unique number identifying the ACH account provided by Financial
            institution.
          example: "92658250156"
        routingNumber:
          type: string
          description: Number to identify the financial institution
          example: "999999999"
        secCode:
          type: string
          description: SEC Code is optional data, It is specifically required for
            ACH account which is ruled by NACHA compliance.
        cardNumber:
          type: string
          description: ACH Card number, can only be sent when vaulting an account.  This
            field will NOT be present in responses.
          example: "9111111111111111"
        cardType:
          $ref: '#/components/schemas/AchCardType'
        securityCode:
          type: string
          description: Code to validate the ACH account, like micro deposit or security
            code.
          example: "278356"
        alias:
          type: string
          description: Last four values of the cardNumber
          readOnly: true
          example: "1111"
        enrollmentStatus:
          $ref: '#/components/schemas/AchEnrollmentStatus'
        enrollmentSubStatuses:
          type: array
          items:
            $ref: '#/components/schemas/AchEnrollmentSubStatus'
        accountType:
          $ref: '#/components/schemas/AchAccountType'
        bankName:
          type: string
          description: Name of the bank associated with the ACH account
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        assetProvider:
          $ref: '#/components/schemas/AssetProvider'
      description: Information about an ACH account

    Address:
      type: object
      properties:
        type:
          type: string
          description: Canonical type values of "work", "home", and "other".
        streetAddress:
          type: string
          description: The full street address component, which may include house
            number, street name, P.O. box, and multi-line extended street address
            information.
        locality:
          type: string
          description: The city or locality component.
        region:
          type: string
          description: The state or region component.
        postalCode:
          type: string
          description: The zip code or postal code component.
        country:
          type: string
          description: The country name component.  When specified, the value MUST
            be in ISO 3166-1 "alpha-2" code format; e.g., the United States and Sweden
            are "US" and "SE", respectively.
        formatted:
          type: string
          description: The full mailing address, formatted for display or use with
            a mailing label.
        primary:
          type: boolean
          description: Indicates if this is the default address for the associated
            resource. It only has meaning when used in a set or array of addresses.
      description: A physical mailing address for this user.
      example:
        type: work
        streetAddress: 100 Universal City Plaza
        locality: Hollywood
        region: CA
        postalCode: "91608"
        country: US
        formatted: |-
          100 Universal City Plaza
          Hollywood, CA 91608 US
        primary: true

    AssetProvider:
      type: object
      properties:
        providerName:
          type: string
          example: coinbase

    ApplePay:
      type: object
      properties:
        version:
          type: string
          example: EC_v1
        developerEmail:
          type: string
        signature:
          type: string
          example: MIAGCSqGSIb......AAAA==
        decryptAlias:
          type: string
          description: field of the public key certificate.
          example: oslo.com.xxx.Prod_mer
        data:
          type: string
          example: 3CguW5ecfTz...Yuhw=
        applicationData:
          type: string
          example: VEVTVA==
        dPanLast4:
          type: string
          example: "9876"
        bin:
          type: string
        eciIndicator:
          type: string
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        panType:
          type: string
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        header:
          type: object
          properties:
            applicationDataHash:
              type: string
            ephemeralPublicKey:
              type: string
              example: MFkwEwYHKoZIzj0CIKoZIz.....NBQQ==
            publicKeyHash:
              type: string
              example: +vbONwRlVqJX0........
            transactionId:
              type: string
              example: 3827c5a02638.....34d50
        token:
          $ref: '#/components/schemas/ReferenceToken'
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'

    Credit:
      type: object
      properties:
        cardNumber:
          type: string
          description: Primary account number, can only be sent when vaulting an account.  This
            field will NOT be present in responses.
          example: "4111111111111111"
        bin:
          type: string
        nameOnCard:
          type: string
          description: Name as printed on physical card or on virtual account
          example: John Smith
        alias:
          type: string
          description: Last four values of the cardNumber
          readOnly: true
          example: "1111"
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        cardSubType:
          type: string
          description: Merchant or brand specific information about the type of account
          example: ABCD
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        securityCode:
          type: string
          example: "444"
        sequenceNumber:
          type: string
          description: Applicable only for private-label accounts
          example: "01"
        token:
          $ref: '#/components/schemas/ReferenceToken'
      description: Information on a credit account

    DynamicDescriptors:
      type: object
      properties:
        merchantCategoryCode:
          type: string
          description: Merchant category code
        merchantName:
          type: string
          description: Merchant name
        merchantEmail:
          $ref: '#/components/schemas/Email'
        customerServiceNumber:
          $ref: '#/components/schemas/Phone'
        serviceEntitlementNumber:
          type: string
          description: Service entitlement number
        merchantAddress:
          $ref: '#/components/schemas/Address'

    EBT:
      type: object
      properties:
        cardNumber:
          type: string
          description: Primary account number, can only be sent when vaulting an account.  This
            field will NOT be present in responses.
        nameOnCard:
          type: string
          description: Name as printed on physical card or on virtual account
        alias:
          type: string
          description: Last four values of the cardNumber
          readOnly: true
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        bin:
          type: string
          description: BIN of EBT card
          readOnly: true
        pin:
          type: string
          description: PIN for EBT card
        pinCaptureId:
          type: string
          description: Session id used on client side SDK to capture the card pin
        transactionId:
          type: string
          description: The unique transaction ID
        balance:
          $ref: '#/components/schemas/EBTBalance'
        metadata:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
        token:
          $ref: '#/components/schemas/ReferenceToken'
      description: Electronic Benefits Transfer card information

    EBTBalance:
      type: object
      properties:
        cashBalance:
          type: number
        cashCurrencyCode:
          $ref: '#/components/schemas/ISO-4217'
        snapBalance:
          type: number
        snapCurrencyCode:
          $ref: '#/components/schemas/ISO-4217'

    Email:
      type: object
      properties:
        type:
          type: string
          description: The "type" sub-attribute is used to provide a classification
            meaningful to the (human) user.  The user interface should encourage the
            use of basic values of "work", "home", and "other" and MAY allow additional
            type values to be used at the discretion of the service client.
        value:
          type: string
          description: The value SHOULD be specified according to RFC5321.
        primary:
          type: boolean
          description: Defines if this entry is to be used as the primary or default
            for the user.
          default: false
      description: Email address for the user.
      example:
        value: bjensen@example.com
        type: work
        primary: true

    ExpiryDate:
      type: object
      properties:
        month:
          maxLength: 2
          minLength: 2
          pattern: '[0-9]{2,2}'
          type: string
          description: Month format 'MM'
          example: "09"
        year:
          maxLength: 2
          minLength: 2
          pattern: '[0-9]{2,2}'
          type: string
          description: Year format 'YY'
          example: "20"
        singleValue:
          maxLength: 6
          minLength: 4
          type: string
          description: Month and year together, 'MMYY' or 'MMYYYY'.  If the latter
            format, the string will be parsed and validated per the given format.  Any
            other format will be rejected.
      description: Contains account expiration data and needs to either send the values
        in individual fields OR as a singleValue.

    Fleet:
      type: object
      properties:
        cardNumber:
          type: string
          description: Primary account number, can only be sent when vaulting an account.  This
            field will NOT be present in responses.
        nameOnCard:
          type: string
          description: Name as printed on physical card or on virtual account
        alias:
          type: string
          description: Card alias
          readOnly: true
        cardType:
          $ref: '#/components/schemas/FleetCardType'
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        securityCode:
          type: string
        sequenceNumber:
          type: string
          description: Sequence number of the card.
        token:
          $ref: '#/components/schemas/ReferenceToken'
      description: Information on a Fleet account

    GooglePay:
      type: object
      properties:
        version:
          type: string
          description: Identifies encryption/signing scheme.
          example: EC_v1
        developerEmail:
          type: string
        signature:
          type: string
          description: Signature to verify Google initiated message.
          example: MIAGCSqGSIb......AAAA==
        data:
          type: string
          description: Data includes encryptedMessage, ephemeralPublicKey, tag.
          example: '{"encryptedMessage":"8nx...u003d","ephemeralPublicKey":"BGH...u003d","tag":"nvm...\u003d"}'
        dPanLast4:
          type: string
          example: "9876"
        bin:
          type: string
        eciIndicator:
          type: string
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        panType:
          type: string
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        token:
          $ref: '#/components/schemas/ReferenceToken'
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'
      description: Google Payment specific information

    Group:
      type: object
      properties:
        value:
          type: string
          description: The id of the group.
        href:
          type: string
          description: The URI of the corresponding "Group" resources to which the
            user belongs.
        display:
          type: string
          description: The common name of the group.
      description: Group
      example:
        value: e9e30dba-f08f-4109-8486-d5c6a331660a
        href: https://example.com/v2/Groups/e9e30dba-f08f-4109-8486
        display: Tour Guides

    Identity:
      type: object
      properties:
        type:
          type: string
          description: The "type" sub-attribute is used to provide a classification
            meaningful to the (human) user.  The user interface should encourage the
            use of basic values of "driving_license", "ssn", and "other" and MAY allow
            additional type values to be used at the discretion of the service  client.
          example: driving_license
        value:
          type: string
          description: The actual number as provided by issuing authority to identify
            user.
          example: "05978345"
        issuingState:
          type: string
          description: To be populated only in applicable identity types
          example: GA
      description: Information about user identity.

    IMS:
      type: object
      properties:
        value:
          type: string
          description: A shortened version one of the following values - aim, gtalk,
            icq, xmpp, msn, skype, qq, yahoo, or other. This will change with popularity
            of various applicatiions at any time.
        type:
          type: string
        primary:
          type: boolean
          description: Flag to indicate primary account
          default: false
      description: Instant messaging address for the user.
      example:
        value: someaimhandle
        type: aim

    ISO-4217:
      type: object
      properties:
        code:
          type: string
          example: USD
          default: USD
        number:
          type: integer
          example: 840
        digits:
          type: integer
          example: 2
        currency:
          type: string
          example: US Dollar
          default: US Dollar
      description: ISO 4217 currency format in which the balance is represented.

    Loyalty:
      type: object
      properties:
        accountId:
          type: string
          description: Account identifier, can be used for traditional card number
            or any alphanumeric value.  For example, a unique value not shown on the
            card, email address, phone number, social id, etc.
          example: email-id@example.com
        cardNumber:
          type: string
          description: Card number of loyalty account. The accountId parameter superscedes
            this field.  This field is ignored when the request is to create a new
            acccount.
          example: "905960447"
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        alias:
          type: string
          description: Last four values of the cardNumber
          readOnly: true
          example: "1111"
        accountStatus:
          $ref: '#/components/schemas/LoyaltyAccountStatus'
        loyaltyProgram:
          $ref: '#/components/schemas/LoyaltyProgram'
        pin:
          type: string
          description: Security pin number
        communications:
          type: object
          properties:
            email:
              type: boolean
            phone:
              type: boolean
            sms:
              type: boolean
          description: Methods the account onwer has agreed to be contacted
        commonFlags:
          type: object
          properties:
            tncAccepted:
              type: boolean
            canEarn:
              type: boolean
            canRedeem:
              type: boolean
            isChildAccount:
              type: boolean
            isVirtualAccount:
              type: boolean
              description: Indicates if the account has an associated plastic card
                or not.
          description: Common true/false settings on an account
        balance:
          $ref: '#/components/schemas/LoyaltyBalance'
        token:
          $ref: '#/components/schemas/ReferenceToken'
        metadata:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
      description: Information about a Loyalty account.

    LoyaltyBalance:
      type: object
      properties:
        balance:
          type: number
        minRedeemUnits:
          type: number
        maxRedeemUnits:
          type: number
        unitType:
          $ref: '#/components/schemas/BalanceUnitTypes'
        conversionRatio:
          type: number
        currencyValue:
          type: number
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'

    LoyaltyProgram:
      type: object
      properties:
        programId:
          type: string
          description: Unique identifier used to provide link between applications
            across disparate systems.
        hostProgramId:
          type: string
          description: Loyalty program Id used by the host (cloud) solution. Not in
            used in uCom system. For future use.
        programName:
          type: string
          description: Loyalty program name. Common name for the given loyalty program
        programDesc:
          type: string
          description: Used to describe the loyalty program and perhaps used to display
            to the client.
        programProvider:
          type: string
          description: Sponsor of the loyalty program.
        loyaltyType:
          $ref: '#/components/schemas/LoyaltyType'
        programStatus:
          $ref: '#/components/schemas/ProgramStatus'
      description: Value object to hold a list of loyalty items.
      example:
        programId: TEST_PROGRAM
        hostProgramId: TEST_HOST_PROGRAM
        programName: TEST_LOAYLTY_PROGRAM
        programDesc: Test loyalty program
        programProvider: Test Provider
        loyaltyType: LOCAL
        status: ENABLED

    Link:
      required:
        - href
        - rel
      type: object
      properties:
        href:
          type: string
          description: URL to linked resource.
          format: uri
        rel:
          type: string
          description: Defines the type of link relationship to current resource.
          example: self
          enum:
            - current.page
            - previous.page
            - next.page
            - self
        method:
          type: string
          description: Defines the HTTP method for the given href.
          example: GET
          default: GET
        id:
          type: string
          description: Identifier to the resource.
          example: 415e5cf6bfdb11e8a355529269fb1459
      description: Model to communicate linked resources.

    MonDayYear:
      type: object
      properties:
        day:
          maxLength: 2
          minLength: 2
          pattern: '[0-9]{2,2}'
          type: string
          description: Day format 'DD'
        month:
          maxLength: 2
          minLength: 2
          pattern: '[0-9]{2,2}'
          type: string
          description: Month format 'MM'
        year:
          maxLength: 4
          minLength: 4
          pattern: '[0-9]{4,4}'
          type: string
          description: Year format 'YYYY'
        singleValue:
          maxLength: 8
          minLength: 8
          type: string
          description: Month, Day and Year format - 'MMDDYYYY'.  If the latter format,the
            string will be parsed and validated per the given format.  Any other format
            will be rejected.
      example:
        singleValue: "01301901"

    MoneyNetwork:
      type: object
      properties:
        accountNumber:
          type: string
        cardNumber:
          type: string
        firstName:
          type: string
        lastName:
          type: string

    NVP:
      title: Name and Value pair.
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        valueAsList:
          minItems: 0
          type: array
          items:
            type: string

    Paypal:
      type: object
      properties:
        payerId:
          type: string
          description: Paypal generated Unique identfier for a Paypal account.
          example: LPLWNMTBWMFAY
        nonce:
          type: string
          description: Paypal generated nonce.
          example: ab12-124C-ab12-124C-ab12-124C
        credit:
          $ref: '#/components/schemas/Credit'
      description: Information about a Paypal account.

    MasterPass:
      type: object
      properties:
        transactionId:
          type: string
          description: MasterPass generated Unique identifier for accessing the account
            details.
          example: "1234567890120298"
        credit:
          $ref: '#/components/schemas/Credit'
      description: Information about a MasterPass account.

    PersonName:
      type: object
      properties:
        formatted:
          type: string
          description: The full name, including all middle names, titles, and suffixes
            as appropriate, formatted for display (e.g.,"Ms. Barbara Jane Jensen,
            III").
        familyName:
          type: string
          description: The family name of the User, or last name in most Western languages
            (e.g., "Jensen" given the full name "Ms. Barbara Jane Jensen, III").
        givenName:
          type: string
          description: The given name of the User, or first name in most Western languages
            (e.g., "Barbara" given the full name "Ms. Barbara Jane Jensen, III").
        middleName:
          type: string
          description: The middle name(s) of the User (e.g., "Jane" given the full
            name "Ms. Barbara Jane Jensen, III").
        honorificPrefix:
          type: string
          description: The honorific prefix(es) of the User, or title in most Western
            languages (e.g., "Ms." given the full name "Ms. Barbara Jane Jensen, III").
        honorificSuffix:
          type: string
          description: The honorific suffix(es) of the User, or suffix in most Western
            languages (e.g., "III" given the full name "Ms. Barbara Jane Jensen, III").
      description: The components of the user's name.
      example:
        formatted: Ms. Barbara J Jensen III
        familyName: Jensen
        givenName: Barbara
        middleName: Jane
        honorificPrefix: Ms.
        honorificSuffix: III

    Phone:
      type: object
      properties:
        value:
          type: string
          description: The value SHOULD be specified according to the format defined
            in RFC3966, e.g., 'tel:+1-201-555-0123'.
        type:
          type: string
          description: Often has typical values of "work", "home", "mobile", "fax",
            "pager", and "other" and MAY allow more types to be defined by the service
            client.
        extension:
          type: string
          description: Defines the extension of the phone number.
        primary:
          type: boolean
          description: Defines if this entry is to be used as the primary or default
            for the user.
          default: false
      description: Phone number for the user.
      example:
        value: 555-555-5555
        type: work
        extension: "2145"

    Photo:
      type: object
      properties:
        value:
          type: string
          description: URI pointing to user's image file.
        type:
          type: string
          description: Defines the following canonical values to represent popular
            photo sizes - "photo" and "thumbnail".
      description: A URI that is a uniform resource locator (as defined in Section
        1.1.3 of RFC3986) that points to a resource location representing the user's
        image. The resource MUST be a file (e.g., a GIF, JPEG, or PNG image file)
        rather than a web page containing an image.
      example:
        value: https://photos.example.com/profilephoto/72930000000Ccne/F
        type: thumbnail

    Prepaid:
      type: object
      properties:
        cardNumber:
          type: string
          description: Prepaid card number.
          example: "6759649826438453"
        cardSubType:
          type: string
          description: Merchant or brand specific information about the type of account.Issuer/group
            information.
          example: Merchant Brand
        securityCode:
          type: string
          description: Security code of prepaid card
          example: "345"
        promotionCode:
          type: string
          description: Promotion code for prepaid account activation.
        alias:
          type: string
          readOnly: true
          example: "8453"
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        balance:
          $ref: '#/components/schemas/PrepaidBalance'
        token:
          $ref: '#/components/schemas/ReferenceToken'
      description: Prepaid (a.k.a. gift) account information

    PrepaidBalance:
      required:
        - currencyCode
        - currentBalance
      type: object
      properties:
        currentBalance:
          type: number
          description: The current balance of prepaid card in lower denomination of
            the currency.
        beginBalance:
          type: number
          description: The balance of prepaid card before a transaction in lower denomination
            of the currency.
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'
        currencyType:
          $ref: '#/components/schemas/CurrencyPairType'
      description: Details of balance in the prepaid card.
      example:
        currentBalance: 1100
        beginBalance: 1000
        currencyCode: 840
        currencyType: BASE

    Question:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for a question
        value:
          type: string
          description: Question string
        answer:
          type: string
          description: Answer string
      description: Question and answer to validate a account profile.

    RequestedAuthAmount:
      title: Requested Auth Amount
      minimum: 0
      exclusiveMinimum: true
      type: number
      description: Requested auth amount for the given request type [auth] in lower
        denomination.
      format: double
      example: 500.00

    ReferenceToken:
      type: object
      properties:
        tokenId:
          type: string
          description: Actual token value
          example: 292bb6b886fc4446894f878b7e32bd5e
        tokenProvider:
          type: string
          description: Indicates what system is the originator of the token
          example: TRANS_ARMOR or NETWORK_TOKEN or THIRD_PARTY_NETWORK_TOKEN
        cryptogram:
          type: string
          description: 28 or 56 characters for Visa / Mastercard. 4 characters for
            Discover / Amex. Required for CIT. Not required for MIT.
          example: 3CguW5ecfTz...Yuhw=
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        tokenType:
          $ref: '#/components/schemas/ReferenceTokenType'
      description: Surrogate value used to represent a handle to an account without
        sharing PCI/PII data to look it up.

    SamsungPay:
      type: object
      properties:
        version:
          type: string
          example: EC_v1
        developerEmail:
          type: string
        data:
          type: string
          example: 3CguW5ecfTzO...03d
        signature:
          type: string
          example: MIAGCSqGSIb......AAAA==
        decryptAlias:
          type: string
          description: field of the public key certificate.
          example: oslo.com.xxx.Prod_mer
        dPanLast4:
          type: string
          example: "9876"
        bin:
          type: string
        eciIndicator:
          type: string
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        panType:
          type: string
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        header:
          type: object
          properties:
            ephemeralPublicKey:
              type: string
              example: MFkwEw...03d
            publicKeyHash:
              type: string
              example: +vbONw...IM=
        token:
          $ref: '#/components/schemas/ReferenceToken'
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'

    ThreeDSecure:
      type: object
      properties:
        transactionId:
          type: string
          description: Transaction id generated on the server
          example: 292bb6b886fc4446894f878b7e32bd5e
        transactionStatus:
          type: string
          description: Transactions status of 3DS server
          example: C
        transactionStatusReason:
          type: string
          description: Reason for the transaction status
        challengeResponse:
          type: string
          example: ewogIC
        challengeIndicator:
          type: string
          example: '01 = No preference 02 = No challenge requested 03 = Challenge
            requested: 3DS Requestor Preference 04 = Challenge requested: Mandate'
        dsTransactionId:
          type: string
          example: 292bb6b886fc4446894f878b7e32bd5e
        acsTransactionId:
          type: string
          example: 292bb6b886fc4446894f878b7e32bd5e
        serverTransactionId:
          type: string
          example: 292bb6b886fc4446894f878b7e32bd5e
        acsReferenceNumber:
          type: string
          example: 292bb6b886fc4446894f878b7e32bd5e
        acsSignedContent:
          type: string
          example: 292bb6b88....6fc4446894f878b7e32bd5e
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        challengeRequest:
          type: string
          example: ewogICAiYW.......MjJjMGVjIgp9
        acsUrl:
          type: string
          example: https://test.modirum.com/dstests/ACSEmu2
        iframeContent:
          type: string
          example: <iframe></iframe>
        termUrl:
          type: string
          example: https://mydomain/3dstest?transactionId=292bb6b886fc4446894f878b7e32bd5e
        isThreeDSMethodCompleted:
          type: boolean
          example: true
        isAuthenticationCompleted:
          type: boolean
          example: true
        cavv:
          type: string
          description: Card authenticaion verificaiton value
        threeDSVersion:
          type: string
        expiryDateTime:
          type: string
          description: 3DS challenge transaction expiry date time
          format: date-time
          readOnly: true
          example: 2020-01-01T16:06:05Z
        eci:
          type: string
          description: Electronic Commerce Indicator value
      description: Details of ThreeDSecure transaction used to process the challege
        flow

    User:
      required:
        - externalId
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for a customer profile registered with uCom.
          readOnly: true
          example: fdCustomerId
        externalId:
          type: string
          description: A String that is an identifier for the resource as defined
            by the provisioning client. While the server does not enforce uniqueness,
            it is assumed that the value's uniqueness is controlled by the client
            setting the value.
          example: 123abc456def890ghi098jkl765mno
        userName:
          type: string
          description: A service provider's unique identifier for the user, typically
            used by the user to directly authenticate to the service provider.
          example: bjensen@example.com
        name:
          $ref: '#/components/schemas/PersonName'
        displayName:
          type: string
          description: The name of the user, suitable for display to end-users.
          example: Babs Jensen
        nickName:
          type: string
          description: The casual way to address the user in real life, e.g., "Bob"
            or "Bobby" instead of "Robert".
          example: Babs
        nationality:
          type: string
          description: Nationality of the person or customer.
          example: US
        dateOfBirth:
          $ref: '#/components/schemas/MonDayYear'
        gender:
          $ref: '#/components/schemas/Gender'
        profileUrl:
          type: string
          description: A URI that is a uniform resource locator (as defined in Section
            1.1.3 of [RFC3986]) and that points to a location representing the user's
            online profile (e.g., a web page)
          example: https://login.example.com/bjensen
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Email'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        phoneNumbers:
          type: array
          items:
            $ref: '#/components/schemas/Phone'
        ims:
          type: array
          items:
            $ref: '#/components/schemas/IMS'
        photos:
          type: array
          items:
            $ref: '#/components/schemas/Photo'
        userType:
          type: string
          description: Used to identify the relationship between the organization
            and the user.
          example: Employee
        title:
          type: string
          description: The user's title, such as "Vice President".
          example: Tour Guide
        preferredLanguage:
          type: string
          description: Indicates the user's preferred written or spoken languages
            and is generally used for selecting a localized user interface.
          example: en-US
        locale:
          type: string
          description: Used to indicate the User's default location for purposes of
            localizing such items as currency, date time format, or numerical representations.
          example: en-US
        timezone:
          type: string
          description: The User's time zone
          example: America/Los_Angeles
        active:
          type: boolean
          description: A Boolean value indicating the user's administrative status.
            The definitive meaning of this attribute is determined by the service
            provider.
          example: true
        password:
          type: string
          description: This attribute is intended to be used as a means to set, replace,
            or compare (i.e., filter for equality) a password.
          example: some-hashed-value
        groups:
          type: array
          description: A list of groups to which the user belongs, either through
            direct membership, through nested groups, or dynamically calculated.
          items:
            $ref: '#/components/schemas/Group'
        identities:
          type: array
          items:
            $ref: '#/components/schemas/Identity'
      description: User resource as defined by the System for Cross-domain Identity
        Management (SCIM). For more info see http://www.simplecloud.info

    Supplement:
      type: object
      properties:
        supplementType:
          type: string
        supplementInfo:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/NVP'
      description: Supplement data

    VaultedAccount:
      type: object
      properties:
        fdAccountId:
          type: string
          description: Unique identifier for a customer account vaulted with uCom
        securityCode:
          type: string
          description: Card Verificatiion value.
        status:
          $ref: '#/components/schemas/AccountStatus'
        type:
          $ref: '#/components/schemas/AccountType'
      description: FD Account information
      example:
        fdAccountId: muid-3d4f2ac...c91014f2dc1

    Venmo:
      type: object
      properties:
        nonce:
          type: string
          description: Venmo generated nonce.
          example: ab12-124C-ab12-124C-ab12-124C
      description: Information about a Venmo account.

    VisaCheckout:
      type: object
      properties:
        callId:
          type: string
          description: Identifier corresponding to an account enrolled with Visa Checkout
            system.
          example: "1234732704291071701"
        credit:
          $ref: '#/components/schemas/Credit'
      description: Visa Checkout information

#-------------------------------------
# Common Models
#-------------------------------------
    DeviceInfo:
      required:
        - id
        - kind
      type: object
      properties:
        id:
          type: string
          description: Unique Id for the device. Value should not contain line feeds,
            carriage returns, tabs, leading or trailing spaces, or multiple spaces.
          example: 537edec8-d33e-4ee8-93a7-b9f61876950c
        kind:
          type: string
          description: Possible values are mobile, wearable, automobile, embedded,desktop,
            other.
          example: mobile
        details:
          title: deviceData
          minItems: 0
          uniqueItems: true
          type: array
          description: Device data information from multiple providers.
          items:
            type: object
            properties:
              provider:
                type: string
                description: Identifies the provider of the data and is often used
                  when decrypting data on the server.
                example: InAuth
              dataCapture:
                type: object
                properties:
                  rawData:
                    type: string
                    description: Device capture - raw data blob
                    example: aaaaaXREUVZGRlFY...aMV
                  dataEventId:
                    type: string
                    description: Event identifier used map state on the server.
                    example: BB8E4E92...Fz1E063113
                  captureTime:
                    type: string
                    description: Device data capture time in Internet Date/Time format
                      - yyyy-MM-dd'T'HH:mm:ss'Z'
                    format: date-time
                    example: 2016-04-16T16:06:05Z
                description: Device data captured as a bundle and transmitted as an
                  encrypted and/or specifically formated string.
              dataStatic:
                type: object
                properties:
                  os:
                    type: string
                    description: Device OS name
                    example: Android 5.1.1 Lollipop
                  osVersion:
                    type: string
                    description: Device OS version
                    example: 5.1.1 Lollipop
                  model:
                    type: string
                    description: Device model
                    example: XT1540
                  type:
                    type: string
                    description: Device type
                    example: Moto G
                description: Device static details
              dataDynamic:
                type: object
                properties:
                  latitude:
                    type: string
                    description: Device position - latitude at the time of the data
                      event
                    example: 13.0827 N
                  longitude:
                    type: string
                    description: Device position - longitude at the time of the data
                      event
                    example: 80.2707 E
                  ipAddress:
                    type: string
                    description: IP address
                    example: 172.27.37.221
                  captureTime:
                    type: string
                    description: Device data capture time in Internet Date/Time format
                      - yyyy-MM-dd'T'HH:mm:ss'Z'
                    format: date-time
                    example: 2016-04-16T16:06:05Z
                description: Device location details
              dataApplication:
                type: object
                properties:
                  version:
                    type: string
                    description: Mobile application version.
                    format: sting
                    example: 1.0.0
                  name:
                    type: string
                    description: Mobile application name.
                    format: sting
                    example: aplication-name
                  country:
                    type: string
                    description: Mobile application store country.
                    format: sting
                    example: US
                description: Mobile application specific data
            description: Collection of device data
        additionalInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
      description: Request origin device details
      example:
        id: 537edec8-d33e-4ee8-93a7-b9f61876950c
        kind: mobile
        details:
          - provider: InAuth
            dataCapture:
              rawData: aaaaaXREUVZGRlFY...aMV
              dataEventId: BB8E4E92...Fz1E063113
              captureTime: 2016-04-16T16:06:05Z
            dataStatic:
              os: Android 5.1.1 Lollipop
              osVersion: 5.1.1 Lollipop
              model: XYX-1
              Type: Moto G
            dataDynamic:
              latitude: 13.0827 N
              longitude: 80.2707 E
              ipAddress: 172.27.37.221
              captureTime: 2016-04-16T16:06:05Z
        additionalInfo:
          - name: some-key
            value: some-value

    Error:
      type: object
      properties:
        code:
          type: string
          description: Uniquely identifies an error condition. Client applications
            need to read and handle errors based on this.
        message:
          type: string
          description: A generic description of the error condition.
        category:
          type: string
          description: The resource associated with the error condition.
        developerInfo:
          type: object
          properties:
            developerMessage:
              type: string
              description: An elaborative description of the error description.
            moreInfo:
              type: string
              description: Link to the error in Developer page.
            fieldError:
              type: array
              description: Detailed information about message format errors.
              items:
                type: object
                properties:
                  field:
                    type: string
                    description: The property or attribute associated with the error
                  message:
                    type: string
                    description: Information specific to a property or attribute.
          description: Information that needs to be understood by the client developers
            and should not be interpreted for application processing.
        hostExtraInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
        threeDSecureInfo:
          $ref: '#/components/schemas/ThreeDSecure'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
      description: Model for error messaging
      example:
        code: "40000"
        message: Example Error
        category: example
        developerInfo:
          developerMessage: Invalid Message format in request payload
          moreInfo: https://www.example.com/errors/40000
          fieldError:
            - field: example id
              message: exampleId is mandatory

#-------------------------------------
# ENUM Models
#-------------------------------------
    AccountStatus:
      type: string
      description: Indicates the status of an account.
      enum:
        - ACTIVE
        - INACTIVE
        - ISSUER_TERMINATED
        - WALLET_TERMINATED
        - PENDING
        - TERMINATED

    AccountType:
      type: string
      description: Type of Account vaulted
      enum:
        - CREDIT
        - PREPAID
        - ACH
        - LOYALTY
        - PAYPAL
        - MASTERPASS
        - VENMO
        - THREEDSECURE
        - VAULTED_ACCOUNT
        - FLEET
        - APPLE_PAY
        - SAMSUNG_PAY
        - GOOGLE_PAY
        - MONEYNETWORK
        - EBT

    AchAccountType:
      type: string
      description: ACH account type
      enum:
        - CHECKING
        - SAVINGS

    AchCardType:
      type: string
      description: Indicates the type of ACH card association
      enum:
        - CONNECTPAY

    AchEnrollmentStatus:
      type: string
      description: Indicates ACH enrollment status
      enum:
        - ACTIVE
        - PENDING
        - PENDING_LINKED_ACCOUNT

    AchEnrollmentSubStatus:
      type: string
      description: Indicates ACH enrollment pending status
      enum:
        - PENDING_BANK_VALIDATION
        - PENDING_PIN_VALIDATION
        - PENDING_EMAIL_VALIDATION
        - PENDING_PHONE_VALIDATION
        - PENDING_SOFT_BLOCK
        - PENDING_HARD_BLOCK

    BalanceUnitTypes:
      type: string
      description: Indicator to determine how to display balances
      enum:
        - CENTS
        - MILES
        - POINTS
        - STARS
        - LITRES

    CreditCardType:
      type: string
      description: Indicates the type of credit account association
      enum:
        - AMEX
        - DISCOVER
        - MASTERCARD
        - PLCC
        - VISA
        - OTHER

    CurrencyPairType:
      type: string
      description: Describes the type of currency where BASE represents the currency
        from Host and TRANSACTION represents the one requested.
      enum:
        - BASE
        - TRANSACTION

    FleetCardType:
      type: string
      description: Indicates the type of fleet account association
      enum:
        - WEX

    Gender:
      type: string
      description: Gender of the person.
      enum:
        - MALE
        - FEMALE
        - UNDECLARED

    LoyaltyAccountStatus:
      type: string
      description: Indicator of the account state as indicated by the loyalty issuer.
      enum:
        - ENROLLED
        - ANONYMOUS
        - PARTIAL
        - PENDING_DATA
        - PENDING_VERIFICATION
        - INACTIVE
        - BLOCKED

    LoyaltyType:
      type: string
      description: Identifier to indicate type of Loyalty program being registered.
      enum:
        - LOCAL
        - NATIONAL

    ProgramStatus:
      type: string
      description: Indicates if the given loyalty program is still active or not.
      enum:
        - ENABLED
        - DISABLED
        - CONTRACTED_ONLY

    ReferenceTokenType:
      type: string
      description: Indicates the purpose of token.
      enum:
        - FORMAT_PRESERVING_MULTI_USE
        - FORMAT_PRESERVING_SINGLE_USE
        - CLAIM_CHECK_NONCE
        - RANDOM_MULTI_USE
        - RANDOM_SINGLE_USE
        - CLAIM_CHECK_NONCE_WITH_PINCAPTURE

#-------------------------------------
# Responses
#-------------------------------------
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Conflict:
      description: Conflict - The requested operation conflicts with the current state
        of the identified resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Created:
      description: Resource created
      headers:
        Location:
          description: Location of newly created resource.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Account'

    NoContent:
      description: The request succeeded but there’s really nothing to show.
      content: {}

    NotFound:
      description: Not Found - The requested resource doesn't exist.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    OK:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Account'

    PartiallyCreated:
      description: Partially Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Account'

    ServerError:
      description: An unexpected server error occured.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Unauthorized:
      description: Unauthorized
      content: {}

#-------------------------------------
# Parameter Models
#-------------------------------------
  parameters:
    AcceptLanguageParam:
      name: Accept-Language
      in: header
      description: The Accept-Language header contains information about the language
        preference of a user. This HTTP header is useful to multilingual sites for
        deciding the best language to serve to the client. i.e en-US,fr-CA
      schema:
        type: string

    ApiKeyParam:
      name: Api-Key
      in: header
      description: An API key is a string value passed by a client app to the API
        proxies. The key uniquely identifies the client app.
      required: true
      schema:
        type: string

    AuthorizationParam:
      name: Authorization
      in: header
      description: Authorization information for the request. Format- `HMAC {hmacToken}`
      required: true
      schema:
        type: string

    AccountTypeParam:
      name: account_type
      in: query
      description: Used to filter accounts based on Account type
      schema:
        type: string

    ClientTokenParam:
      name: Client-Token
      in: header
      description: Used to pass the original client OAuth token information given
        in a client-credentials flow.  This field is only used when the server is
        making the request and needs to link the transaction to a specific client.  Format-
        `Bearer {access_token}`
      schema:
        type: string

    ClientRequestIdParam:
      name: Client-Request-Id
      in: header
      description: Contains a unique ID generated by the client that can be used for
        enforcing idempotency on POST actions. POSTs are inherently non-idempotent
        and submitting the exact same request multiple times would create duplicate
        resources. Note:- Omitting this header increases the risk of duplicate transactions,
        which for payments could cost the client issues like double-billing.
      required: true
      schema:
        type: string

    FdCustomerIdParam:
      name: fdCustomerId
      in: path
      description: Unique identifier for a customer profile registered with uCom
      required: true
      schema:
        type: string

    FdAccountIdParam:
      name: fdAccountId
      in: path
      description: Unique identifier for a customer account vaulted with uCom
      required: true
      schema:
        type: string

    SubMerchantIdParam:
      name: Sub-Merchant-Id
      in: header
      description: Sub Merchant Id contains information about the merchant identifier
      schema:
        type: string

    NonceTokenIdParam:
      name: nonceTokenId
      in: path
      description: Unique identifier for a customer account vaulted with uCom using
        nonce.
      required: true
      schema:
        type: string

    OperationTypeParam:
      name: operation_type
      in: query
      description: Used to specify operation type
      schema:
        type: string

    TimestampParam:
      name: Timestamp
      in: header
      description: Epoch timestamp in the request initiating system
      required: true
      schema:
        type: string

    DeviceIdParam:
      name: deviceId
      in: query
      description: Unique identifier for a device
      schema:
        type: string

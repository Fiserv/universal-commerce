#-------------------------------------
# Document Change Log
# 0.2.3
#     - No Changes
# 0.2.2
#     - No Changes
# 0.2.1
#     - Added Merchant id as header field
# 0.2.0
#     - Added 'OTHER' CreditCardType
#     - Added fields in ThreeDSecure object
# 0.1.9
#     - No change.
# 0.1.8
#     - Added 3ds web support
# 0.1.7
#     - Added 3ds challenge transaction expiry date time in ThreeDSecure
# 0.1.6
#     - Added Accept-Language header field
# 0.1.5
#     - Initial version
#     - acsSignedContent and CardType in threeDSecureInfo object
#-------------------------------------

openapi: 3.0.1
info:
  title: uCom Discovery Services
  description: Services related to publishing details about the marketplace
  version: 0.2.3
servers:
- url: https://int.api.firstdata.com/ucom
tags:
- name: marketplace
  description: Operations for getting details around mapping of retailer/publishing partner details
paths:
  /v1/marketplace:
    get:
      x-group-name: Discovery Services
      x-proxy-name: Get Partner Mapping Details
      tags:
      - marketplace
      summary: Retrieves partner details mapping
      description: Retrieves the mapping of retailer or publishing partner details based on partner type
      parameters:
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/AuthorizationParam'
        - $ref: '#/components/parameters/ClientTokenParam'
        - $ref: '#/components/parameters/PartnerType'
        - $ref: '#/components/parameters/AcceptLanguageParam'
        - $ref: '#/components/parameters/SubMerchantIdParam'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/MarketPlace'
              examples:
                Minimal:
                  summary: STAC response with vaulted account
                  $ref: '#/components/examples/retailerExampleResponse'
        
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

components:
  schemas:
    #-------------------------------------
    # Resource Models
    #-------------------------------------
    CreditType:
      properties:
        cardType:
          type: string
        cardSubType:
          type: array
          items:
            type: string

    Link:
      description: Model to communicate linked resources.
      type: object
      required:
        - href
        - rel
      properties:
        href:
          description: URL to linked resource.
          type: string
          format: uri
        rel:
          description: Defines the type of link relationship to current resource.
          type: string
          enum:
            - current.page
            - previous.page
            - next.page
            - self
          example:
            "self"
        method:
          description: Defines the HTTP method for the given href.
          type: string
          default: "GET"
          example:
            "GET"
        id:
          description: Identifier to the resource.
          type: string
          example:
            "415e5cf6bfdb11e8a355529269fb1459"

    MarketPlace:
      description: Provides details about marketplace partner configuration
      type: object
      properties:
        marketplaceName:
          description: Market place name
          type: string
          readOnly: true
        partners:
          type: array
          items:
            $ref: '#/components/schemas/Partner'

    Partner:
      description: Details about the partner
      type: object
      properties:
        partnerId:
          description: Partner id configured at uCom
          type: string
          readOnly: true
        partnerName:
          description: Partner name configured at uCom
          type: string
          readOnly: true
        supportedServices:
          description: List of services supported by the partner
          type: array
          readOnly: true
          items:
            type: string
        supportedFundingSource:
            $ref: '#/components/schemas/SupportedFundingSource'
        additionalInfo:
            $ref: '#/components/schemas/NVP'

    SupportedFundingSource:
      description: Funding sources supported by the partner
      type: object
      properties:
          creditTypes:
            type: array
            readOnly: true
            items:
              $ref: '#/components/schemas/CreditType'
          prepaidTypes:
            type: array
            readOnly: true
            items:
              type: string
          loyaltyTypes:
            type: array
            readOnly: true
            items:
              type: string
          googlePayEnabled:
            type: boolean
            readOnly: true
          applePayEnabled:
            type: boolean
            readOnly: true
          samsungPayEnabled:
            type: boolean
            readOnly: true
          payPalEnabled:
            type: boolean
            readOnly: true
          venmoEnabled:
            type: boolean
            readOnly: true
          visaCheckoutEnabled:
            type: boolean
            readOnly: true
          masterPassEnabled:
            type: boolean
            readOnly: true
          achEnabled:
            type: boolean
            readOnly: true
          amazonPayEnabled:
            type: boolean
            readOnly: true
          cashPaymentEnabled:
            type: boolean
            readOnly: true

    ThreeDSecure:
      description: Details of ThreeDSecure transaction used to process the challenge flow
      type: object
      properties:
        transactionId:
          description: Transaction id generated on the server
          type: string
          example: "292bb6b886fc4446894f878b7e32bd5e"
        transactionStatus:
          type: string
          description: Transactions status of 3DS server
          example: "C"
        transactionStatusReason:
          type: string
          description: Reason for the transaction status
        challengeResponse:
          type: string
          example: "ewogIC"
        challengeIndicator:
          type: string
          example: "01 = No preference
                    02 = No challenge requested
                    03 = Challenge requested: 3DS Requestor Preference
                    04 = Challenge requested: Mandate"
        dsTransactionId:
          type: string
          example: "292bb6b886fc4446894f878b7e32bd5e"
        acsTransactionId:
          type: string
          example: "292bb6b886fc4446894f878b7e32bd5e"
        serverTransactionId:
          type: string
          example: "292bb6b886fc4446894f878b7e32bd5e"
        acsReferenceNumber:
          type: string
          example: "292bb6b886fc4446894f878b7e32bd5e"
        acsSignedContent:
          type: string
          example: "292bb6b88....6fc4446894f878b7e32bd5e"
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        challengeRequest:
          type: string
          example: "ewogICAiYW.......MjJjMGVjIgp9"
        acsUrl:
          type: string
          example: "https://test.modirum.com/dstests/ACSEmu2"
        iframeContent:
          type: string
          example: "<iframe></iframe>"
        termUrl:
          type: string
          example: "https://mydomain/3dstest?transactionId=292bb6b886fc4446894f878b7e32bd5e"
        isThreeDSMethodCompleted:
          type: boolean
          example: true
        isAuthenticationCompleted:
          type: boolean
          example: true
        cavv:
          type: string
          description: Card authentication verification value
        threeDSVersion:
          type: string
        expiryDateTime:
          description: 3DS challenge transaction expiry date time.
          type: string
          readOnly: true
          format: date-time
          example: "2020-01-01T16:06:05Z"
        eci:
          type: string
          description: Electronic Commerce Indicator value

  #-------------------------------------
  # Common Models
  #-------------------------------------
    DeviceInfo:
      description: Request origin device details
      type: object
      required:
        - id
        - kind
      properties:
        id:
          description: Unique Id for the device. Value should not contain line feeds, carriage returns, tabs, leading or trailing spaces, or multiple spaces.
          type: string
          example: "537edec8-d33e-4ee8-93a7-b9f61876950c"
        kind:
          description: Possible values are mobile, wearable, automobile, embedded,desktop, other.
          type: string
          example: "mobile"
        details:
          title: deviceData
          description: Device data information from multiple providers.
          type: array
          minItems: 0
          uniqueItems: true
          items:
            description: Collection of device data
            type: object
            properties:
              provider:
                description: Identifies the provider of the data and is often used when decrypting data on the server.
                type: string
                example: "InAuth"
              dataCapture:
                description: Device data captured as a bundle and transmitted as an encrypted and/or specifically formatted string.
                type: object
                properties:
                  rawData:
                    description: Device capture - raw data blob
                    type: string
                    example: "aaaaaXREUVZGRlFY...aMV"
                  dataEventId:
                    description: Event identifier used map state on the server.
                    type: string
                    example: "BB8E4E92...Fz1E063113"
                  captureTime:
                    description: Device data capture time in Internet Date/Time format - YYYY-MM-DDThh:mm:ssZ'
                    type: string
                    format: date-time
                    example: "2016-04-16T16:06:05Z"
              dataStatic:
                description: Device static details
                type: object
                properties:
                  os:
                    description: Device OS name
                    type: string
                    example: "Android 5.1.1 Lollipop"
                  osVersion:
                    description: Device OS version
                    type: string
                    example: "5.1.1 Lollipop"
                  model:
                    description: Device model
                    type: string
                    example: "XT1540"
                  type:
                    description: Device type
                    type: string
                    example: "Moto G"
              dataDynamic:
                description: Device location details
                type: object
                properties:
                  latitude:
                    description: Device position - latitude at the time of the data event
                    type: string
                    example: "13.0827 N"
                  longitude:
                    description: Device position - longitude at the time of the data event
                    type: string
                    example: "80.2707 E"
                  ipAddress:
                    description: IP address
                    type: string
                    example: "172.27.37.221"
                  captureTime:
                    description: Device data capture time in Internet Date/Time format - YYYY-MM-DDThh:mm:ssZ'
                    type: string
                    format: date-time
                    example: "2016-04-16T16:06:05Z"
              dataApplication:
                description: Mobile application specific data
                type: object
                properties:
                  version:
                    description: Mobile application version.
                    type: string
                    format: sting
                    example: "1.0.0"
                  name:
                    description: Mobile application name.
                    type: string
                    format: sting
                    example: "application-name"
                  country:
                    description: Mobile application store country.
                    type: string
                    format: sting
                    example: "US"
        additionalInfo:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
          uniqueItems: true
      example:
        {
        id: "537edec8-d33e-4ee8-93a7-b9f61876950c",
        kind: "mobile",
        details: [{
          provider: "InAuth",
          dataCapture: {
            rawData: "aaaaaXREUVZGRlFY...aMV",
            dataEventId: "BB8E4E92...Fz1E063113",
            captureTime: "2016-04-16T16:06:05Z"
          },
          dataStatic: {
             os: "Android 5.1.1 Lollipop",
             osVersion: "5.1.1 Lollipop",
             model: "XYX-1",
             Type: "Moto G"
            },
          dataDynamic: {
            latitude: "13.0827 N",
            longitude: "80.2707 E",
            ipAddress: "172.27.37.221",
            captureTime: "2016-04-16T16:06:05Z"
            }
        }],
        additionalInfo: [{
           name: "some-key",
           value: "some-value"
        }]
      }

    NVP:
      title: Name and Value pair.
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        valueAsList:
          type: array
          minItems: 0
          items:
            type: string

    Error:
      description: Model for error messaging
      type: object
      properties:
        code:
          type: string
          description: Uniquely identifies an error condition. Client applications need to read and handle errors based on this.
        message:
          type: string
          description: A generic description of the error condition.
        category:
          type: string
          description: The resource associated with the error condition.
        developerInfo:
          type: object
          description: Information that needs to be understood by the client developers and should not be interpreted for application processing.
          properties:
            developerMessage:
              type: string
              description: An elaborative description of the error description.
            moreInfo:
              type: string
              description: Link to the error in Developer page.
            fieldError:
              description: Detailed information about message format errors.
              type: array
              items:
                properties:
                  field:
                    description: The property or attribute associated with the error
                    type: string
                  message:
                    description: Information specific to a property or attribute.
                    type: string
        hostExtraInfo:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
          uniqueItems: true
        threeDSecureInfo:
          $ref: '#/components/schemas/ThreeDSecure'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
      example:
        code: "40000"
        message: "Example Error"
        category: "example"
        developerInfo:
          developerMessage: "Invalid Message format in request payload"
          moreInfo: "https://www.example.com/errors/40000"
          fieldError:
            - field: "example id"
              message: "exampleId is mandatory"

  #-------------------------------------
  # ENUM Models
  #-------------------------------------
    CreditCardType:
      title: Credit Card Type
      description: Indicates the type of credit account association
      type: string
      enum:
        - AMEX
        - DISCOVER
        - MASTERCARD
        - PLCC
        - VISA
        - OTHER

  #-------------------------------------
  # Responses
  #-------------------------------------
  responses:
    OK:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MarketPlace'

    NoContent:
      description: The request succeeded but there’s really nothing to show.

    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Unauthorized:
      description: Unauthorized

    NotFound:
      description: Not Found - The requested resource doesn't exist.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Conflict:
      description: Conflict - The requested operation conflicts with the current state of the identified resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    ServerError:
      description: An unexpected server error occurred.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  #-------------------------------------
  # Parameter Models
  #-------------------------------------
  parameters:
    AcceptLanguageParam:
      name: Accept-Language
      description: The Accept-Language header contains information about the language preference of a user. This HTTP header is useful to multilingual sites for deciding the best language to serve to the client. i.e en-US,fr-CA
      in: header
      schema:
        type: string

    ApiKeyParam:
      name: Api-Key
      description: An API key is a string value passed by a client app to the API proxies. The key uniquely identifies the client app.
      in: header
      required: true
      schema:
        type: string

    AuthorizationParam:
      name: Authorization
      description: Authorization information for the request. Format- `HMAC {hmacToken}`
      in: header
      required: true
      schema:
        type: string

    SubMerchantIdParam:
      name: Sub-Merchant-Id
      description: Sub Merchant Id contains information about the merchant identifier
      in: header
      schema:
        type: string

    ClientTokenParam:
      name: Client-Token
      description: Used to pass the original client OAuth token information given in a client-credentials flow.  This field is only used when the server is making the request and needs to link the transaction to a specific client.  Format- `Bearer {access_token}`
      in: header
      schema:
        type: string

    ClientRequestIdParam:
      name: Client-Request-Id
      description: Contains a unique ID generated by the client that can be used for enforcing idempotency on POST actions. POSTs are inherently non-idempotent and submitting the exact same request multiple times would create duplicate resources.
        Note:- Omitting this header increases the risk of duplicate transactions, which for payments could cost the client issues like double-billing.
      in: header
      required: true
      schema:
        type: string

    TimestampParam:
      name: Timestamp
      description: Epoch timestamp in the request initiating system
      in: header
      required: true
      schema:
        type: string

    PartnerType:
      name: partnerType
      description:  Type of partner to query the mapping partner details, e.g. PUBLISHER/RETAILER
      in: query
      required: true
      schema:
        type: string
  examples:
    retailerExampleResponse:
      value:
        marketplaceName: Publisher Enabled Market Place
        partners:
          - partnerId: RETAILER_WALLET
            partnerName: ' RETAILER PARTNER NAME'
            supportedServices:
              - PETRO
            supportedFundingSource:
              creditTypes:
                - cardType: VISA
                - cardType: MASTERCARD
                - cardType: DISCOVER
                - cardType: AMEX
                - cardType: PLCC
                  cardSubType:
                    - NA
              googlePayEnabled: false
              applePayEnabled: true
              samsungPayEnabled: false
              amazonPayEnabled: false
              payPalEnabled: false
              venmoEnabled: false
              visaCheckoutEnabled: false
              masterPassEnabled: false
              achEnabled: false
        

#-------------------------------------
# Document Change Log
# 0.2.3
#     - Added tokens reference in the Credit
# 0.2.2
#     - No Changes
# 0.2.1
#     - Added Walmart pay as fundingSource
#     - Added SEC code for ACH
#     - Added EBT funding source
#     - Added Merchant id as header field
#     - Added asset provider field in the ACH
# 0.2.0
#     - Added 'OTHER' CreditCardType
#     - Added fields in ThreeDSecure object
#     - Added Price tier in POSItem
#     - Added PAN type and BIN
#     - Added Expiry Date to InApp entities
#     - Added Developer Email in ApplePay/GooglePay/SamsungPay objects
#     - Added ECIIndicator in ApplePay/GooglePay/SamsungPay objects
#     - Added local payment methods for Ideal and Bancontact
# 0.1.9
#     - OfferRealizationType enum - Add TRANSACTION_LEVEL
#     - Updated Reward transactionLevel to add priceAdjustments
#     - Updated PriceAdjustment to add maxQuantity
#     - Added OfferStatus in the PriceAdjustments
#     - Added washcodes under POSItem
# 0.1.8
#     - Added New API for STAC creation
#     - Added 3ds web support
#     - Added webhook notification url
#     - Added account type for ACH
#     - Added percentage currency type
#-------------------------------------

openapi: 3.0.1
info:
  title: uCom Stac Services
  description: Use these services for creating STAC based on funding source, loyalty and offers information.
  version: 0.2.3
servers:
- url: https://int.api.firstdata.com/ucom
tags:
- name: stac
paths:
  /v1/stac:
    post:
      x-group-name: Stac Services
      x-proxy-name: Create QR code
      tags:
      - stac
      summary: Create QR code based on funding source.
      description: Must include a funding source.
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/ClientRequestIdParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StacRequest'
            examples:
              Vaulted Account: {summary: Request with vaulted account, $ref: '#/components/examples/VaultedAccountSTACRequest'}
        required: true
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/responses/StacCreated'
              examples:
                Vaulted Account: {summary: STAC response with vaulted account, $ref: '#/components/examples/VaultedAccountStacCreatedSuccessResponse'}
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        409:
          $ref: '#/components/responses/Conflict'
        500:
          $ref: '#/components/responses/ServerError'

components:
  schemas:
    #-------------------------------------
    # Operational Models
    #-------------------------------------
    StacRequest:
      type: object
      properties:
        fdCustomerId:
          $ref: '#/components/schemas/FdCustomerId'
        stac:
          $ref: '#/components/schemas/Stac'
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'

    #-------------------------------------
    # Resource Models
    #-------------------------------------
    ACH:
      type: object
      properties:
        accountNumber:
          type: string
          description: Unique number identifying the ACH account provided by Financial institution.
          example: "92658250156"
        routingNumber:
          type: string
          description: Number to identify the financial institution
          example: "999999999"
        secCode:
          type: string
          description: SEC Code is optional data, It is specifically required for ACH account which is ruled by NACHA compliance.
        cardNumber:
          type: string
          description: ACH Card number, can only be sent when vaulting an account.  This field will NOT be present in responses.
          example: "9111111111111111"
        cardType:
          $ref: '#/components/schemas/AchCardType'
        securityCode:
          type: string
          description: Code to validate the ACH account, like micro deposit or security code.
          example: "278356"
        alias:
          type: string
          description: Last four values of the cardNumber
          readOnly: true
          example: "1111"
        enrollmentStatus:
          $ref: '#/components/schemas/AchEnrollmentStatus'
        enrollmentSubStatuses:
          type: array
          items:
            $ref: '#/components/schemas/AchEnrollmentSubStatus'
        accountType:
          $ref: '#/components/schemas/AchAccountType'
        bankName:
          type: string
          description: Name of the bank associated with the ACH account
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        assetProvider:
          $ref: '#/components/schemas/AssetProvider'
      description: Information about an ACH account

    Address:
      type: object
      properties:
        type:
          type: string
          description: Canonical type values of "work", "home", "billing" and "other".
        streetAddress:
          type: string
          description: The full street address component, which may include house number, street name, P.O. box, and multi-line extended street address information.
        locality:
          type: string
          description: The city or locality component.
        region:
          type: string
          description: The state or region component.
        postalCode:
          type: string
          description: The zip code or postal code component.
        country:
          type: string
          description: The country name component.  When specified, the value MUST be in ISO 3166-1 "alpha-2" code format; e.g., the United States and Sweden are "US" and "SE", respectively.
        formatted:
          type: string
          description: The full mailing address, formatted for display or use with a mailing label.
        primary:
          type: boolean
          description: Indicates if this is the default address for the associated resource. It only has meaning when used in a set or array of addresses.
      description: A physical mailing address for this user.
      example:
        type: work
        streetAddress: 100 Universal City Plaza
        locality: Hollywood
        region: CA
        postalCode: "91608"
        country: US
        formatted: |-
          100 Universal City Plaza
          Hollywood, CA 91608 US
        primary: true

    AndroidPay:
      type: object
      properties:
        data:
          type: string
          example: 3CguW5ecfTzO...03d
        signature:
          type: string
          example: MIAGCSqGSIb......AAAA==
        decryptAlias:
          type: string
          description: field of the public key certificate.
          example: oslo.com.xxx.Prod_mer
        dPanLast4:
          type: string
          example: "9876"
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        header:
          type: object
          properties:
            ephemeralPublicKey:
              type: string
              example: MFkwEw...03d
            publicKeyHash:
              type: string
              example: +vbONw...IM=
        token:
          $ref: '#/components/schemas/ReferenceToken'
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'

    AmazonPay:
      type: object
      properties:
        token:
          type: string
          example: 292bb6b886fc4446894f878b7e32bd5e
        chargeId:
          type: string
          example: 73883992djj39939djj929992jj08838
        chargeReferenceId:
          type: string
          example: 8jdw838dhhskk9299299299ueuuue838
        credit:
          $ref: '#/components/schemas/Credit'

    ApplePay:
      type: object
      properties:
        version:
          type: string
          example: EC_v1
        developerEmail:
          type: string
        signature:
          type: string
          example: MIAGCSqGSIb......AAAA==
        decryptAlias:
          type: string
          description: field of the public key certificate.
          example: oslo.com.xxx.Prod_mer
        data:
          type: string
          example: 3CguW5ecfTz...Yuhw=
        applicationData:
          type: string
          example: VEVTVA==
        dPanLast4:
          type: string
          example: "9876"
        bin:
          type: string
        eciIndicator:
          type: string
        xid:
          type: string
        cavv:
          type: string
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        panType:
          type: string
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        header:
          type: object
          properties:
            applicationDataHash:
              type: string
            ephemeralPublicKey:
              type: string
              example: MFkwEwYHKoZIzj0CIKoZIz.....NBQQ==
            publicKeyHash:
              type: string
              example: +vbONwRlVqJX0........
            transactionId:
              type: string
              example: 3827c5a02638.....34d50
        token:
          $ref: '#/components/schemas/ReferenceToken'
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'

    ApprovedAmount:
      title: Approved Amount
      minimum: 0
      exclusiveMinimum: true
      type: number
      description: Amount authorized according to the request type [auth, capture, refund, etc] in lower denomination.  The value is read-only on payment requests.  For a void, the value is required.
      format: double
      example: 500.00

    AssetProvider:
      type: object
      properties:
        providerName:
          type: string
          example: coinbase

    Bancontact:
      type: object
      properties:
        returnUrl:
          type: string
        deepLink:
          type: string
        alias:
          type: string
          example: "9876"
        cardType:
          $ref: '#/components/schemas/CreditCardType'

    Credit:
      type: object
      properties:
        cardNumber:
          type: string
          description: Primary account number, can only be sent when vaulting an account.  This field will NOT be present in responses.
          example: "4111111111111111"
        bin:
          type: string
        nameOnCard:
          type: string
          description: Name as printed on physical card or on virtual account
          example: John Smith
        alias:
          type: string
          description: Last four values of the cardNumber
          readOnly: true
          example: "1111"
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        cardSubType:
          type: string
          description: Merchant or brand specific information about the type of account
          example: ABCD
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        securityCode:
          type: string
          example: "444"
        sequenceNumber:
          type: string
          description: Applicable only for private-label accounts
          example: "01"
        token:
          $ref: '#/components/schemas/ReferenceToken'
        tokens:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/ReferenceToken'
      description: Information on a credit account

    EBT:
      type: object
      properties:
        cardNumber:
          type: string
          description: Primary account number, can only be sent when vaulting an account.  This field will NOT be present in responses.
        nameOnCard:
          type: string
          description: Name as printed on physical card or on virtual account
        alias:
          type: string
          description: Last four values of the cardNumber
          readOnly: true
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        bin:
          type: string
          description: BIN of EBT card
          readOnly: true
        pin:
          type: string
          description: PIN for EBT card
        pinCaptureId:
          type: string
          description: Session id used on client side SDK to capture the card pin
        transactionId:
          type: string
          description: The unique transaction ID
        balance:
          $ref: '#/components/schemas/EBTBalance'
        metadata:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
        token:
          $ref: '#/components/schemas/ReferenceToken'
      description: Electronic Benefits Transfer card information

    EBTBalance:
      type: object
      properties:
        cashBalance:
          type: number
        cashCurrencyCode:
          $ref: '#/components/schemas/ISO-4217'
        snapBalance:
          type: number
        snapCurrencyCode:
          $ref: '#/components/schemas/ISO-4217'

    Email:
      type: object
      properties:
        type:
          type: string
          description: The "type" sub-attribute is used to provide a classification meaningful to the (human) user.  The user interface should encourage the use of basic values of "work", "home", and "other" and MAY allow additional type values to be used at the discretion of the service client.
        value:
          type: string
          description: The value SHOULD be specified according to RFC5321.
        primary:
          type: boolean
          description: Defines if this entry is to be used as the primary or default for the user.
          default: false
      description: Email address for the user.
      example:
        value: bjensen@example.com
        type: work
        primary: true

    ExpiryDate:
      type: object
      properties:
        month:
          maxLength: 2
          minLength: 2
          pattern: '[0-9]{2,2}'
          type: string
          description: Month format 'MM'
          example: "09"
        year:
          maxLength: 2
          minLength: 2
          pattern: '[0-9]{2,2}'
          type: string
          description: Year format 'YY'
          example: "20"
        singleValue:
          maxLength: 6
          minLength: 4
          type: string
          description: Month and year together, 'MMYY' or 'MMYYYY'.  If the latter format, the string will be parsed and validated per the given format.  Any other format will be rejected.
      description: Contains account expiration data and needs to either send the values in individual fields OR as a singleValue.

    FdCustomerId:
      title: FD Customer ID
      type: string
      description: FD customer identifier tied to the vaulted accounts.
      example: cuid-0987613457398475

    Fleet:
      type: object
      properties:
        cardNumber:
          type: string
          description: Primary account number, can only be sent when vaulting an account.  This field will NOT be present in responses.
        nameOnCard:
          type: string
          description: Name as printed on physical card or on virtual account
        alias:
          type: string
          description: Card alias
          readOnly: true
        cardType:
          $ref: '#/components/schemas/FleetCardType'
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        securityCode:
          type: string
        sequenceNumber:
          type: string
          description: Sequence number of the card.
        token:
          $ref: '#/components/schemas/ReferenceToken'
      description: Information on a Fleet account

    FleetData:
      type: object
      properties:
        odometer:
          maxLength: 8
          type: string
          description: Identifies the vehicle’s odometer reading keyed in by the customer or clerk.
        vehicleNumber:
          maxLength: 10
          type: string
          description: Identifies the Vehicle Number.
        jobNumber:
          maxLength: 10
          type: string
          description: Identifies the Job Number.
        driverIdNumber:
          maxLength: 10
          type: string
          description: Identifies the unencrypted Driver Number or Identification Number.
        fleetEmployeeNumber:
          maxLength: 10
          type: string
          description: Identifies the Fleet Employee Number.
        licenseNumber:
          maxLength: 10
          type: string
          description: Identifies the License
        jobId:
          maxLength: 12
          type: string
          description: Identifies the Job ID.
        departmentNumber:
          maxLength: 12
          type: string
          description: Identifies the Department
        customerData:
          maxLength: 12
          type: string
          description: Identifies the Customer Data.
        userId:
          maxLength: 12
          type: string
          description: Identifies the User ID.
        vehicleId:
          maxLength: 8
          type: string
          description: Identifies the Vehicle ID#.
        fleetTag:
          type: array
          items:
            $ref: '#/components/schemas/FleetTagType'
      description: The Fleet Data Segment for all fleet card transaction requests.

    FundingSource:
      type: object
      properties:
        saveToVault:
          type: boolean
          description: Flag to indicate if the provided payment method should be vaulted to a secure repository for future use for the given customer.
          example: false
          default: false
        type:
          $ref: '#/components/schemas/FundingSourceType'
        vaultedAccount:
          $ref: '#/components/schemas/VaultedAccount'
        credit:
          $ref: '#/components/schemas/Credit'
        prepaid:
          $ref: '#/components/schemas/Prepaid'
        fleet:
          $ref: '#/components/schemas/Fleet'
        applePay:
          $ref: '#/components/schemas/ApplePay'
        androidPay:
          $ref: '#/components/schemas/AndroidPay'
        samsungPay:
          $ref: '#/components/schemas/SamsungPay'
        paypal:
          $ref: '#/components/schemas/Paypal'
        token:
          $ref: '#/components/schemas/ReferenceToken'
        visaCheckout:
          $ref: '#/components/schemas/VisaCheckout'
        googlePay:
          $ref: '#/components/schemas/GooglePay'
        masterpass:
          $ref: '#/components/schemas/MasterPass'
        ach:
          $ref: '#/components/schemas/ACH'
        venmo:
          $ref: '#/components/schemas/Venmo'
        vipps:
          $ref: '#/components/schemas/Vipps'
        amazonPay:
          $ref: '#/components/schemas/AmazonPay'
        ideal:
          $ref: '#/components/schemas/Ideal'
        bancontact:
          $ref: '#/components/schemas/Bancontact'
        walmartPay:
          $ref: '#/components/schemas/WalmartPay'
        ebt:
          $ref: '#/components/schemas/EBT'
      description: Holds information about funding source for the payment transaction. Can hold only one above the provided funding sources.

    GooglePay:
      type: object
      properties:
        version:
          type: string
          description: Identifies encryption/signing scheme.
          example: EC_v1
        developerEmail:
          type: string
        signature:
          type: string
          description: Signature to verify Google initiated message.
          example: MIAGCSqGSIb......AAAA==
        data:
          type: string
          description: Data includes encryptedMessage, ephemeralPublicKey, tag.
          example: '{"encryptedMessage":"8nx...u003d","ephemeralPublicKey":"BGH...u003d","tag":"nvm...\u003d"}'
        dPanLast4:
          type: string
          example: "9876"
        bin:
          type: string
        eciIndicator:
          type: string
        xid:
          type: string
        cavv:
          type: string
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        panType:
          type: string
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        token:
          $ref: '#/components/schemas/ReferenceToken'
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'
      description: Google Payment specific information

    Ideal:
      type: object
      properties:
        returnUrl:
          type: string
        deepLink:
          type: string

    ISO-4217:
      type: object
      properties:
        code:
          type: string
          example: USD
          default: USD
        number:
          type: integer
          example: 840
        digits:
          type: integer
          example: 2
        currency:
          type: string
          example: US Dollar
          default: US Dollar
      description: Holds currency information

    Loyalty:
      type: object
      properties:
        accountId:
          type: string
          description: Account identifier, can be used for traditional card number or any alphanumeric value.  For example, a unique value not shown on the card, email address, phone number, social id, etc.
          example: email-id@example.com
        cardNumber:
          type: string
          description: Card number of loyalty account. The accountId parameter superscedes this field.  This field is ignored when the request is to create a new acccount.
          example: "905960447"
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        alias:
          type: string
          description: Last four values of the cardNumber
          readOnly: true
          example: "1111"
        accountStatus:
          $ref: '#/components/schemas/LoyaltyAccountStatus'
        loyaltyProgram:
          $ref: '#/components/schemas/LoyaltyProgram'
        pin:
          type: string
          description: Security pin number
        communications:
          type: object
          properties:
            email:
              type: boolean
            phone:
              type: boolean
            sms:
              type: boolean
          description: Methods the account onwer has agreed to be contacted
        commonFlags:
          type: object
          properties:
            tncAccepted:
              type: boolean
            canEarn:
              type: boolean
            canRedeem:
              type: boolean
            isChildAccount:
              type: boolean
            isVirtualAccount:
              type: boolean
              description: Indicates if the account has an associated plastic card or not.
          description: Common true/false settings on an account
        balance:
          $ref: '#/components/schemas/LoyaltyBalance'
        token:
          $ref: '#/components/schemas/ReferenceToken'
        metadata:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
      description: Information about a Loyalty account.

    LoyaltyTransactionInfo:
      type: object
      properties:
        fundingSource:
          type: object
          properties:
            loyalty:
              $ref: '#/components/schemas/Loyalty'
            vaultedAccount:
              $ref: '#/components/schemas/VaultedAccount'
            type:
              $ref: '#/components/schemas/FundingSourceType'
          description: Information about Loyalty account associated with the petro transaction.
        requestedRedeemUnits:
          type: number
          description: Units requested by user to redeem/burn as part of transaction.
        unitsRewarded:
          type: number
          description: Units earned/rewarded as part of transaction.
        unitsRedeemed:
          type: number
          description: Units burned/redeemed as part of transaction.
        previousBalanceUnits:
          type: number
          description: Previous balance units of an account.
        newBalanceUnits:
          type: number
          description: New balance units of an account.
        unitsValue:
          type: number
          description: Units discounted / paid currency value as part of transaction
          format: double
        hostExtraInfo:
          minItems: 0
          type: array
          description: Additional host specific information presented as name-value pairs
          items:
            $ref: '#/components/schemas/NVP'
        status:
          $ref: '#/components/schemas/LoyaltyTransactionStatus'
        receiptData:
          $ref: '#/components/schemas/ReceiptData'
      description: Information about a Loyalty transaction as part of petro transaction.

    LoyaltyBalance:
      type: object
      properties:
        balance:
          type: number
          example: 2634.0
        minRedeemUnits:
          type: number
          example: 200.0
        maxRedeemUnits:
          type: number
          example: 2000.0
        unitType:
          $ref: '#/components/schemas/BalanceUnitTypes'
        conversionRatio:
          type: number
          example: 100.0
        currencyValue:
          type: number
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'

    LoyaltyProgram:
      type: object
      properties:
        programId:
          type: string
          description: Unique identifier used to provide link between applications across disparate systems.
        hostProgramId:
          type: string
          description: Loyalty program Id used by the host (cloud) solution. Not in used in uCom system. For future use.
        programName:
          type: string
          description: Loyalty program name. Common name for the given loyalty program
        programDesc:
          type: string
          description: Used to describe the loyalty program and perhaps used to display to the client.
        programProvider:
          type: string
          description: Sponsor of the loyalty program.
        loyaltyType:
          $ref: '#/components/schemas/LoyaltyType'
        programStatus:
          $ref: '#/components/schemas/ProgramStatus'
      description: Value object to hold a list of loyalty items.
      example:
        programId: TEST_PROGRAM
        hostProgramId: TEST_HOST_PROGRAM
        programName: TEST_LOAYLTY_PROGRAM
        programDesc: Test loyalty program
        programProvider: Test Provider
        loyaltyType: LOCAL
        status: ENABLED

    MasterPass:
      type: object
      properties:
        transactionId:
          type: string
          description: Identifier corresponding to an account enrolled with MasterPass system.
          example: "1234732704291071701"
        credit:
          $ref: '#/components/schemas/Credit'
      description: MasterPass information

    NVP:
      title: Name and Value pair.
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        valueAsList:
          minItems: 0
          type: array
          items:
            type: string

    OfferStatus:
      type: object
      properties:
        code:
          type: string
          description: Indicates offer status code, NOT_ACTIVATED | ACTIVATED | REDEEMED | DECLINED | CANCELLED | FAILED
        statusInfo:
          minItems: 0
          uniqueItems: true
          type: array
          description: Details about what to display, images, messaging, etc.
          items:
            $ref: '#/components/schemas/NVP'
      description: Maintain the status of stackable promotions

    Paypal:
      type: object
      properties:
        payerId:
          type: string
          description: Paypal generated Unique identfier for a Paypal account.
          example: LPLWNMTBWMFAY
        nonce:
          type: string
          description: Paypal generated nonce.
          example: ab12-124C-ab12-124C-ab12-124C
        token:
          $ref: '#/components/schemas/ReferenceToken'
        credit:
          $ref: '#/components/schemas/Credit'
      description: Information about a Paypal account.

    Phone:
      type: object
      properties:
        value:
          type: string
          description: The value SHOULD be specified according to the format defined in RFC3966, e.g., 'tel:+1-201-555-0123'.
        type:
          type: string
          description: Often has typical values of "work","billing", "home", "mobile", "fax", "pager", and "other" and MAY allow more types to be defined by the service client.
        extension:
          type: string
          description: Defines the extension of the phone number.
        primary:
          type: boolean
          description: Defines if this entry is to be used as the primary or default for the user.
          default: false
      description: Phone number for the user.
      example:
        value: 555-555-5555
        type: billing
        extension: "2145"

    POSItem:
      type: object
      properties:
        itemDescription:
          type: string
          example: Standard Wash (or) Unleaded Petrol
        itemPrice:
          type: number
          format: double
          example: 7.5
        unitOfMeasurement:
          type: string
          example: each
        unitsSold:
          type: number
          format: double
          example: 1.0
        totalItemSaleAmount:
          type: number
          format: double
          example: 7.5
        originalItemPrice:
          type: number
          format: double
          example: 7.5
        originalTotalSaleAmount:
          type: number
          format: double
          example: 7.5
        posCodeFormat:
          type: string
          example: plu
        posCode:
          type: string
          example: "102"
        posCodeModifier:
          type: string
          example: "1"
        productCode:
          type: string
          example: "102"
        tax:
          type: array
          items:
            $ref: '#/components/schemas/TaxDetails'
        type:
          $ref: '#/components/schemas/POSItemType'
        serviceLevelCode:
          $ref: '#/components/schemas/ServiceLevelCode'
        priceAdjustments:
          type: array
          items:
            $ref: '#/components/schemas/PriceAdjustment'
        washCodes:
          type: array
          items:
            $ref: '#/components/schemas/WashCode'
        priceTier:
          type: string
      description: Structure to support passing POS sale info as part of the sale request.

    Prepaid:
      type: object
      properties:
        cardNumber:
          type: string
          description: Prepaid card number.
          example: "6759649826438453"
        cardSubType:
          type: string
          description: Merchant or brand specific information about the type of account.Issuer/group information.
          example: Merchant Brand
        securityCode:
          type: string
          description: Security code of prepaid card
          example: "345"
        promotionCode:
          type: string
          description: Promotion code for prepaid account activation.
        alias:
          type: string
          readOnly: true
          example: "8453"
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        balance:
          $ref: '#/components/schemas/PrepaidBalance'
        token:
          $ref: '#/components/schemas/ReferenceToken'
      description: Prepaid (a.k.a. gift) account information

    PrepaidBalance:
      required:
      - currencyCode
      - currentBalance
      type: object
      properties:
        currentBalance:
          type: number
          description: The current balance of prepaid card in lower denomination of the currency.
        beginBalance:
          type: number
          description: The balance of prepaid card before a transaction in lower denomination of the currency.
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'
        currencyType:
          $ref: '#/components/schemas/CurrencyPairType'
      description: Details of balance in the prepaid card.
      example:
        currentBalance: 1100
        beginBalance: 1000
        currencyCode: 840
        currencyType: BASE

    PriceAdjustment:
      type: object
      properties:
        adjustmentId:
          type: string
          example: discount prepay
        productCode:
          type: string
          example: "941"
        programID:
          type: string
          example: P66
        reason:
          type: string
          example: loyaltyOffer
        amount:
          type: number
          format: double
          example: 0.1
        percentage:
          type: number
          format: float
          example: 10.0
        itemPrice:
          type: number
          format: double
          example: 7.5
        unitOfMeasurement:
          type: string
          example: each
        unitsSold:
          type: number
          format: double
          example: 1.0
        rebateLabel:
          type: string
          example: HostDiscount
        maxQuantity:
          type: number
          format: double
          example: 7.5
        offerStatus:
          $ref: '#/components/schemas/OfferStatus'
      description: Structure to support providing price adjustment for sale item.

    PromotionalOffer:
      type: object
      properties:
        offerReferenceId:
          type: string
          description: Unique identifier for an offer.
        offerName:
          type: string
          description: Common name for the reward.
        offerDescription:
          type: string
          description: Description about the reward details.
        type:
          type: object
          description: Type can be used to distinguish offers, i.e EARN
        offerProvider:
          type: string
          description: Provider name of the offer
        partnerGroup:
          minItems: 0
          type: array
          description: Partner group names where the offer can be obtained
          items:
            type: string
        offerMessage:
          type: string
          description: The offer information that is for the client to see on the user-interface.  This is most often set by the host system.
        effectiveDateTime:
          type: string
          description: Starting time for a reward validity.
          format: date-time
        expiryDateTime:
          type: string
          description: Ending time for a reward to be applied.
          format: date-time
        visibleFrom:
          type: string
          description: Date when offer will start the visibility.
          format: date-time
        visibleTo:
          type: string
          description: Date when offer will end the visibility.
          format: date-time
        registrationFrom:
          type: string
          description: Date when offer start with the registration.
          format: date-time
        registrationTo:
          type: string
          description: Date when offer end with the registration.
          format: date-time
        promotionId:
          type: string
          description: Links to associated promotion if it applies.
        isExclusive:
          type: boolean
          description: Indicator if offer can be combined with other offers or is mutually exclusive.
        userAcceptanceRequired:
          type: boolean
          description: Indicator if a user has to accept the offer before it can be applied to a transaction or accrued in an account.
        offerStatus:
          $ref: '#/components/schemas/OfferStatus'
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'
        qualifiers:
          type: object
          properties:
            currency:
              type: array
              items:
                type: object
                properties:
                  currencyType:
                    $ref: '#/components/schemas/ValueAddCurrencyType'
                  value:
                    type: string
                    description: Value of the reward in the associated currency.
                  realizationCode:
                    $ref: '#/components/schemas/RewardRealizationCode'
            saleItems:
              type: array
              items:
                $ref: '#/components/schemas/POSItem'
          description: Conditions that must be met for the rewared to be awarded.
        offerCostInfo:
          type: object
          properties:
            currency:
              type: array
              items:
                type: object
                properties:
                  currencyType:
                    $ref: '#/components/schemas/ValueAddCurrencyType'
                  value:
                    type: string
                    description: Value of the Offer cost associated with currency.
            saleItems:
              type: array
              items:
                $ref: '#/components/schemas/POSItem'
          description: Offer cost details.
        reward:
          $ref: '#/components/schemas/Reward'
        metadata:
          minItems: 0
          uniqueItems: true
          type: array
          description: Details about what to display, images, messaging, etc.
          items:
            $ref: '#/components/schemas/NVP'
        offerRealizationType:
          $ref: '#/components/schemas/OfferRealizationType'
      description: Offer opportunity details

    QRCode:
      type: object
      properties:
        qrCodeId:
          type: string
          description: Unique Identifier for the QRCode.
          readOnly: true
        expiryDateTime:
          type: string
          description: Date and time of the transaction.
          format: date-time
          readOnly: true
          example: 2016-04-16T16:06:05Z

    ReceiptData:
      type: object
      properties:
        receiptSection:
          type: string
          description: Indicates the section of the receipt the text represents [e.g. full, vat, eft, loyalty, etc]
        receiptLines:
          $ref: '#/components/schemas/ReceiptLine'
      description: Container for the receipt lines sent from the site box as printed on the paper receipt.

    ReceiptLine:
      type: object
      properties:
        plain:
          type: array
          items:
            type: string
        formatted:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              value:
                type: string
              order:
                type: number
              row:
                type: number
              column:
                type: number
              charSet:
                type: number
              color:
                type: string
              alignment:
                type: string
              height:
                type: string
              width:
                type: string
              charSet1:
                type: string
              charSet2:
                type: string
              charSet3:
                type: string
      description: A line of text on a receipt.

    RequestedAmount:
      title: Requested Amount
      minimum: 0
      exclusiveMinimum: true
      type: number
      description: Requested amount for the given request type [auth, capture, refund, etc] in lower denomination.
      format: double
      example: 500.00

    Reward:
      type: object
      properties:
        rewardId:
          type: string
          description: Unique identifier for the reward instance
        rewardDescription:
          type: string
          description: reward description
        effectiveDateTime:
          type: string
          description: Starting time for a reward validity.
          format: date-time
        expiryDateTime:
          type: string
          description: Ending time for a reward to be applied.
          format: date-time
        offerReferenceId:
          type: string
          description: Link to the offer that provided the opportunity for a customer to receive the reward.
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'
        values:
          type: object
          properties:
            transactionLevel:
              type: array
              items:
                type: object
                properties:
                  currencyType:
                    $ref: '#/components/schemas/ValueAddCurrencyType'
                  value:
                    type: string
                    description: Value of the reward in the associated currency.
                  realizationCode:
                    $ref: '#/components/schemas/RewardRealizationCode'
                  priceAdjustments:
                    type: array
                    items:
                      $ref: '#/components/schemas/PriceAdjustment'
            lineItemLevel:
              type: array
              items:
                type: object
                properties:
                  saleItem:
                    $ref: '#/components/schemas/POSItem'
                  realizationCode:
                    $ref: '#/components/schemas/RewardRealizationCode'
          description: Medium of exchange for the value.
        dispensationCode:
          $ref: '#/components/schemas/RewardDispensationCode'
      description: Reward details

    ReferenceToken:
      type: object
      properties:
        tokenId:
          type: string
          description: Actual token value
          example: 292bb6b886fc4446894f878b7e32bd5e
        tokenProvider:
          type: string
          description: Indicates what system is the originator of the token
          example: TRANS_ARMOR or NETWORK_TOKEN or THIRD_PARTY_NETWORK_TOKEN
        cryptogram:
          type: string
          description: 28 or 56 characters for Visa / Mastercard. 4 characters for Discover / Amex. Required for CIT. Not required for MIT.
          example: 3CguW5ecfTz...Yuhw=
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        tokenType:
          $ref: '#/components/schemas/ReferenceTokenType'
      description: Surrogate value used to represent a handle to an account without sharing PCI/PII data to look it up.

    Stac:
      type: object
      properties:
        stacId:
          type: string
          description: Unique Identifier for the STAC.
          readOnly: true
        storeId:
          type: string
          description: Store identifier where the transaction is being performed.
          example: "123456"
        qrCode:
          $ref: '#/components/schemas/QRCode'
        requestedAmount:
          $ref: '#/components/schemas/RequestedAmount'
        fundingSource:
          $ref: '#/components/schemas/FundingSource'
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'
        transactionOrigin:
          $ref: '#/components/schemas/TransactionOrigin'
        loyaltyTransactions:
          type: array
          items:
            $ref: '#/components/schemas/LoyaltyTransactionInfo'
        availOffersTrxnId:
          type: string
          description: Identifier to be carried along with subsequent interactions using the available offers returned to the client.
        printReceipt:
          type: boolean
          description: Indicate whether or not to print the receipt at the outside fuel dispenser.
        offers:
          type: array
          items:
            $ref: '#/components/schemas/PromotionalOffer'
        hostExtraInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
        threeDSecureInfo:
          $ref: '#/components/schemas/ThreeDSecure'
        fleetData:
          $ref: '#/components/schemas/FleetData'
        webhookUrl:
          $ref: '#/components/schemas/Link'

    SamsungPay:
      type: object
      properties:
        version:
          type: string
          example: EC_v1
        developerEmail:
          type: string
        data:
          type: string
          example: 3CguW5ecfTzO...03d
        signature:
          type: string
          example: MIAGCSqGSIb......AAAA==
        decryptAlias:
          type: string
          description: field of the public key certificate.
          example: oslo.com.xxx.Prod_mer
        dPanLast4:
          type: string
          example: "9876"
        bin:
          type: string
        eciIndicator:
          type: string
        xid:
          type: string
        cavv:
          type: string
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        panType:
          type: string
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        header:
          type: object
          properties:
            ephemeralPublicKey:
              type: string
              example: MFkwEw...03d
            publicKeyHash:
              type: string
              example: +vbONw...IM=
        token:
          $ref: '#/components/schemas/ReferenceToken'
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'

    TaxDetails:
      type: object
      properties:
        code:
          type: string
          example: TX01
        description:
          type: string
          example: Sales Tax
        amount:
          type: string
          example: "7.50"
        rate:
          type: string
          example: "13.5"
      description: Tax details.

    ThreeDSecure:
      type: object
      properties:
        transactionId:
          type: string
          description: Transaction id generated on the server
          example: 292bb6b886fc4446894f878b7e32bd5e
        transactionStatus:
          type: string
          description: Transactions status of 3DS server
          example: C
        transactionStatusReason:
          type: string
          description: Reason for the transaction status
        challengeResponse:
          type: string
          example: ewogIC
        challengeIndicator:
          type: string
          example: '01 = No preference 02 = No challenge requested 03 = Challenge requested: 3DS Requestor Preference 04 = Challenge requested: Mandate'
        dsTransactionId:
          type: string
          example: 292bb6b886fc4446894f878b7e32bd5e
        acsTransactionId:
          type: string
          example: 292bb6b886fc4446894f878b7e32bd5e
        serverTransactionId:
          type: string
          example: 292bb6b886fc4446894f878b7e32bd5e
        acsReferenceNumber:
          type: string
          example: 292bb6b886fc4446894f878b7e32bd5e
        acsSignedContent:
          type: string
          example: 292bb6b88....6fc4446894f878b7e32bd5e
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        challengeRequest:
          type: string
          example: ewogICAiYW.......MjJjMGVjIgp9
        acsUrl:
          type: string
          example: https://test.modirum.com/dstests/ACSEmu2
        iframeContent:
          type: string
          example: <iframe></iframe>
        termUrl:
          type: string
          example: https://mydomain/3dstest?transactionId=292bb6b886fc4446894f878b7e32bd5e
        isThreeDSMethodCompleted:
          type: boolean
          example: true
        isAuthenticationCompleted:
          type: boolean
          example: true
        cavv:
          type: string
          description: Card authenticaion verificaiton value
        threeDSVersion:
          type: string
        expiryDateTime:
          type: string
          description: 3DS challenge transaction expiry date time.
          format: date-time
          readOnly: true
          example: 2020-01-01T16:06:05Z
        eci:
          type: string
          description: Electronic Commerce Indicator value
      description: Details of ThreeDSecure transaction used to process the challege flow

    VaultedAccount:
      type: object
      properties:
        fdAccountId:
          type: string
          description: Unique identifier for a customer account vaulted with uCom
        securityCode:
          type: string
          description: Card Verificatiion value.
        status:
          $ref: '#/components/schemas/AccountStatus'
        type:
          $ref: '#/components/schemas/AccountType'
      description: FD Account information
      example:
        fdAccountId: muid-3d4f2ac...c91014f2dc1

    Venmo:
      type: object
      properties:
        nonce:
          type: string
          description: Venmo generated nonce.
          example: ab12-124C-ab12-124C-ab12-124C
        token:
          $ref: '#/components/schemas/ReferenceToken'
      description: Information about a Venmo account.

    Vipps:
      required:
      - paymentId
      type: object
      properties:
        paymentId:
          type: string
          description: The payment_id of Vipps. Used to correlate with the webhook of an open order.
          example: ab12-124C-ab12-124C-ab12-124C
        credit:
          $ref: '#/components/schemas/Credit'
      description: Information about a Vipps account. 'credit' is a read-only property.

    VisaCheckout:
      type: object
      properties:
        callId:
          type: string
          description: Identifier corresponding to an account enrolled with Visa Checkout system.
          example: "1234732704291071701"
        credit:
          $ref: '#/components/schemas/Credit'
      description: Visa Checkout information

    WashCode:
      type: object
      properties:
        code:
          type: string
          description: Wash code generated by the POS system.
        description:
          type: string
          description: Wash code description generated by the POS system.
        expiration:
          type: string
          description: Expiration date for the purchased wash code
          format: date-time
        message:
          type: string
          description: Field to carry message from site system for display to customer.
      description: Purchased wash information.

    WalmartPay:
      type: object
      properties:
        credit:
          $ref: '#/components/schemas/Credit'
        token:
          $ref: '#/components/schemas/ReferenceToken'

    #-------------------------------------
    # Common Models
    #-------------------------------------
    DeviceInfo:
      required:
      - id
      - kind
      type: object
      properties:
        id:
          type: string
          description: Unique Id for the device. Value should not contain line feeds, carriage returns, tabs, leading or trailing spaces, or multiple spaces.
          example: 537edec8-d33e-4ee8-93a7-b9f61876950c
        kind:
          type: string
          description: Possible values are mobile, wearable, automobile, embedded,desktop, other.
          example: mobile
        details:
          title: deviceData
          minItems: 0
          uniqueItems: true
          type: array
          description: Device data information from multiple providers.
          items:
            type: object
            properties:
              provider:
                type: string
                description: Identifies the provider of the data and is often used when decrypting data on the server.
                example: InAuth
              dataCapture:
                type: object
                properties:
                  rawData:
                    type: string
                    description: Device capture - raw data blob
                    example: aaaaaXREUVZGRlFY...aMV
                  dataEventId:
                    type: string
                    description: Event identifier used map state on the server.
                    example: BB8E4E92...Fz1E063113
                  captureTime:
                    type: string
                    description: Device data capture time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
                    format: date-time
                    example: 2016-04-16T16:06:05Z
                description: Device data captured as a bundle and transmitted as an encrypted and/or specifically formated string.
              dataStatic:
                type: object
                properties:
                  os:
                    type: string
                    description: Device OS name
                    example: Android 5.1.1 Lollipop
                  osVersion:
                    type: string
                    description: Device OS version
                    example: 5.1.1 Lollipop
                  model:
                    type: string
                    description: Device model
                    example: XT1540
                  type:
                    type: string
                    description: Device type
                    example: Moto G
                description: Device static details
              dataDynamic:
                type: object
                properties:
                  latitude:
                    type: string
                    description: Device position - latitude at the time of the data event
                    example: 13.0827 N
                  longitude:
                    type: string
                    description: Device position - longitude at the time of the data event
                    example: 80.2707 E
                  ipAddress:
                    type: string
                    description: IP address
                    example: 172.27.37.221
                  captureTime:
                    type: string
                    description: Device data capture time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
                    format: date-time
                    example: 2016-04-16T16:06:05Z
                description: Device location details
              dataApplication:
                type: object
                properties:
                  version:
                    type: string
                    description: Mobile application version.
                    format: sting
                    example: 1.0.0
                  name:
                    type: string
                    description: Mobile application name.
                    format: sting
                    example: aplication-name
                  country:
                    type: string
                    description: Mobile application store country.
                    format: sting
                    example: US
                description: Mobile application specific data
            description: Collection of device data
        additionalInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
      description: Request origin device details
      example:
        id: 537edec8-d33e-4ee8-93a7-b9f61876950c
        kind: mobile
        details:
        - provider: InAuth
          dataCapture:
            rawData: aaaaaXREUVZGRlFY...aMV
            dataEventId: BB8E4E92...Fz1E063113
            captureTime: 2016-04-16T16:06:05Z
          dataStatic:
            os: Android 5.1.1 Lollipop
            osVersion: 5.1.1 Lollipop
            model: XYX-1
            Type: Moto G
          dataDynamic:
            latitude: 13.0827 N
            longitude: 80.2707 E
            ipAddress: 172.27.37.221
            captureTime: 2016-04-16T16:06:05Z
        additionalInfo:
        - name: some-key
          value: some-value

    Error:
      type: object
      properties:
        code:
          type: string
          description: Uniquely identifies an error condition. Client applications need to read and handle errors based on this.
        message:
          type: string
          description: A generic description of the error condition.
        category:
          type: string
          description: The resource associated with the error condition.
        developerInfo:
          type: object
          properties:
            developerMessage:
              type: string
              description: An elaborative description of the error description.
            moreInfo:
              type: string
              description: Link to the error in Developer page.
            fieldError:
              type: array
              description: Detailed information about message format errors.
              items:
                type: object
                properties:
                  field:
                    type: string
                    description: The property or attribute associated with the error
                  message:
                    type: string
                    description: Information specific to a property or attribute.
          description: Information that needs to be understood by the client developers and should not be interpreted for application processing.
        hostExtraInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
        threeDSecureInfo:
          $ref: '#/components/schemas/ThreeDSecure'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
      description: Model for error messaging
      example:
        code: "40000"
        message: Example Error
        category: example
        developerInfo:
          developerMessage: Invalid Message format in request payload
          moreInfo: https://www.example.com/errors/40000
          fieldError:
          - field: example id
            message: exampleId is mandatory

    Link:
      required:
      - href
      - rel
      type: object
      properties:
        href:
          type: string
          description: URL to linked resource.
          format: uri
          example: https://api.example.com/v1/customers/cust-id-123456/accounts/acct-id-123456
        rel:
          type: string
          description: Defines the type of link relationship to current resource.
          example: linked.account
        method:
          type: string
          description: Defines the HTTP method for the given href.
          example: GET
          default: GET
        id:
          type: string
          description: Identifier to the resource.
          example: 415e5cf6bfdb11e8a355529269fb1459
      description: Model to communicate linked resources.

    #-------------------------------------
    # ENUM Models
    #-------------------------------------
    AccountStatus:
      type: string
      description: Indicates the status of an account.
      enum:
      - ACTIVE
      - INACTIVE
      - TERMINATED
      - ISSUER_TERMINATED
      - WALLET_TERMINATED
      - PENDING

    AccountType:
      type: string
      description: Type of Account vaulted
      enum:
      - CREDIT
      - PREPAID
      - ACH
      - LOYALTY
      - PAYPAL
      - MASTERPASS
      - VENMO
      - THREEDSECURE
      - VAULTED_ACCOUNT
      - FLEET

    AchEnrollmentStatus:
      type: string
      description: Indicates ACH enrollment status
      enum:
      - ACTIVE
      - PENDING
      - PENDING_LINKED_ACCOUNT

    AchEnrollmentSubStatus:
      type: string
      description: Indicates ACH enrollment pending status
      enum:
      - PENDING_BANK_VALIDATION
      - PENDING_PIN_VALIDATION
      - PENDING_EMAIL_VALIDATION
      - PENDING_PHONE_VALIDATION
      - PENDING_SOFT_BLOCK
      - PENDING_HARD_BLOCK

    BalanceUnitTypes:
      type: string
      description: Indicator to determine how to display balances
      enum:
      - CENTS
      - MILES
      - POINTS
      - STARS
      - LITRES

    CreditCardType:
      title: Credit Card Type
      type: string
      description: Indicates the type of credit account association
      enum:
      - AMEX
      - DISCOVER
      - MASTERCARD
      - PLCC
      - VISA
      - OTHER

    AchCardType:
      type: string
      description: Indicates the type of ACH card association
      enum:
      - CONNECTPAY

    AchAccountType:
      type: string
      description: ACH account type
      enum:
      - CHECKING
      - SAVINGS

    CurrencyPairType:
      type: string
      description: Describes the type of currency where BASE represents the currency from Host and TRANSACTION represents the one requested.
      enum:
      - BASE
      - TRANSACTION

    FleetCardType:
      type: string
      description: Indicates the type of fleet account association
      enum:
      - WEX

    FleetTagType:
      title: Indicates the possible values accepted in Fleet Data segment to Payment Processor.
      type: object
      properties:
        name:
          type: string
          example: VHT
        value:
          type: string
          example: TXT 1200

    FundingSourceType:
      type: string
      description: Describes the type of Funding source
      enum:
      - VAULTED_ACCOUNT
      - CREDIT
      - PREPAID
      - APPLE_PAY
      - ANDRIOD_PAY
      - PAYPAL
      - TOKEN
      - NONCE
      - VCO
      - VENMO
      - AMAZON_PAY
      - VIPPS
      - FLEET
      - BANCONTACT
      - IDEAL
      - WALMART_PAY
      - EBT

    LoyaltyAccountStatus:
      type: string
      description: Indicator of the account state as indicated by the loyalty issuer.
      enum:
      - ENROLLED
      - ANONYMOUS
      - PARTIAL
      - PENDING_DATA
      - PENDING_VERIFICATION
      - INACTIVE
      - BLOCKED

    LoyaltyTransactionStatus:
      type: string
      description: Indicates the status of an loyalty operation.
      enum:
      - AUTHORIZED
      - AUTH_CANCELLED
      - AUTH_DECLINED
      - COMPLETED
      - COMPLETION_DECLINED
      - PENDING

    LoyaltyType:
      type: string
      description: Identifier to indicate type of Loyalty program being registered.
      enum:
      - LOCAL
      - NATIONAL

    OfferRealizationType:
      type: string
      description: Identifier to indicate the type of a Loyalty Offer.
      enum:
      - SPLIT_PAYMENT
      - PRE_ITEM_AMOUNT_OFF
      - POST_ITEM_AMOUNT_OFF
      - PRICE_ROLLBACK
      - HBD
      - TRANSACTION_LEVEL

    PaymentStatus:
      title: Payment Status
      type: string
      description: Indicates the status of an payment operation.
      enum:
      - APPROVED
      - DECLINED
      - CANCELLED
      - CHALLENGED

    POSItemType:
      type: string
      description: Indicates the type of item
      enum:
      - CARWASH
      - FUEL
      - OTHER

    ProgramStatus:
      type: string
      description: Indicates if the given loyalty program is still active or not.
      enum:
      - ENABLED
      - DISABLED
      - CONTRACTED_ONLY

    ReferenceTokenType:
      type: string
      description: Indicates if the given loyalty program is still active or not.
      enum:
      - FORMAT_PRESERVING_MULTI_USE
      - FORMAT_PRESERVING_SINGLE_USE
      - CLAIM_CHECK_NONCE
      - RANDOM_MULTI_USE
      - RANDOM_SINGLE_USE
      - CLAIM_CHECK_NONCE_WITH_PINCAPTURE

    RewardDispensationCode:
      type: string
      description: Indicates when a reward is to be redeemed.
      enum:
      - INSTANT
      - DEFERRED

    RewardRealizationCode:
      type: string
      description: Indicates how a reward is applied to a transaction.
      enum:
      - NEW_PRICE
      - PERCENT_OFF
      - AMOUNT_OFF
      - EARN
      - REDEEM

    SaleItemType:
      type: string
      description: Indicates the type of item
      enum:
      - FUEL
      - CARWASH
      - OTHER

    ServiceLevelCode:
      type: string
      description: Indicates service level code.
      default: S
      enum:
      - S
      - F
      - N
      - X

    TransactionOrigin:
      type: string
      description: Transaction origin details.
      enum:
      - ECOM
      - MOTO
      - POS

    UpdateActionType:
      type: string
      description: Indicates the action intended as part of patch operation.
      enum:
      - RESUME_TRANSACTION
      - CANCEL_TRANSACTION

    ValueAddCurrencyType:
      type: string
      description: Indicates the type of units used to show value of a reward.
      enum:
      - MONEY
      - POINTS
      - DISTANCE
      - COUNTS
      - VOLUMES
      - VISITS

  #-------------------------------------
  # Responses
  #-------------------------------------
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Conflict:
      description: Conflict - The requested operation conflicts with the current state of the identified resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NoContent:
      description: The request succeeded but there's really nothing to show.
      content: {}
    NotFound:
      description: Not Found - The requested resource doesn't exist.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ServerError:
      description: An unexpected server error occured.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    StacCreated:
      description: Resource created
      headers:
        location:
          description: Location of newly created resource.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Stac'
    Unauthorized:
      description: Unauthorized
      content: {}

  #-------------------------------------
  # Parameter Models
  #-------------------------------------
  parameters:
    AcceptLanguageParam:
      name: Accept-Language
      in: header
      description: The Accept-Language header contains information about the language preference of a user. This HTTP header is useful to multilingual sites for deciding the best language to serve to the client. i.e en-US,fr-CA
      schema:
        type: string

    ApiKeyParam:
      name: Api-Key
      in: header
      description: An API key is a string value passed by a client app to the API proxies. The key uniquely identifies the client app.
      required: true
      schema:
        type: string

    AuthorizationParam:
      name: Authorization
      in: header
      description: Authorization information for the request. Format- `HMAC {hmacToken}`
      required: true
      schema:
        type: string

    ClientTokenParam:
      name: Client-Token
      in: header
      description: Used to pass the original client OAuth token information given in a client-credentials flow.  This field is only used when the server is making the request and needs to link the transaction to a specific client.  Format- `Bearer {access_token}`
      schema:
        type: string

    ClientRequestIdParam:
      name: Client-Request-Id
      in: header
      description: Contains a unique ID generated by the client that can be used for enforcing idempotency on POST actions. POSTs are inherently non-idempotent and submitting the exact same request multiple times would create duplicate resources. Note:- Omitting this header increases the risk of duplicate transactions, which for payments could cost the client issues like double-billing.
      required: true
      schema:
        type: string

    SubMerchantIdParam:
      name: Sub-Merchant-Id
      in: header
      description: Sub Merchant Id contains information about the merchant identifier
      schema:
        type: string

    TimestampParam:
      name: Timestamp
      in: header
      description: Epoch timestamp in the request initiating system
      required: true
      schema:
        type: string
  examples:
    VaultedAccountSTACRequest:
      value:
        fdCustomerId: 88f7b006758e4833ae40ecccf268457a
        stac:
          fundingSource:
            type: VAULTED_ACCOUNT
            vaultedAccount:
              fdAccountId: 8a7fa6d486179622018617e0216d001e
        deviceInfo:
          id: 537edec8-d33e-4ee8-93a7-b9f61876950c
          kind: mobile
          details:
          - provider: RAVELIN
            dataCapture:
              dataEventId: BB8E4E92...Fz1E063113
    VaultedAccountStacCreatedSuccessResponse:
      value:
        stacId: 8a7f2d848626c9370186306e9a99000e
        qrCode:
          qrCodeId: UCOM1fb8ef1e0b1740788da8c6d986c1ad34
          expiryDateTime: '2023-02-08T09:55:00Z'



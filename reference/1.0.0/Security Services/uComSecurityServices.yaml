#-------------------------------------
# Document Change Log
# 0.2.2
#     - No Changes
# 0.2.1
#     - Added Merchant id as header field
# 0.2.0
#     - Added 'OTHER' CreditCardType
#     - Added fields in ThreeDSecure object
# 0.1.9
#     - No change.
# 0.1.8
#     - Added 3ds web support
# 0.1.7
#     - New API for creating third party tokens
#     - Added 3ds challenge transaction expiry date time in ThreeDSecure
# 0.1.6
#     - Added Accept-Language header field
# 0.1.5
#     - Added Link in the Error object.
#     - acsSignedContent and CardType in threeDSecureInfo object
# 0.1.4
#     - No change.
# 0.1.3
#     - Adding NVP with valueAsList
#     - update in DeviceInfo.
# 0.1.2
#     - No change.
# 0.1.1
#     - No change.
# 0.1.0
#     - No change.
# 0.0.9
#     - No change.
# 0.0.8
#   - Added required keyId parameter to GET /signature-keys
#   - Added required keyId parameter to GET /encryption-keys
# 0.0.7
#   - Updated ReferenceToken to have more accurate attribute names, removed use value
#   - Cleaned up examples in the models
# 0.0.6
#     - No change.
# 0.0.5
#     - No change.
# 0.0.4
#     - Added endpoints for signature and encryption keys
#     - Added encryption and validation models
# 0.0.3
#     - Added publicKeyRequired flag in request and publicKey attribute in response.
#     - Removed GET, PATCH, DELETE operations.
#     - Added Grant Type in header.
# 0.0.2
#     - Added 'osVersion' attribute to 'DeviceInfo' object.
# 0.0.1
#     - Initial Version
#-------------------------------------

swagger: '2.0'
info:
  version: 0.2.2
  title: uCom Security Services
  description: Services related to managing security like access tokens and validation.
tags:
  - name: security
    description: Operations and details for API security services.
host: int.api.firstdata.com
basePath: /ucom
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1/signature-keys/{keyId}:
    get:
      x-group-name: Security Services
      x-proxy-name: Get public signature key
      tags:
        - security
      summary: Get uCom Gateway public signature key
      description: Get uCom Gateway public key for validating message signatures.
      parameters:
        - in: path
          name: keyId
          type: string
          required: true
          description: identifier of the public key used for signature verification.
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/SignatureKey'
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'

  /v1/encryption-keys/{keyId}:
    get:
      x-group-name: Security Services
      x-proxy-name: Get encryption key
      tags:
        - security
      summary: Get uCom Gateway encryption key
      description: Get uCom Gateway partner-specific key for encryption of data elements.
      parameters:
        - in: path
          name: keyId
          type: string
          required: true
          description: identifier of the public key used for field-level encryption.
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/EncryptionKey'
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'

  /v1/tokens:
    post:
      x-group-name: Security Services
      x-proxy-name: Create security access token
      tags:
        - security
      summary: Create a security access token
      description: For service calls directly from a mobile or connected device, the client needs to have an access token which is received by the client's server.
      parameters:
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            properties:
              token:
                $ref: '#/definitions/Token'
              deviceInfo:
                $ref: '#/definitions/DeviceInfo'
              anonymous:
                description: Flag to indicate that the requested user does not have a uCom customer profile.
                type: boolean
                default: false
              publicKeyRequired:
                description: Flag to indicate if a public key is required for payload data encryption.
                type: boolean
                default: false
            example:
              token:
                fdCustomerId: "bc5b70d996cb4bfebced3973880f8543"
              publicKeyRequired: true
      responses:
        201:
          $ref: '#/responses/TokenCreated'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/ServerError'

  /v1/third-party-tokens:
    post:
      x-group-name: Security Services
      x-proxy-name: Create third party security access token
      tags:
        - security
      summary: Create a security access token
      description: For service calls directly from a mobile or connected device, the client needs to have an access token which is received by the client's server.
      parameters:
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            properties:
              token:
                $ref: '#/definitions/ThirdPartyToken'
              deviceInfo:
                $ref: '#/definitions/DeviceInfo'
      responses:
        201:
          $ref: '#/responses/ThirdPartyTokenCreated'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/ServerError'

definitions:
#-------------------------------------
# Resource Models
#-------------------------------------
  EncryptionKey:
     description: Model for attributes of Key pair required for field encryption.
     type: object
     properties:
         id:
             description: Uniquely identifies a Key.
             type: string
             example: "c2RnYXJ0aHR3ZXN3eXNk"
         publicKey:
             description: Generated Public Key for encrypting the request.
             type: string
             example: "MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCqGKukO1De7zhZj6+H0qtjTkVxwTCpvKe4eCZ0FPqri0cb2JZfXJ/DgYSF6vUpwmJG8wVQZKjeGcjDOL5UlsuusFncCzWBQ7RKNUSesmQRMSGkVb1/3j+skZ6UtW+5u09lHNsj6tQ51s1SPrCBkedbNf0Tp0GbMJDyR4e9T04ZZwIDAQAB"
         algorithm:
             description: Cipher algorithm to use for encryption.
             type: string
             example: "RSA/ECB/PKCS1Padding"
         created:
             description: Epoch timestamp representing the Key creation date-time.
             type: number
             example: 1501715477
         expires:
             description: Epoch timestamp representing the date-time by which the Key expires.
             type: string
             example: 1501795478

  ExpiryDate:
    description: Contains account expiration data and needs to either send the values in individual fields OR as a singleValue.
    type: object
    properties:
      month:
        type: string
        description: Month format 'MM'
        pattern: "[0-9]{2,2}"
        minLength: 2
        maxLength: 2
        example: "09"
      year:
        type: string
        description: Year format 'YY'
        pattern: "[0-9]{2,2}"
        minLength: 2
        maxLength: 2
        example: "20"
      singleValue:
        type: string
        description: Month and year together, 'MMYY' or 'MMYYYY'.  If the latter format, the string will be parsed and validated per the given format.  Any other format will be rejected.
        minLength: 4
        maxLength: 6

  ISO-4217:
    description: ISO 4217 currency format in which the balance is represented.
    type: object
    properties:
      code:
        type: string
        default: "USD"
        example: "USD"
      number:
        type: number
        default: 840
        example: 840
      digits:
        type: number
        default: 2
        example: 2
      currency:
        type: string
        default: "US Dollar"
        example: "US Dollar"

  Link:
    description: Model to communicate linked resources.
    type: object
    required:
      - href
      - rel
    properties:
      href:
        description: URL to linked resource.
        type: string
        format: uri
      rel:
        description: Defines the type of link relationship to current resource.
        type: string
        enum:
          - current.page
          - previous.page
          - next.page
          - self
        example:
          "self"
      method:
        description: Defines the HTTP method for the given href.
        type: string
        default: "GET"
        example:
          "GET"
      id:
        description: Identifier to the resource.
        type: string
        example:
          "415e5cf6bfdb11e8a355529269fb1459"

  NVP:
    title: Name and Value pair.
    type: object
    properties:
      name:
        type: string
      value:
        type: string
      valueAsList:
        type: array
        minItems: 0
        items:
          type: string

  ReferenceToken:
    description: Surrogate value used to represent a handle to an account without sharing PCI/PII data to look it up.
    type: object
    properties:
      tokenId:
        description: Actual token value
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      tokenProvider:
        description: Indicates what system is the originator of the token
        type: string
        example: "TRANS_ARMOR"
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      tokenType:
        $ref: '#/definitions/ReferenceTokenType'

  SignatureKey:
     description: Model for attributes of Key pair required for Signature validation.
     type: object
     properties:
         id:
             description: Uniquely identifies a Key.
             type: string
             example: "c2RnYXJ0aHR3ZXN3eXNk"
         publicKey:
             description: Generated Public Key for Signature validation.
             type: string
             example: "MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCqGKukO1De7zhZj6+H0qtjTkVxwTCpvKe4eCZ0FPqri0cb2JZfXJ/DgYSF6vUpwmJG8wVQZKjeGcjDOL5UlsuusFncCzWBQ7RKNUSesmQRMSGkVb1/3j+skZ6UtW+5u09lHNsj6tQ51s1SPrCBkedbNf0Tp0GbMJDyR4e9T04ZZwIDAQAB"
         created:
             description: Epoch timestamp representing the Key creation date-time.
             type: number
             example: 1501715477
         expires:
             description: Epoch timestamp representing the date-time by which the Key expires.
             type: string
             example: 1501795478

  Token:
    description: "Access Token object"
    type: object
    properties:
      tokenId:
        description: Unique identifier provided for the Token.
        type: string
        readOnly: true
      fdCustomerId:
        description: Unique identifier for a customer profile registered with uCom
        type: string
      status:
        $ref: '#/definitions/TokenStatus'
      issuedOn:
        description: Token issuance date time in epoch time format.
        type: number
        readOnly: true
      expiresInSeconds:
        description: Time remaining for token expiry in seconds.
        type: number
        readOnly: true
      publicKey:
        description: Public key required to encrypt the payload data.
        type: string
        readOnly: true
      algorithm:
        description: Indicates algorithm used to generate key pair.
        type: string
        example: "PKCS1/NONE/RSA"
    example:
      tokenId: "0OcWjNTKu8rjfVb0AJnAUGTM9dWx"
      fdCustomerId: "bc5b70d996cb4bfebced3973880f8543"
      status: "ACTIVE"
      issuedOn: 1501502067595
      expiresInSeconds: 1199
      publicKey: "MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCqGKukO1De7zhZj6+H0qtjTkVxwTCpvKe4eCZ0FPqri0cb2JZfXJ/DgYSF6vUpwmJG8wVQZKjeGcjDOL5UlsuusFncCzWBQ7RKNUSesmQRMSGkVb1/3j+skZ6UtW+5u09lHNsj6tQ51s1SPrCBkedbNf0Tp0GbMJDyR4e9T04ZZwIDAQAB"
      algorithm: "PKCS1/NONE/RSA"

  ThirdPartyToken:
    description: "Third party token request details"
    type: object
    properties:
      tokenId:
        description: Unique identifier provided for the Token.
        type: string
        readOnly: true
      tokenType:
        description: Token type.
        type: string
      status:
        $ref: '#/definitions/TokenStatus'
      issuedOn:
        description: Token issuance date time in epoch time format.
        type: number
        readOnly: true
      expiresInSeconds:
        description: Time remaining for token expiry in seconds.
        type: number
        readOnly: true
      publicKey:
        description: Public key required to encrypt the payload data.
        type: string
        readOnly: true
      algorithm:
        description: Indicates algorithm used to generate key pair.
        type: string
        example: "PKCS1/NONE/RSA"
      additionalInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true


  ThreeDSecure:
    description: Details of ThreeDSecure transaction used to process the challege flow
    type: object
    properties:
      transactionId:
        description: Transaction id generated on the server
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      transactionStatus:
        type: string
        description: Transactions status of 3DS server
        example: "C"
      transactionStatusReason:
        type: string
        description: Reason for the transaction status
      challengeResponse:
        type: string
        example: "ewogIC"
      challengeIndicator:
        type: string
        example: "01 = No preference
                  02 = No challenge requested
                  03 = Challenge requested: 3DS Requestor Preference
                  04 = Challenge requested: Mandate"
      dsTransactionId:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      acsTransactionId:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      serverTransactionId:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      acsReferenceNumber:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      acsSignedContent:
        type: string
        example: "292bb6b88....6fc4446894f878b7e32bd5e"
      cardType:
        $ref: '#/definitions/CreditCardType'
      challengeRequest:
        type: string
        example: "ewogICAiYW.......MjJjMGVjIgp9"
      acsUrl:
        type: string
        example: "https://test.modirum.com/dstests/ACSEmu2"
      iframeContent:
        type: string
        example: "<iframe></iframe>"
      termUrl:
        type: string
        example: "https://mydomain/3dstest?transactionId=292bb6b886fc4446894f878b7e32bd5e"
      isThreeDSMethodCompleted:
        type: boolean
        example: true
      isAuthenticationCompleted:
        type: boolean
        example: true
      cavv:
        type: string
        description: Card authenticaion verificaiton value
      threeDSVersion:
        type: string
      expiryDateTime:
        description: 3DS challenge transaction expiry date time.
        type: string
        readOnly: true
        format: date-time
        example: "2020-01-01T16:06:05Z"
      eci:
        type: string
        description: Electronic Commerce Indicator value

#-------------------------------------
# Common Models
#-------------------------------------
  DeviceInfo:
    description: Request origin device details
    type: object
    required:
      - id
      - kind
    properties:
      id:
        description: Unique Id for the device. Value should not contain line feeds, carriage returns, tabs, leading or trailing spaces, or multiple spaces.
        type: string
        example: "537edec8-d33e-4ee8-93a7-b9f61876950c"
      kind:
        description: Possible values are mobile, wearable, automobile, embedded,desktop, other.
        type: string
        example: "mobile"
      details:
        title: deviceData
        description: Device data information from multiple providers.
        type: array
        minItems: 0
        uniqueItems: true
        items:
          description: Collection of device data
          type: object
          properties:
            provider:
              description: Identifies the provider of the data and is often used when decrypting data on the server.
              type: string
              example: "InAuth"
            dataCapture:
              description: Device data captured as a bundle and transmitted as an encrypted and/or specifically formated string.
              type: object
              properties:
                rawData:
                  description: Device capture - raw data blob
                  type: string
                  example: "aaaaaXREUVZGRlFY...aMV"
                dataEventId:
                  description: Event identifier used map state on the server.
                  type: string
                  example: "BB8E4E92...Fz1E063113"
                captureTime:
                  description: Device data capture time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
                  type: string
                  format: date-time
                  example: "2016-04-16T16:06:05Z"
            dataStatic:
              description: Device static details
              type: object
              properties:
                os:
                  description: Device OS name
                  type: string
                  example: "Android 5.1.1 Lollipop"
                osVersion:
                  description: Device OS version
                  type: string
                  example: "5.1.1 Lollipop"
                model:
                  description: Device model
                  type: string
                  example: "XT1540"
                type:
                  description: Device type
                  type: string
                  example: "Moto G"
            dataDynamic:
              description: Device location details
              type: object
              properties:
                latitude:
                  description: Device position - latitude at the time of the data event
                  type: string
                  example: "13.0827 N"
                longitude:
                  description: Device position - longitude at the time of the data event
                  type: string
                  example: "80.2707 E"
                ipAddress:
                  description: IP address
                  type: string
                  example: "172.27.37.221"
                captureTime:
                  description: Device data capture time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
                  type: string
                  format: date-time
                  example: "2016-04-16T16:06:05Z"
            dataApplication:
              description: Mobile application specific data
              type: object
              properties:
                version:
                  description: Mobile application version.
                  type: string
                  format: sting
                  example: "1.0.0"
                name:
                  description: Mobile application name.
                  type: string
                  format: sting
                  example: "aplication-name"
                country:
                  description: Mobile application store country.
                  type: string
                  format: sting
                  example: "US"
      additionalInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
    example:
      {
      id: "537edec8-d33e-4ee8-93a7-b9f61876950c",
      kind: "mobile",
      details: [{
        provider: "InAuth",
        dataCapture: {
          rawData: "aaaaaXREUVZGRlFY...aMV",
          dataEventId: "BB8E4E92...Fz1E063113",
          captureTime: "2016-04-16T16:06:05Z"
        },
        dataStatic: {
           os: "Android 5.1.1 Lollipop",
           osVersion: "5.1.1 Lollipop",
           model: "XYX-1",
           Type: "Moto G"
          },
        dataDynamic: {
          latitude: "13.0827 N",
          longitude: "80.2707 E",
          ipAddress: "172.27.37.221",
          captureTime: "2016-04-16T16:06:05Z"
          }
      }],
      additionalInfo: [{
         name: "some-key",
         value: "some-value"
      }]
    }

  Error:
    description: Model for error messaging
    type: object
    properties:
      code:
        type: string
        description: Uniquely identifies an error condition. Client applications need to read and handle errors based on this.
      message:
        type: string
        description: A generic description of the error condition.
      category:
        type: string
        description: The resource associated with the error condition.
      developerInfo:
        type: object
        description: Information that needs to be understood by the client developers and should not be interpreted for application processing.
        properties:
          developerMessage:
            type: string
            description: An elaborative description of the error description.
          moreInfo:
            type: string
            description: Link to the error in Developer page.
          fieldError:
            description: Detailed information about message format errors.
            type: array
            items:
              properties:
                field:
                  description: The property or attribute associated with the error
                  type: string
                message:
                  description: Information specific to a property or attribute.
                  type: string
      hostExtraInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
      threeDSecureInfo:
        $ref: '#/definitions/ThreeDSecure'
      _links:
        type: array
        items:
          $ref: '#/definitions/Link'

    example:
      code: "40000"
      message: "Example Error"
      category: "example"
      developerInfo:
        developerMessage: "Invalid Message format in request payload"
        moreInfo: "https://www.example.com/errors/40000"
        fieldError:
          - field: "example id"
            message: "exampleId is mandatory"

#-------------------------------------
# ENUM Models
#-------------------------------------
  CreditCardType:
    description: Indicates the type of credit account association
    type: string
    enum:
      - AMEX
      - DISCOVER
      - MASTERCARD
      - PLCC
      - VISA
      - OTHER

  ReferenceTokenType:
    description: Indicates the purpose of token.
    type: string
    enum:
      - FORMAT_PRESERVING_MULTI_USE
      - FORMAT_PRESERVING_SINGLE_USE
      - CLAIM_CHECK_NONCE
      - RANDOM_MULTI_USE
      - RANDOM_SINGLE_USE
      - CLAIM_CHECK_NONCE_WITH_PINCAPTURE

  TokenStatus:
    type: string
    enum:
      - ACTIVE
      - EXPIRED
    readOnly: true

#-------------------------------------
# Responses
#-------------------------------------
responses:

  TokenCreated:
    description: Resource created
    headers:
      Location:
        type: string
        description: Location of newly created resource.
    schema:
      $ref: '#/definitions/Token'

  ThirdPartyTokenCreated:
    description: Resource created
    schema:
      $ref: '#/definitions/ThirdPartyToken'

  OK:
    description: OK
    schema:
      $ref: '#/definitions/Token'

  NoContent:
    description: The request succeeded but there’s really nothing to show.

  BadRequest:
    description: Bad request
    schema:
      $ref: '#/definitions/Error'

  Unauthorized:
    description: Unauthorized

  NotFound:
    description: Not Found - The requested resource doesn't exist.
    schema:
      $ref: '#/definitions/Error'

  Conflict:
    description: Conflict - The requested operation conflicts with the current state of the identified resource.
    schema:
      $ref: '#/definitions/Error'

  ServerError:
    description: An unexpected server error occured.
    schema:
      $ref: '#/definitions/Error'

#-------------------------------------
# Parameter Models
#-------------------------------------
parameters:
  AcceptLanguageParam:
    name: Accept-Language
    description: The Accept-Language header contains information about the language preference of a user. This HTTP header is useful to multilingual sites for deciding the best language to serve to the client. i.e en-US,fr-CA
    in: header
    type: string

  ApiKeyParam:
    name: Api-Key
    description: An API key is a string value passed by a client app to the API proxies. The key uniquely identifies the client app.
    in: header
    required: true
    type: string

  AuthorizationParam:
    name: Authorization
    description: 'Authorization information for the request. Format- `HMAC {hmacToken}`'
    in: header
    required: true
    type: string

  ClientTokenParam:
    name: Client-Token
    description: Used to pass the original client OAuth token information given in a client-credentials flow.  This field is only used when the server is making the request and needs to link the transaction to a specific client.  Format- `Bearer {access_token}`
    in: header
    type: string

  MerchantIdParam:
    name: Merchant-Id
    description: Merchant Id contains information about the merchant identifier
    in: header
    type: string

  GrantTypeParam:
    name: GrantType
    in: header
    required: true
    type: string
    description: Only supported value `client_credentials`.

  TimestampParam:
    name: Timestamp
    description: Epoch timestamp in the request initiating system
    in: header
    required: true
    type: string

#-------------------------------------
# Document Change Log
# 0.2.2
#     - No Changes
# 0.2.1
#     - Added Walmart pay as fundingSource
#     - Added SEC code for ACH
#     - Added EBT as funding source
#     - Added Merchant id as header field
#     - Added asset provider field in the ACH
# 0.2.0
#     - Added order window
#     - Added PAN type and BIN
#     - Added Expiry Date to InApp entities
#     - Added Developer Email in ApplePay/GooglePay/SamsungPay objects
#     - Added ECIIndicator in ApplePay/GooglePay/SamsungPay objects
#     - Added local payment methods for Ideal and Bancontact
#     - Added 'OTHER' CreditCardType
#     - Added fields in ThreeDSecure object
#     - Added Price tier in POSItem
# 0.1.9
#     - Added External Customer ID as refund request body
#     - OfferRealizationType enum - Add TRANSACTION_LEVEL
#     - Updated Reward transactionLevel to add priceAdjustments
#     - Updated PriceAdjustment to add maxQuantity
#     - Added fulfillment status check
#     - Changed fulfillmentStatus from enum to string
#     - Added Fulfillment Event Type
#     - Added MID to Payment
#     - Added AmountSplitInfo for tip processing
#     - Added fulfillmentInstructions to fulfillments.
#     - Added OfferStatus in the PriceAdjustments
#     - Added washcodes under POSItem
# 0.1.8
#     - Initial version
#     - Added account type for ACH
#     - Added available offers in merchant order object
#     - Added NVP list to order
#     - Added Line Item Note and Line Item NVP list
#-------------------------------------
openapi: 3.0.1
info:
  title: uCom Order Services
  description: uCom Ordering and Payment API
  version: 0.2.2
servers:
  - url: https://int.api.firstdata.com/ucom
tags:
  - name: Orders
    description: Operations and details about orders orchestration

paths:
  /v1/orders:
    get:
      x-group-name: Order Services
      x-proxy-name: Return all orders
      tags:
        - Orders
      description: Returns all orders, but result set may be limited by server
      parameters:
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/AuthorizationParam'
        - $ref: '#/components/parameters/ClientTokenParam'
        - $ref: '#/components/parameters/AcceptLanguageParam'
        - $ref: '#/components/parameters/OrderStatusParam'
        - $ref: '#/components/parameters/ExternalCustomerIdParam'
        - $ref: '#/components/parameters/SubMerchantIdParam'

      responses:
        200:
          description: Order List Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MerchantOrder'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      x-group-name: Order Services
      x-proxy-name: Return order information
      tags:
        - Orders
      parameters:
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/AuthorizationParam'
        - $ref: '#/components/parameters/ClientTokenParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/AcceptLanguageParam'
        - $ref: '#/components/parameters/SubMerchantIdParam'

      requestBody:
        description: Order information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantOrder'
        required: true
      responses:
        201:
          description: Order Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantOrder'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: payload

  /v1/orders/{orderId}:
    get:
      x-group-name: Order Services
      x-proxy-name: Get order Id
      tags:
        - Orders
      parameters:
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/AuthorizationParam'
        - $ref: '#/components/parameters/ClientTokenParam'
        - $ref: '#/components/parameters/AcceptLanguageParam'
        - $ref: '#/components/parameters/OrderIdParam'
        - $ref: '#/components/parameters/ExternalCustomerIdParam'
        - $ref: '#/components/parameters/IncludeFullfillmentStatusParam'
        - $ref: '#/components/parameters/SubMerchantIdParam'

      responses:
        200:
          description: Order Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantOrder'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      x-group-name: Order Services
      x-proxy-name: Update existing order

      description: update existing order
      tags:
        - Orders
      parameters:
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/AuthorizationParam'
        - $ref: '#/components/parameters/ClientTokenParam'
        - $ref: '#/components/parameters/AcceptLanguageParam'
        - $ref: '#/components/parameters/OrderIdParam'
        - $ref: '#/components/parameters/SubMerchantIdParam'

      requestBody:
        description: Order information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantOrder'
        required: true
      responses:
        204:
          description: No Response
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: payload

  /v1/orders/{orderId}/payments:
    post:
      x-group-name: Order Services
      x-proxy-name: Post payment information
      tags:
        - Orders
      parameters:
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/AuthorizationParam'
        - $ref: '#/components/parameters/ClientTokenParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/AcceptLanguageParam'
        - $ref: '#/components/parameters/OrderIdParam'
        - $ref: '#/components/parameters/SubMerchantIdParam'

      requestBody:
        description: Payment information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderPayment'
        required: true
      responses:
        200:
          description: Order Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPayment'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: payload

  /v1/orders/{orderId}/cancel:
    post:
      x-group-name: Order Services
      x-proxy-name: Order cancellation
      tags:
        - Orders
      description: Order cancelation request
      parameters:
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/AuthorizationParam'
        - $ref: '#/components/parameters/ClientTokenParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/AcceptLanguageParam'
        - $ref: '#/components/parameters/OrderIdParam'
        - $ref: '#/components/parameters/SubMerchantIdParam'

      requestBody:
        description: Order cancelation information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCancel'
        required: true
      responses:
        200:
          description: Order Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCancel'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: payload

  /v1/orders/{orderId}/refund:
    post:
      x-group-name: Order Services
      x-proxy-name: Order Refund
      tags:
        - Orders
      description: Order refund callback. This API can be used by merchants only
      parameters:
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/AuthorizationParam'
        - $ref: '#/components/parameters/ClientTokenParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/AcceptLanguageParam'
        - $ref: '#/components/parameters/OrderIdParam'
        - $ref: '#/components/parameters/SubMerchantIdParam'

      requestBody:
        description: Payment information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRefund'
        required: true
      responses:
        200:
          description: Order Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantOrder'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: payload

  /v1/orders/{orderId}/fulfillment:
    post:
      x-group-name: Order Services
      x-proxy-name: Oreder fulfillment
      tags:
        - Orders
      description: Order fulfillment callback. This API can be used by merchants only
      parameters:
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/AuthorizationParam'
        - $ref: '#/components/parameters/ClientTokenParam'
        - $ref: '#/components/parameters/ClientRequestIdParam'
        - $ref: '#/components/parameters/AcceptLanguageParam'
        - $ref: '#/components/parameters/OrderIdParam'
        - $ref: '#/components/parameters/SubMerchantIdParam'

      requestBody:
        description: Payment information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderFulfillment'
        required: true
      responses:
        200:
          description: Order Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderFulfillment'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: payload

components:
  schemas:
    ACH:
      description: Information about an ACH account
      type: object
      properties:
        accountNumber:
          type: string
          description: Unique number identifying the ACH account provided by Financial institution.
          example: '92658250156'
        routingNumber:
          type: string
          description: Number to identify the financial institution
          example: '999999999'
        secCode:
          type: string
          description: SEC Code is optional data, It is specifically required for ACH account which is ruled by NACHA compliance.
        cardNumber:
          description: ACH Card number, can only be sent when vaulting an account.  This field will NOT be present in responses.
          type: string
          example: "9111111111111111"
        cardType:
          $ref: '#/components/schemas/AchCardType'
        securityCode:
          type: string
          description: Code to validate the ACH account, like micro deposit or security code.
          example: '278356'
        alias:
          description: Last four values of the cardNumber
          type: string
          readOnly: true
          example: "1111"
        enrollmentStatus:
          $ref: '#/components/schemas/AchEnrollmentStatus'
        enrollmentSubStatuses:
          type: array
          items:
            $ref: '#/components/schemas/AchEnrollmentSubStatus'
        accountType:
          $ref: '#/components/schemas/AchAccountType'
        bankName:
          type: string
          description: Name of the bank associated with the ACH account
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        assetProvider:
          $ref: '#/components/schemas/AssetProvider'

    Address:
      type: object
      properties:
        type:
          type: string
          description: Canonical type values of "work", "home", "billing" and "other".
        streetAddress:
          type: string
          description: The full street address component, which may include house
            number, street name, P.O. box, and multi-line extended street address
            information.
        locality:
          type: string
          description: The city or locality component.
        region:
          type: string
          description: The state or region component.
        postalCode:
          type: string
          description: The zip code or postal code component.
        country:
          type: string
          description: The country name component.  When specified, the value MUST
            be in ISO 3166-1 "alpha-2" code format; e.g., the United States and Sweden
            are "US" and "SE", respectively.
        formatted:
          type: string
          description: The full mailing address, formatted for display or use with
            a mailing label.
        primary:
          type: boolean
          description: Indicates if this is the default address for the associated
            resource. It only has meaning when used in a set or array of addresses.
      description: A physical mailing address for this user.
      example:
        type: work
        streetAddress: 100 Universal City Plaza
        locality: Hollywood
        region: CA
        postalCode: "91608"
        country: US
        formatted: |-
          100 Universal City Plaza
          Hollywood, CA 91608 US
        primary: true

    AndroidPay:
      type: object
      properties:
        data:
          type: string
          example: "3CguW5ecfTzO...03d"
        signature:
          type: string
          example: "MIAGCSqGSIb......AAAA=="
        decryptAlias:
          description: field of the public key certificate.
          type: string
          example: "oslo.com.xxx.Prod_mer"
        dPanLast4:
          type: string
          example: "9876"
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        header:
          type: object
          properties:
            ephemeralPublicKey:
              type: string
              example: "MFkwEw...03d"
            publicKeyHash:
              type: string
              example: "+vbONw...IM="
        token:
          $ref: '#/components/schemas/ReferenceToken'
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'

    AmazonPay:
      type: object
      properties:
        token:
          type: string
          example: "292bb6b886fc4446894f878b7e32bd5e"
        chargeId:
          type: string
          example: "73883992djj39939djj929992jj08838"
        chargeReferenceId:
          type: string
          example: "8jdw838dhhskk9299299299ueuuue838"
        credit:
          $ref: '#/components/schemas/Credit'

    AmountSplitInfo:
      description: Amount split up based on service selected at the time of transaction
      type: object
      properties:
        orderAmount:
          type: number
          format: double
          minimum: 0
          exclusiveMinimum: true
        deliveryServiceFee:
          type: number
          format: double
          minimum: 0
          exclusiveMinimum: true
        driverTip:
          type: number
          format: double
          minimum: 0
          exclusiveMinimum: true
        taxAmount:
          type: number
          format: double
          minimum: 0
          exclusiveMinimum: true
        vatAmount:
          type: number
          format: double
          minimum: 0
          exclusiveMinimum: true
        corporateFee:
          type: number
          format: double
          minimum: 0
          exclusiveMinimum: true

    AssetProvider:
      type: object
      properties:
        providerName:
          type: string
          example: "coinbase"

    ApplePay:
      type: object
      properties:
        version:
          type: string
          example: "EC_v1"
        developerEmail:
          type: string
        signature:
          type: string
          example: "MIAGCSqGSIb......AAAA=="
        decryptAlias:
          description: field of the public key certificate.
          type: string
          example: "oslo.com.xxx.Prod_mer"
        data:
          type: string
          example: "3CguW5ecfTz...Yuhw="
        applicationData:
          type: string
          example: "VEVTVA=="
        dPanLast4:
          type: string
          example: "9876"
        bin:
          type: string
        eciIndicator:
          type: string
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        panType:
          type: string
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        header:
          type: object
          properties:
            applicationDataHash:
              type: string
            ephemeralPublicKey:
              type: string
              example: "MFkwEwYHKoZIzj0CIKoZIz.....NBQQ=="
            publicKeyHash:
              type: string
              example: "+vbONwRlVqJX0........"
            transactionId:
              type: string
              example: "3827c5a02638.....34d50"
        token:
          $ref: '#/components/schemas/ReferenceToken'
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'

    ApprovedAmount:
      title: Approved Amount
      description: Amount authorized according to the request type [auth, capture, refund, etc] in lower denomination.  The value is read-only on payment requests.  For a void, the value is required.
      type: number
      format: double
      minimum: 0
      exclusiveMinimum: true
      example: "500.00"

    Bancontact:
      type: object
      properties:
        returnUrl:
          type: string
        deepLink:
          type: string
        alias:
          type: string
          example: "9876"
        cardType:
          $ref: '#/components/schemas/CreditCardType'
          example: "VISA"

    Credit:
      description: Information on a credit account
      type: object
      properties:
        cardNumber:
          description: Primary account number, can only be sent when vaulting an account.  This field will NOT be present in responses.
          type: string
          example: "4111111111111111"
        bin:
          type: string
        nameOnCard:
          description: Name as printed on physical card or on virtual account
          type: string
          example: "John Smith"
        alias:
          description: Last four values of the cardNumber
          type: string
          readOnly: true
          example: "1111"
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        cardSubType:
          description: Merchant or brand specific information about the type of account
          type: string
          example: "ABCD"
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        securityCode:
          type: string
          example: "444"
        sequenceNumber:
          description: Applicable only for private-label accounts
          type: string
          example: "01"
        token:
          $ref: '#/components/schemas/ReferenceToken'

    CustomerLocation:
      type: object
      description: Order customer location
      properties:
        address:
          $ref: '#/components/schemas/Address'
        venueDetails:
          $ref: '#/components/schemas/VenueDetails'

    DeliveryLocation:
      type: object
      description: Order delivery location
      properties:
        address:
          $ref: '#/components/schemas/Address'
        venueDetails:
          $ref: '#/components/schemas/VenueDetails'

    MerchantOrderWindow:
      description: Merchant ordering window details
      type: object
      properties:
        isOrderdingEnabled:
          type: boolean
          description: Indicates if orders are allowed
        capacityPerWindow:
          type: integer
        startTime:
          type: string
          description: The hour and minutue in format HH:mm
        endTime:
          type: string
          description: The hour and minutue in format HH:mm
        interval:
          type: integer
          description: Interval between order windows, ex. 15 minutes
        windowCloseOffset:
          type: integer
          description: The time in minutes to stop allowing orders before the window closes. ex. -5 = orders not allowd 5 minutes before window ends. ex. 0 = orders allowed until the end_time
        windows:
          type: array
          items:
            $ref: '#/components/schemas/OrderWindow'

    OrderWindow:
      description: Order window details
      type: object
      properties:
        startTime:
          type: string
        endTime:
          type: string
        orderCount:
          type: integer
        isAlcoholAllowed:
          type: boolean

    EBT:
      description: Electronic Benefits Transfer card information
      type: object
      properties:
        cardNumber:
          description: Primary account number, can only be sent when vaulting an account.  This field will NOT be present in responses.
          type: string
        nameOnCard:
          description: Name as printed on physical card or on virtual account
          type: string
        alias:
          description: Last four values of the cardNumber
          type: string
          readOnly: true
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        bin:
          description: BIN of EBT card
          type: string
          readOnly: true
        pin:
          description: PIN for EBT card
          type: string
        pinCaptureId:
          description: Session id used on client side SDK to capture the card pin
          type: string
        transactionId:
          description: The unique transaction ID
          type: string
        balance:
          $ref: '#/components/schemas/EBTBalance'
        metadata:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
          uniqueItems: true
        token:
          $ref: '#/components/schemas/ReferenceToken'

    EBTBalance:
      type: object
      properties:
        cashBalance:
          type: number
        cashCurrencyCode:
          $ref: '#/components/schemas/ISO-4217'
        snapBalance:
          type: number
        snapCurrencyCode:
          $ref: '#/components/schemas/ISO-4217'
      readOnly: true

    Email:
      description: Email address for the user.
      type: object
      properties:
        type:
          description: The "type" sub-attribute is used to provide a classification meaningful to the (human) user.  The user interface should encourage the use of basic values of "work", "home", and "other" and MAY allow additional type values to be used at the discretion of the service client.
          type: string
        value:
          description: The value SHOULD be specified according to RFC5321.
          type: string
        primary:
          description: Defines if this entry is to be used as the primary or default for the user.
          type: boolean
          default: false
      example:
        value: "bjensen@example.com"
        type: "work"
        primary: true

    ExpiryDate:
      description: Contains account expiration data and needs to either send the values in individual fields OR as a singleValue.
      type: object
      properties:
        month:
          type: string
          description: Month format 'MM'
          pattern: "[0-9]{2,2}"
          minLength: 2
          maxLength: 2
          example: "09"
        year:
          type: string
          description: Year format 'YY'
          pattern: "[0-9]{2,2}"
          minLength: 2
          maxLength: 2
          example: "20"
        singleValue:
          type: string
          description: Month and year together, 'MMYY' or 'MMYYYY'.  If the latter format, the string will be parsed and validated per the given format.  Any other format will be rejected.
          minLength: 4
          maxLength: 6

    FdCustomerId:
      title: FD Customer ID
      type: string
      description: FD customer identifier tied to the vaulted accounts.
      example: cuid-0987613457398475

    Fleet:
      description: Information on a Fleet account
      type: object
      properties:
        cardNumber:
          description: Primary account number, can only be sent when vaulting an account.  This field will NOT be present in responses.
          type: string
        nameOnCard:
          description: Name as printed on physical card or on virtual account
          type: string
        alias:
          description: Card alias
          type: string
          readOnly: true
        cardType:
          $ref: '#/components/schemas/FleetCardType'
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        securityCode:
          type: string
        sequenceNumber:
          description: Sequence number of the card.
          type: string
        token:
          $ref: '#/components/schemas/ReferenceToken'

    FulfillmentEvent:
      description: Contains history fulfillment status information.
      type: object
      properties:
        eventStatus:
          description: A fulfillment event status change.
          type: string
          example: "State Changed"
        eventTime:
          description: Date and time of fulfillment event.
          type: string
          format: date-time
          example: "2016-04-16T16:06:05Z"
        additionalInfo:
          type: array
          items:
            $ref: '#/components/schemas/NVP'

    FundingSource:
      description: Holds information about funding source for the payment transaction. Can hold only one above the provided funding sources.
      type: object
      properties:
        saveToVault:
          description: Flag to indicate if the provided payment method should be vaulted to a secure repository for future use for the given customer.
          type: boolean
          default: false
          example: false
        type:
          $ref: '#/components/schemas/FundingSourceType'
        vaultedAccount:
          $ref: '#/components/schemas/VaultedAccount'
        credit:
          $ref: '#/components/schemas/Credit'
        prepaid:
          $ref: '#/components/schemas/Prepaid'
        fleet:
          $ref: '#/components/schemas/Fleet'
        applePay:
          $ref: '#/components/schemas/ApplePay'
        androidPay:
          $ref: '#/components/schemas/AndroidPay'
        samsungPay:
          $ref: '#/components/schemas/SamsungPay'
        paypal:
          $ref: '#/components/schemas/Paypal'
        token:
          $ref: '#/components/schemas/ReferenceToken'
        visaCheckout:
          $ref: '#/components/schemas/VisaCheckout'
        googlePay:
          $ref: '#/components/schemas/GooglePay'
        masterpass:
          $ref: '#/components/schemas/MasterPass'
        ach:
          $ref: '#/components/schemas/ACH'
        venmo:
          $ref: '#/components/schemas/Venmo'
        vipps:
          $ref: '#/components/schemas/Vipps'
        amazonPay:
          $ref: '#/components/schemas/AmazonPay'
        ideal:
          $ref: '#/components/schemas/Ideal'
        bancontact:
          $ref: '#/components/schemas/Bancontact'
        walmartPay:
          $ref : '#/components/schemas/WalmartPay'
        ebt:
          $ref : '#/components/schemas/EBT'

    GooglePay:
      description: Google Payment specific information
      type: object
      properties:
        version:
          description: Identifies encryption/signing scheme.
          type: string
          example: "EC_v1"
        developerEmail:
          type: string
        signature:
          description: Signature to verify Google initiated message.
          type: string
          example: "MIAGCSqGSIb......AAAA=="
        data:
          description: Data includes encryptedMessage, ephemeralPublicKey, tag.
          type: string
          example: "{\"encryptedMessage\":\"8nx...u003d\",\"ephemeralPublicKey\":\"BGH...u003d\",\"tag\":\"nvm...\\u003d\"}"
        dPanLast4:
          type: string
          example: "9876"
        bin:
          type: string
        eciIndicator:
          type: string
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        panType:
          type: string
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        token:
          $ref: '#/components/schemas/ReferenceToken'
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'

    Ideal:
      type: object
      properties:
        returnUrl:
          type: string
        deepLink:
          type: string

    ISO-4217:
      description: ISO 4217 currency format in which the balance is represented.
      type: object
      properties:
        code:
          type: string
          default: "USD"
          example: "USD"
        number:
          type: integer
          default: 840
          example: 840
        digits:
          type: integer
          default: 2
          example: 2
        currency:
          type: string
          default: "US Dollar"
          example: "US Dollar"

    Link:
      required:
        - href
        - rel
      type: object
      properties:
        href:
          type: string
          description: URL to linked resource.
          format: uri
        rel:
          type: string
          description: Defines the type of link relationship to current resource.
          example: self
          enum:
            - current.page
            - previous.page
            - next.page
            - self
        method:
          type: string
          description: Defines the HTTP method for the given href.
          example: GET
          default: GET
        id:
          type: string
          description: Identifier to the resource.
          example: 415e5cf6bfdb11e8a355529269fb1459
      description: Model to communicate linked resources.

    Loyalty:
      description: Information about a Loyalty account.
      type: object
      properties:
        accountId:
          description: Account identifier, can be used for traditional card number or any alphanumeric value.  For example, a unique value not shown on the card, email address, phone number, social id, etc.
          type: string
          example: "email-id@example.com"
        cardNumber:
          description: Card number of loyalty account. The accountId parameter superscedes this field.  This field is ignored when the request is to create a new acccount.
          type: string
          example: '905960447'
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        alias:
          description: Last four values of the cardNumber
          type: string
          readOnly: true
          example: "1111"
        accountStatus:
          $ref: '#/components/schemas/LoyaltyAccountStatus'
        loyaltyProgram:
          $ref: '#/components/schemas/LoyaltyProgram'
        pin:
          description: Security pin number
          type: string
        communications:
          description: Methods the account onwer has agreed to be contacted
          type: object
          properties:
            email:
              type: boolean
            phone:
              type: boolean
            sms:
              type: boolean
        commonFlags:
          description: Common true/false settings on an account
          type: object
          properties:
            tncAccepted:
              type: boolean
            canEarn:
              type: boolean
            canRedeem:
              type: boolean
            isChildAccount:
              type: boolean
            isVirtualAccount:
              description: Indicates if the account has an associated plastic card or not.
              type: boolean
        balance:
          $ref: '#/components/schemas/LoyaltyBalance'
        token:
          $ref: '#/components/schemas/ReferenceToken'
        metadata:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
          uniqueItems: true

    LoyaltyBalance:
      type: object
      properties:
        balance:
          type: number
          example: 2634
        minRedeemUnits:
          type: number
          example: 200
        maxRedeemUnits:
          type: number
          example: 2000
        unitType:
          $ref: '#/components/schemas/BalanceUnitTypes'
        conversionRatio:
          type: number
          example: 100
        currencyValue:
          type: number
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'
      readOnly: true

    LoyaltyProgram:
      description: Value object to hold a list of loyalty items.
      type: object
      properties:
        programId:
          description: Unique identifier used to provide link between applications across disparate systems.
          type: string
        hostProgramId:
          description: Loyalty program Id used by the host (cloud) solution. Not in used in uCom system. For future use.
          type: string
        programName:
          description: Loyalty program name. Common name for the given loyalty program
          type: string
        programDesc:
          description: Used to describe the loyalty program and perhaps used to display to the client.
          type: string
        programProvider:
          description: Sponsor of the loyalty program.
          type: string
        loyaltyType:
          $ref: '#/components/schemas/LoyaltyType'
        programStatus:
          $ref: '#/components/schemas/ProgramStatus'


    LoyaltyTransactionInfo:
      description: Information about a Loyalty transaction as part of petro transaction.
      type: object
      properties:
        fundingSource:
          description: Information about Loyalty account associated with the petro transaction.
          type: object
          properties:
            loyalty:
              $ref: '#/components/schemas/Loyalty'
            vaultedAccount:
              $ref: '#/components/schemas/VaultedAccount'
            type:
              $ref: '#/components/schemas/FundingSourceType'
        requestedRedeemUnits:
          type: number
          description: Units requested by user to redeem/burn as part of transaction.
        unitsRewarded:
          type: number
          description: Units earned/rewarded as part of transaction.
        unitsRedeemed:
          type: number
          description: Units burned/redeemed as part of transaction.
        previousBalanceUnits:
          type: number
          description: Previous balance units of an account.
        newBalanceUnits:
          type: number
          description: New balance units of an account.
        unitsValue:
          type: number
          format: double
          description: Units discounted / paid currency value as part of transaction
        hostExtraInfo:
          description: Additional host specific information presented as name-value pairs
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
        status:
          $ref: '#/components/schemas/LoyaltyTransactionStatus'
        receiptData:
          $ref: '#/components/schemas/ReceiptData'

    MerchantOrder:
      description: Order consists of order itself, payment transaction, one or multiple fullfilments, refunds and cancelation information
      type: object
      properties:
        merchantId:
          type: string
          description: Merchant ID for the specific order product provider
          example: "12345"
        orderId:
          type: string
          description: Identifier for order record
        orderNumber:
          type: string
        orderName:
          type: string
        note:
          type: string
        orderStatus:
          type: string
          description: Order status information
        externalCustomerId:
          type: string
          description: A String that is an identifier for the resource as defined by the provisioning client. While the server does not enforce uniqueness, it is assumed that the value's uniqueness is controlled by the client setting the value.
        fdCustomerId:
          $ref: '#/components/schemas/FdCustomerId'
        contact:
          $ref: '#/components/schemas/OrderContact'
        customerLocation:
          $ref: '#/components/schemas/CustomerLocation'
        deliveryLocation:
          $ref: '#/components/schemas/DeliveryLocation'
        merchantOrderWindow:
          $ref: '#/components/schemas/MerchantOrderWindow'
        items:
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
        loyaltyTransactions:
          type: array
          items:
            $ref: '#/components/schemas/LoyaltyTransactionInfo'
        isTaxIncluded:
          type: boolean
        totalPrice:
          $ref: '#/components/schemas/Price'
        subTotalPrice:
          $ref: '#/components/schemas/Price'
        totalTax:
          $ref: '#/components/schemas/TaxDetails'
        totalItemsPrice:
          $ref: '#/components/schemas/Price'
        tipAmount:
          $ref: '#/components/schemas/Price'
        closedDate:
          description: Date and time of order closed date.
          type: string
          format: date-time
          example: "2016-04-16T16:06:05Z"
        createdDate:
          description: Date and time of order created date.
          type: string
          format: date-time
          example: "2016-04-16T16:06:05Z"
        updatedDate:
          description: Date and time of order updated date.
          type: string
          format: date-time
          example: "2016-04-16T16:06:05Z"
        processedDate:
          description: Date and time of order processed date.
          type: string
          format: date-time
          example: "2016-04-16T16:06:05Z"
        cancel:
          $ref:  '#/components/schemas/OrderCancel'
        paymentStatus:
          $ref: '#/components/schemas/PaymentStatus'
        priceAdjustments:
          type: array
          items:
            $ref: '#/components/schemas/PriceAdjustment'
        payments:
          type: array
          items:
            $ref: '#/components/schemas/OrderPayment'
        fulfillments:
          type: array
          items:
            $ref: '#/components/schemas/OrderFulfillment'
        refunds:
          type: array
          items:
            $ref: '#/components/schemas/OrderRefund'
        availableOffers:
          type: array
          description: Available promotional offers.
          items:
            $ref: '#/components/schemas/PromotionalOffer'
        additionalInfo:
          type: array
          items:
            $ref: '#/components/schemas/NVP'

    MasterPass:
      description: MasterPass information
      type: object
      properties:
        transactionId:
          description: Identifier corresponding to an account enrolled with MasterPass system.
          type: string
          example: "1234732704291071701"
        credit:
          $ref: '#/components/schemas/Credit'

    NVP:
      title: Name and Value pair.
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        valueAsList:
          minItems: 0
          type: array
          items:
            type: string

    OfferStatus:
      description: Maintain the status of stackable promotions
      type: object
      properties:
        code:
          description: Indicates offer status code, NOT_ACTIVATED | ACTIVATED | REDEEMED | DECLINED | CANCELLED | FAILED
          type: string
        statusInfo:
          description: Details about what to display, images, messaging, etc.
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
          uniqueItems: true

    OrderFulfillment:
      description: Order fulfillment information
      type: object
      properties:
        fulfillmentId:
          type: string
        destination:
          $ref: '#/components/schemas/DeliveryLocation'
        fulfillmentStatus:
          type: string
          example: Ready
        lineItems:
          type: array
          description: lineItems for fulfillment
          items:
            $ref: '#/components/schemas/LineItem'
        createdDate:
          description: Date and time of fulfillment created date.
          type: string
          format: date-time
          example: "2016-04-16T16:06:05Z"
        updatedDate:
          description: Date and time of fulfillment update date.
          type: string
          format: date-time
          example: "2016-04-16T16:06:05Z"
        fulfillmentEvents:
          type: array
          description: Fulfillment event information
          items:
            $ref: "#/components/schemas/FulfillmentEvent"
        fulfillmentInstructions:
          type: string
          description: Instructions to aid in providing fulfillment.
          example: By the 3rd row

    OrderCancel:
      type: object
      description: Order cancelation information
      properties:
        cancelId:
          type: string
        note:
          type: string
        cancelReason:
          type: string
        createdDate:
          description: Date and time of cancel created date.
          type: string
          format: date-time
          example: "2016-04-16T16:06:05Z"
        updatedDate:
          description: Date and time of cancel update date.
          type: string
          format: date-time
          example: "2016-04-16T16:06:05Z"

    OrderContact:
      type: object
      description: Order contact information
      properties:
        name:
          type: string
        phone:
          $ref: '#/components/schemas/Phone'
        email:
          $ref: '#/components/schemas/Email'

    OrderPayment:
      type: object
      properties:
        fdCustomerId:
          $ref: '#/components/schemas/FdCustomerId'
        externalCustomerId:
          type: string
          description: A String that is an identifier for the resource as defined by the provisioning client. While the server does not enforce uniqueness, it is assumed that the value's uniqueness is controlled by the client setting the value.
        paymentTransaction:
          $ref: '#/components/schemas/PaymentTransaction'
        loyaltyTransaction:
          $ref: '#/components/schemas/LoyaltyTransactionInfo'

    OrderRefund:
      type: object
      properties:
        externalCustomerId:
          type: string
          description: A String that is an identifier for the resource as defined by the provisioning client. While the server does not enforce uniqueness, it is assumed that the value's uniqueness is controlled by the client setting the value.
        refundId:
          type: string
        note:
          type: string
        refundReason:
          type: string
        isFullRefund:
          type: boolean
          description: is it full refund or partial
        refundAmount:
          $ref: '#/components/schemas/Price'
        lineItems:
          type: array
          description: refunded lineItems
          items:
            $ref: '#/components/schemas/LineItem'
        amountSplitInfo:
          $ref: '#/components/schemas/AmountSplitInfo'
        createdDate:
          description: Date and time of cancel created date.
          type: string
          format: date-time
          example: "2016-04-16T16:06:05Z"
        updatedDate:
          description: Date and time of cancel update date.
          type: string
          format: date-time
          example: "2016-04-16T16:06:05Z"

    Payment:
      type: object
      description: Payment details information
      properties:
        merchantId:
          description: Merchant identifier where the transaction is being performed.
          type: string
          example: "M117008616001"
        rank:
          type: integer
          description: Payment funding source hierarchy
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'
        requestedAmount:
          $ref: '#/components/schemas/RequestedAmount'
        approvedAmount:
          $ref: '#/components/schemas/ApprovedAmount'
        paymentStatus:
          $ref: '#/components/schemas/PaymentStatus'
        fundingSource:
          $ref: '#/components/schemas/FundingSource'
        fdSaleId:
          description: Unique Identifier provided by payment platform for a payment sale transaction.
          type: string
          readOnly: true
          example: "8a34144657d0aa6e0157d3808ed000f2"
        amountSplitInfo:
          $ref: '#/components/schemas/AmountSplitInfo'

    PaymentTransaction:
      type: object
      description: A full payment request with one or more sources
      properties:
        payments:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
        requestedAmount:
          $ref: '#/components/schemas/RequestedAmount'
        approvedAmount:
          $ref: '#/components/schemas/ApprovedAmount'
        paymentStatus:
          $ref: '#/components/schemas/PaymentStatus'
        transactionDateTime:
          description: Date and time of the transaction.
          type: string
          readOnly: true
          format: date-time
          example: "2016-04-16T16:06:05Z"
        createdDateTime:
          description: Date and time of resource creation.
          type: string
          readOnly: true
          format: date-time
          example: "2016-04-16T16:06:05Z"
        lastUpdatedDateTime:
          description: Last updated Date and time of resource.
          type: string
          readOnly: true
          format: date-time
          example: "2016-04-16T16:06:05Z"

    Paypal:
      description: Information about a Paypal account.
      type: object
      properties:
        payerId:
          type: string
          description: Paypal generated Unique identfier for a Paypal account.
          example: "LPLWNMTBWMFAY"
        nonce:
          type: string
          description: Paypal generated nonce.
          example: "ab12-124C-ab12-124C-ab12-124C"
        token:
          $ref: '#/components/schemas/ReferenceToken'
        credit:
          $ref: '#/components/schemas/Credit'

    Phone:
      description: Phone number for the user.
      type: object
      properties:
        value:
          description: The value SHOULD be specified according to the format defined in RFC3966, e.g., 'tel:+1-201-555-0123'.
          type: string
        type:
          description: Often has typical values of "work","billing", "home", "mobile", "fax", "pager", and "other" and MAY allow more types to be defined by the service client.
          type: string
        extension:
          description: Defines the extension of the phone number.
          type: string
        primary:
          description: Defines if this entry is to be used as the primary or default for the user.
          type: boolean
          default: false
      example:
        value: 555-555-5555
        type: billing
        extension: "2145"

    POSItem:
      description: Structure to support passing POS sale info as part of the sale request.
      type: object
      properties:
        itemDescription:
          type: string
          example: Standard Wash
        itemPrice:
          type: number
          format: double
          example: 7.5
        unitOfMeasurement:
          type: string
          example: each
        unitsSold:
          type: number
          format: double
          example: 1
        totalItemSaleAmount:
          type: number
          format: double
          example: 7.5
        originalItemPrice:
          type: number
          format: double
          example: 7.50
        originalTotalSaleAmount:
          type: number
          format: double
          example: 7.50
        posCodeFormat:
          type: string
          example: plu
        posCode:
          type: string
          example: '102'
        posCodeModifier:
          type: string
          example: '1'
        productCode:
          type: string
          example: '345'
        vatAmount:
          type: number
          format: double
          example: 7.5
        vatIdNumber:
          type: string
          example: '1'
        tax:
          type: array
          items:
            $ref: '#/components/schemas/TaxDetails'
        type:
          $ref: '#/components/schemas/SaleItemType'
        serviceLevelCode:
          $ref: '#/components/schemas/ServiceLevelCode'
        priceAdjustments:
          type: array
          items:
            $ref: '#/components/schemas/PriceAdjustment'
        washCodes:
          type: array
          items:
            $ref: '#/components/schemas/WashCode'
        priceTier:
          type: string

    Price:
      description: A monetary value with currency
      type: object
      properties:
        amount:
          minimum: 0
          type: number
          format: double
          example: 15.35
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'

    PriceAdjustment:
      description: Structure to support providing price adjustment for sale item.
      type: object
      properties:
        adjustmentId:
          type: string
          example: "discount prepay"
        productCode:
          type: string
          example: "941"
        programID:
          type: string
          example: "P66"
        reason:
          type: string
          example: "loyaltyOffer"
        amount:
          type: number
          format: double
          example: 0.1
        percentage:
          type: number
          format: float
          example: 10
        itemPrice:
          type: number
          format: double
          example: 7.50
        unitOfMeasurement:
          type: string
          example: "each"
        unitsSold:
          type: number
          format: double
          example: 1
        rebateLabel:
          type: string
          example: "HostDiscount"
        maxQuantity:
          type: number
          format: double
          example: 7.50
        offerStatus:
          $ref: '#/components/schemas/OfferStatus'

    Prepaid:
      description: Prepaid (a.k.a. gift) account information
      type: object
      properties:
        cardNumber:
          description: Prepaid card number.
          type: string
          example: "6759649826438453"
        cardSubType:
          description: Merchant or brand specific information about the type of account.Issuer/group information.
          type: string
          example: "Merchant Brand"
        securityCode:
          description: Security code of prepaid card
          type: string
          example: "345"
        promotionCode:
          description: Promotion code for prepaid account activation.
          type: string
        alias:
          type: string
          readOnly: true
          example: "8453"
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        balance:
          $ref: '#/components/schemas/PrepaidBalance'
        token:
          $ref: '#/components/schemas/ReferenceToken'

    PrepaidBalance:
      description: Details of balance in the prepaid card.
      required:
        - currentBalance
        - currencyCode
      properties:
        currentBalance:
          description: The current balance of prepaid card in lower denomination of the currency.
          type: number
        beginBalance:
          description: The balance of prepaid card before a transaction in lower denomination of the currency.
          type: number
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'
        currencyType:
          $ref: '#/components/schemas/CurrencyPairType'
      readOnly: true
      example:
        currentBalance: 1100
        beginBalance: 1000
        currencyCode: 840
        currencyType: "BASE"

    ProductAddition:
      description: Product addition, like corn pizza topping, or extended warranty
      type: object
      properties:
        productAdditionId:
          type: string
          example: avx-b4zd
        productAdditionName:
          type: string
          example: corn
        price:
          $ref: '#/components/schemas/Price'

    ProductAdditionGroup:
      description: Product additions group contains simullar additions, like pizza toppings
      type: object
      properties:
        productAdditionGroupId:
          type: string
          example: a-123-b4zd
        productAdditionGroupName:
          type: string
          example: toppings
        minSelections:
          description: minimum allowed selections. 0 or null means optional. 1 means user has to make at least 1 choice
          type: integer
        maxSelections:
          description: maximum allowed selections. 0 or null means no limitation
          type: integer
        productAdditions:
          type: array
          items:
            $ref: '#/components/schemas/ProductAddition'

    ProductGroup:
      description: A collection represents a grouping of products (items) that a merchant can create to organize them or make them easier to browse. Collection may contain other collections or items
      type: object
      properties:
        productGroupId:
          type: string
        productGroupName:
          type: string

    PromotionalOffer:
      description: Offer opportunity details
      type: object
      properties:
        offerReferenceId:
          description: Unique identifier for an offer.
          type: string
        offerName:
          description: Common name for the reward.
          type: string
        offerDescription:
          description: Description about the reward details.
          type: string
        type:
          description: Type can be used to distinguish offers, i.e EARN
        offerProvider:
          description: Provider name of the offer
          type: string
        partnerGroup:
          description: Partner group names where the offer can be obtained
          type: array
          minItems: 0
          items:
            type: string
        offerMessage:
          description: The offer information that is for the client to see on the user-interface.  This is most often set by the host system.
          type: string
        effectiveDateTime:
          description: Starting time for a reward validity.
          type: string
          format: date-time
        expiryDateTime:
          description: Ending time for a reward to be applied.
          type: string
          format: date-time
        visibleFrom:
          description: Date when offer will start the visibility.
          type: string
          format: date-time
        visibleTo:
          description: Date when offer will end the visibility.
          type: string
          format: date-time
        registrationFrom:
          description: Date when offer start with the registration.
          type: string
          format: date-time
        registrationTo:
          description: Date when offer end with the registration.
          type: string
          format: date-time
        promotionId:
          description: Links to associated promotion if it applies.
          type: string
        isExclusive:
          description: Indicator if offer can be combined with other offers or is mutually exclusive.
          type: boolean
        userAcceptanceRequired:
          description: Indicator if a user has to accept the offer before it can be applied to a transaction or accrued in an account.
          type: boolean
        offerStatus:
          $ref: '#/components/schemas/OfferStatus'
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'
        qualifiers:
          description: Conditions that must be met for the rewared to be awarded.
          type: object
          properties:
            currency:
              type: array
              items:
                properties:
                  currencyType:
                    $ref: '#/components/schemas/ValueAddCurrencyType'
                  value:
                    description: Value of the reward in the associated currency.
                    type: string
            saleItems:
              type: array
              items:
                $ref: '#/components/schemas/POSItem'
        offerCostInfo:
          description: Offer cost details.
          type: object
          properties:
            currency:
              type: array
              items:
                properties:
                  currencyType:
                    $ref: '#/components/schemas/ValueAddCurrencyType'
                  value:
                    description: Value of the Offer cost associated with currency.
                    type: string
            saleItems:
              type: array
              items:
                $ref: '#/components/schemas/POSItem'
        reward:
          $ref: '#/components/schemas/Reward'
        metadata:
          description: Details about what to display, images, messaging, etc.
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
          uniqueItems: true
        offerRealizationType:
          $ref: '#/components/schemas/OfferRealizationType'

    LineItem:
      description: Structure to support passing POS sale info as part of the sale request.
      type: object
      properties:
        itemId:
          type: string
        itemNumber:
          type: string
        itemDescription:
          type: string
          example: Standard Wash (or) Unleaded Petrol
        itemPrice:
          type: number
          format: double
          example: 7.5
        unitOfMeasurement:
          type: string
          example: each
        quantity:
          type: number
          format: double
          example: 1
        totalItemSaleAmount:
          type: number
          format: double
          example: 7.5
        productId:
          type: string
          example: "102"
        fulfillmentStatus:
          type: string
        fulfillmentQuantity:
          type: string
        tax:
          type: array
          items:
            $ref: '#/components/schemas/TaxDetails'
        priceAdjustments:
          type: array
          items:
            $ref: '#/components/schemas/PriceAdjustment'
        productAdditionGroup:
          type: array
          items:
            $ref: '#/components/schemas/ProductAdditionGroup'
        note:
          type: string
          example: "Item 1"
        additionalInfo:
          type: array
          items:
            $ref: '#/components/schemas/NVP'

    ReferenceToken:
      description: Surrogate value used to represent a handle to an account without sharing PCI/PII data to look it up.
      type: object
      properties:
        tokenId:
          description: Actual token value
          type: string
          example: "292bb6b886fc4446894f878b7e32bd5e"
        tokenProvider:
          description: Indicates what system is the originator of the token
          type: string
          example: "TRANS_ARMOR"
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        tokenType:
          $ref: '#/components/schemas/ReferenceTokenType'

    ReceiptData:
      description: Container for the receipt lines sent from the site box as printed on the paper receipt.
      type: object
      properties:
        receiptSection:
          type: string
          description: Indicates the section of the receipt the text represents [e.g. full, vat, eft, loyalty, etc]
        receiptLines:
          $ref: '#/components/schemas/ReceiptLine'

    ReceiptLine:
      description: A line of text on a receipt.
      type: object
      properties:
        plain:
          type: array
          items:
            type: string
        formatted:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              value:
                type: string
              order:
                type: number
              row:
                type: number
              column:
                type: number
              charSet:
                type: number
              color:
                type: string
              alignment:
                type: string
              height:
                type: string
              width:
                type: string
              charSet1:
                type: string
              charSet2:
                type: string
              charSet3:
                type: string

    RequestedAmount:
      title: Requested Amount
      description: Requested amount for the given request type [auth, capture, refund, etc] in lower denomination.
      type: number
      format: double
      minimum: 0
      exclusiveMinimum: true
      example: '500.00'

    Reward:
      description: Reward details
      type: object
      properties:
        rewardId:
          description: Unique identifier for the reward instance
          type: string
        rewardDescription:
          description: reward description
          type: string
        effectiveDateTime:
          description: Starting time for a reward validity.
          type: string
          format: date-time
        expiryDateTime:
          description: Ending time for a reward to be applied.
          type: string
          format: date-time
        offerReferenceId:
          description: Link to the offer that provided the opportunity for a customer to receive the reward.
          type: string
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'
        values:
          description: Medium of exchange for the value.
          type: object
          properties:
            transactionLevel:
              type: array
              items:
                properties:
                  currencyType:
                    $ref: '#/components/schemas/ValueAddCurrencyType'
                  value:
                    description: Value of the reward in the associated currency.
                    type: string
                  realizationCode:
                    $ref: '#/components/schemas/RewardRealizationCode'
                  priceAdjustments:
                    type: array
                    items:
                      $ref: '#/components/schemas/PriceAdjustment'
            lineItemLevel:
              type: array
              items:
                properties:
                  saleItem:
                    $ref: '#/components/schemas/POSItem'
                  realizationCode:
                    $ref: '#/components/schemas/RewardRealizationCode'
        dispensationCode:
          $ref: '#/components/schemas/RewardDispensationCode'

    TaxDetails:
      description: Tax details.
      type: object
      properties:
        code:
          type: string
          example: TX01
        description:
          type: string
          example: Sales Tax
        amount:
          type: string
          example: '7.50'
        rate:
          type: string
          example: '13.5'

    SamsungPay:
      type: object
      properties:
        version:
          type: string
          example: "EC_v1"
        developerEmail:
          type: string
        data:
          type: string
          example: "3CguW5ecfTzO...03d"
        signature:
          type: string
          example: "MIAGCSqGSIb......AAAA=="
        decryptAlias:
          description: field of the public key certificate.
          type: string
          example: "oslo.com.xxx.Prod_mer"
        dPanLast4:
          type: string
          example: "9876"
        bin:
          type: string
        eciIndicator:
          type: string
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        panType:
          type: string
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        header:
          type: object
          properties:
            ephemeralPublicKey:
              type: string
              example: "MFkwEw...03d"
            publicKeyHash:
              type: string
              example: "+vbONw...IM="
        token:
          $ref: '#/components/schemas/ReferenceToken'
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'

    VaultedAccount:
      description: FD Account information
      type: object
      properties:
        fdAccountId:
          description: Unique identifier for a customer account vaulted with uCom
          type: string
        securityCode:
          description: Card Verificatiion value.
          type: string
        status:
          $ref: '#/components/schemas/AccountStatus'
        type:
          $ref: '#/components/schemas/AccountType'
      example:
        fdAccountId: "003a502c72a211e78cf7a6006ad3dba0"

    Venmo:
      description: Information about a Venmo account.
      type: object
      properties:
        nonce:
          type: string
          description: Venmo generated nonce.
          example: "ab12-124C-ab12-124C-ab12-124C"
        token:
          $ref: '#/components/schemas/ReferenceToken'

    Vipps:
      description: Information about a Vipps account. 'credit' is a read-only property.
      type: object
      required:
        - paymentId
      properties:
        paymentId:
          type: string
          description: The payment_id of Vipps. Used to correlate with the webhook of an open order.
          example: "ab12-124C-ab12-124C-ab12-124C"
        credit:
          $ref: '#/components/schemas/Credit'

    VisaCheckout:
      description: Visa Checkout information
      type: object
      properties:
        callId:
          description: Identifier corresponding to an account enrolled with Visa Checkout system.
          type: string
          example: "1234732704291071701"
        credit:
          $ref: '#/components/schemas/Credit'


    VenueDetails:
      type: object
      description: Venue detail information
      properties:
        venueFloor:
          type: string
        venueRoom:
          type: string
        venueSuite:
          $ref: '#/components/schemas/VenueSuite'
        venueSection:
          $ref: '#/components/schemas/VenueSection'
        venueTable:
          $ref: '#/components/schemas/VenueTable'

    VenueSection:
      description: Venue section details
      type: object
      properties:
        venueSectionId:
          type: string
        venueSectionName:
          type: string
        description:
          type: string
        pickupLocationId:
          type: string
        inseatConcessionId:
          type: string
        venueSectionType:
          type: string
        rows:
          type: array
          items:
            $ref: '#/components/schemas/VenueRow'

    VenueRow:
      description: Venue row details
      type: object
      properties:
        venueRowid:
          type: string
        venueRowName:
          type: string
        seats:
          type: array
          items:
            type: string

    VenueSuite:
      description: Venue suite details
      type: object
      properties:
        venueSuiteId:
          type: string
        venueSuiteName:
          type: string
        description:
          type: string
        merchantIds:
          type: array
          items:
            type: string

    VenueTable:
      description: Venue table details
      type: object
      properties:
        venueTableId:
          type: string
        venueTableName:
          type: string
        description:
          type: string
        merchantIds:
          type: array
          items:
            type: string

    WashCode:
      description: Purchased wash information.
      type: object
      properties:
        code:
          description: Wash code generated by the POS system.
          type: string
        description:
          description: Wash code description generated by the POS system.
          type: string
        expiration:
          description: Expiration date for the purchased wash code
          type: string
          format: date-time
        message:
          description: Field to carry message from site system for display to customer.
          type: string

    WalmartPay:
      type: object
      properties:
        credit:
          $ref: '#/components/schemas/Credit'
        token:
          $ref: '#/components/schemas/ReferenceToken'

    Error:
      type: object
      properties:
        code:
          type: string
          description: Uniquely identifies an error condition. Client applications
            need to read and handle errors based on this.
        message:
          type: string
          description: A generic description of the error condition.
        category:
          type: string
          description: The resource associated with the error condition.
        developerInfo:
          type: object
          properties:
            developerMessage:
              type: string
              description: An elaborative description of the error description.
            moreInfo:
              type: string
              description: Link to the error in Developer page.
            fieldError:
              type: array
              description: Detailed information about message format errors.
              items:
                type: object
                properties:
                  field:
                    type: string
                    description: The property or attribute associated with the error
                  message:
                    type: string
                    description: Information specific to a property or attribute.
          description: Information that needs to be understood by the client developers
            and should not be interpreted for application processing.
        hostExtraInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
      description: Model for error messaging
      example:
        code: "40000"
        message: Example Error
        category: example
        developerInfo:
          developerMessage: Invalid Message format in request payload
          moreInfo: https://www.example.com/errors/40000
          fieldError:
            - field: example id
              message: exampleId is mandatory


    #-------------------------------------
    # ENUM Models
    #-------------------------------------

    AccountStatus:
      description: Indicates the status of an account.
      type: string
      readOnly: true
      enum:
        - ACTIVE
        - INACTIVE
        - TERMINATED
        - ISSUER_TERMINATED
        - WALLET_TERMINATED
        - PENDING

    AccountType:
      description: Type of Account vaulted
      type: string
      readOnly: true
      enum:
        - CREDIT
        - PREPAID
        - ACH
        - LOYALTY
        - PAYPAL
        - MASTERPASS
        - VENMO

    AchCardType:
      description: Indicates the type of ACH card association
      type: string
      enum:
        - CONNECTPAY

    AchAccountType:
      description: ACH account type
      type: string
      enum:
        - CHECKING
        - SAVINGS

    AchEnrollmentStatus:
      description: Indicates ACH enrollment status
      type: string
      enum:
        - ACTIVE
        - PENDING
        - PENDING_LINKED_ACCOUNT

    AchEnrollmentSubStatus:
      description: Indicates ACH enrollment pending status
      type: string
      enum:
        - PENDING_BANK_VALIDATION
        - PENDING_PIN_VALIDATION
        - PENDING_EMAIL_VALIDATION
        - PENDING_PHONE_VALIDATION
        - PENDING_SOFT_BLOCK
        - PENDING_HARD_BLOCK

    BalanceUnitTypes:
      description: Indicator to determine how to display balances
      type: string
      enum:
        - CENTS
        - MILES
        - POINTS
        - STARS
        - LITRES

    CreditCardType:
      title: Credit Card Type
      description: Indicates the type of credit account association
      type: string
      enum:
        - AMEX
        - DISCOVER
        - MASTERCARD
        - PLCC
        - VISA
        - OTHER

    CurrencyPairType:
      description: Describes the type of currency where BASE represents the currency from Host and TRANSACTION represents the one requested.
      type: string
      enum:
        - BASE
        - TRANSACTION

    FleetCardType:
      description: Indicates the type of fleet account association
      type: string
      enum:
        - WEX

    FundingSourceType:
      description: Describes the type of Funding source
      type: string
      readOnly: true
      enum:
        - VAULTED_ACCOUNT
        - CREDIT
        - PREPAID
        - APPLE_PAY
        - ANDROID_PAY
        - PAYPAL
        - TOKEN
        - NONCE
        - VCO
        - VENMO
        - LOYALTY
        - AMAZON_PAY
        - VIPPS
        - FLEET
        - BANCONTACT
        - IDEAL
        - WALMART_PAY
        - EBT

    LoyaltyType:
      description: Identifier to indicate type of Loyalty program being registered.
      type: string
      enum:
        - LOCAL
        - NATIONAL

    LoyaltyAccountStatus:
      description: Indicator of the account state as indicated by the loyalty issuer.
      type: string
      enum:
        - ENROLLED
        - ANONYMOUS
        - PARTIAL
        - PENDING_DATA
        - PENDING_VERIFICATION
        - INACTIVE
        - BLOCKED

    LoyaltyTransactionStatus:
      description: Indicates the status of an loyalty operation.
      type: string
      readOnly: true
      enum:
        - AUTHORIZED
        - AUTH_CANCELLED
        - AUTH_DECLINED
        - COMPLETED
        - COMPLETION_DECLINED
        - PENDING

    OfferRealizationType:
      description: Identifier to indicate the type of a Loyalty Offer.
      type: string
      enum:
        - SPLIT_PAYMENT
        - PRE_ITEM_AMOUNT_OFF
        - POST_ITEM_AMOUNT_OFF
        - PRICE_ROLLBACK
        - HBD
        - TRANSACTION_LEVEL

    PaymentStatus:
      title: Payment Status
      description: Indicates the status of an payment operation.
      type: string
      readOnly: true
      enum:
        - APPROVED
        - DECLINED
        - CANCELLED
        - CHALLENGED
        - PENDING

    ProgramStatus:
      description: Indicates if the given loyalty program is still active or not.
      type: string
      enum:
        - ENABLED
        - DISABLED
        - CONTRACTED_ONLY

    SaleItemType:
      description: Indicates the type of item
      type: string
      enum:
        - FUEL
        - CARWASH
        - OTHER

    ServiceLevelCode:
      description: Indicates service level code.
      type: string
      default: 'S'
      enum:
        - S
        - F
        - N
        - X

    ReferenceTokenType:
      description: Indicates if the given loyalty program is still active or not.
      type: string
      enum:
        - FORMAT_PRESERVING_MULTI_USE
        - FORMAT_PRESERVING_SINGLE_USE
        - CLAIM_CHECK_NONCE
        - RANDOM_MULTI_USE
        - RANDOM_SINGLE_USE
        - CLAIM_CHECK_NONCE_WITH_PINCAPTURE

    RewardDispensationCode:
      description: Indicates when a reward is to be redeemed.
      type: string
      enum:
        - INSTANT
        - DEFERRED

    RewardRealizationCode:
      description: Indicates how a reward is applied to a transaction.
      type: string
      enum:
        - NEW_PRICE
        - PERCENT_OFF
        - AMOUNT_OFF
        - EARN
        - REDEEM

    ValueAddCurrencyType:
      description: Indicates the type of units used to show value of a reward.
      type: string
      enum:
        - MONEY
        - POINTS
        - DISTANCE
        - COUNTS
        - VOLUMES
        - VISITS

  #-------------------------------------
  # Responses
  #-------------------------------------
  responses:
    NoContent:
      description: The request succeeded but there’s really nothing to show.

    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Unauthorized:
      description: Unauthorized

    NotFound:
      description: Not Found - The requested resource doesn't exist.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Conflict:
      description: Conflict - The requested operation conflicts with the current state of the identified resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    ServerError:
      description: An unexpected server error occured.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  #-------------------------------------
  # Parameter Models
  #-------------------------------------
  parameters:
    AcceptLanguageParam:
      name: Accept-Language
      description: The Accept-Language header contains information about the language preference of a user. This HTTP header is useful to multilingual sites for deciding the best language to serve to the client. i.e en-US,fr-CA
      in: header
      schema:
        type: string

    ApiKeyParam:
      name: Api-Key
      description: An API key is a string value passed by a client app to the API proxies. The key uniquely identifies the client app.
      in: header
      required: true
      schema:
        type: string

    AuthorizationParam:
      name: Authorization
      description: Authorization information for the request. Format- `HMAC {hmacToken}`
      in: header
      required: true
      schema:
        type: string

    ClientTokenParam:
      name: Client-Token
      description: Used to pass the original client OAuth token information given in a client-credentials flow.  This field is only used when the server is making the request and needs to link the transaction to a specific client.  Format- `Bearer {access_token}`
      in: header
      schema:
        type: string

    ClientRequestIdParam:
      name: Client-Request-Id
      description: Contains a unique ID generated by the client that can be used for enforcing idempotency on POST actions. POSTs are inherently non-idempotent and submitting the exact same request multiple times would create duplicate resources.
        Note:- Omitting this header increases the risk of duplicate transactions, which for payments could cost the client issues like double-billing.
      in: header
      required: true
      schema:
        type: string

    ExternalCustomerIdParam:
      name: externalCustomerId
      description: External customer identifier
      in: query
      required: false
      schema:
        type: string

    SubMerchantIdParam:
      name: Sub-Merchant-Id
      description: Sub Merchant Id contains information about the merchant identifier
      in: header
      schema:
        type: string

    IncludeFullfillmentStatusParam:
      name: includeFullfillmentStatus
      description: Specifies to include fulfillment status check parameter
      in: query
      required: false
      schema:
        type: boolean

    OrderStatusParam:
      name: orderStatus
      description: Order status details
      in: query
      required: true
      schema:
        type: string

    OrderIdParam:
      name: orderId
      description: Unique identifer for the Order
      in: path
      required: true
      schema:
        type: string

    TimestampParam:
      name: Timestamp
      description: Epoch timestamp in the request initiating syste
      in: header
      required: true
      schema:
        type: string

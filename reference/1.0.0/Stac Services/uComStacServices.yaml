#-------------------------------------
# Document Change Log
# 0.2.2
#     - No Changes
# 0.2.1
#     - Added Walmart pay as fundingSource
#     - Added SEC code for ACH
#     - Added EBT funding source
#     - Added Merchant id as header field
#     - Added asset provider field in the ACH
# 0.2.0
#     - Added 'OTHER' CreditCardType
#     - Added fields in ThreeDSecure object
#     - Added Price tier in POSItem
#     - Added PAN type and BIN
#     - Added Expiry Date to InApp entities
#     - Added Developer Email in ApplePay/GooglePay/SamsungPay objects
#     - Added ECIIndicator in ApplePay/GooglePay/SamsungPay objects
#     - Added local payment methods for Ideal and Bancontact
# 0.1.9
#     - OfferRealizationType enum - Add TRANSACTION_LEVEL
#     - Updated Reward transactionLevel to add priceAdjustments
#     - Updated PriceAdjustment to add maxQuantity
#     - Added OfferStatus in the PriceAdjustments
#     - Added washcodes under POSItem
# 0.1.8
#     - Added New API for STAC creation
#     - Added 3ds web support
#     - Added webhook notification url
#     - Added account type for ACH
#     - Added percentage currency type
#-------------------------------------
swagger: '2.0'
info:
  version: 0.2.2
  title: uCom Stac Services
  description: Use these services for creating STAC based on funding source, loyalty and offers information.
tags:
  - name: stac
host: int.api.firstdata.com
basePath: /ucom
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1/stac:
    post:
      tags:
        - stac
      summary: Create QR code based on funding source.
      description: Must include a funding source.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/StacRequest'
      responses:
        201:
          $ref: '#/responses/StacCreated'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/ServerError'

definitions:
#-------------------------------------
# Operational Models
#-------------------------------------
  StacRequest:
    type: object
    properties:
      fdCustomerId:
        $ref: '#/definitions/FdCustomerId'
      stac:
        $ref: '#/definitions/Stac'
      deviceInfo:
        $ref: '#/definitions/DeviceInfo'

#-------------------------------------
# Resource Models
#-------------------------------------
  ACH:
    description: Information about an ACH account
    type: object
    properties:
      accountNumber:
        type: string
        description: Unique number identifying the ACH account provided by Financial institution.
        example: '92658250156'
      routingNumber:
        type: string
        description: Number to identify the financial institution
        example: '999999999'
      secCode:
        type: string
        description: SEC Code is optional data, It is specifically required for ACH account which is ruled by NACHA compliance.
      cardNumber:
        description: ACH Card number, can only be sent when vaulting an account.  This field will NOT be present in responses.
        type: string
        example: "9111111111111111"
      cardType:
        $ref: '#/definitions/AchCardType'
      securityCode:
        type: string
        description: Code to validate the ACH account, like micro deposit or security code.
        example: '278356'
      alias:
        description: Last four values of the cardNumber
        type: string
        readOnly: true
        example: "1111"
      enrollmentStatus:
        $ref: '#/definitions/AchEnrollmentStatus'
      enrollmentSubStatuses:
        type: array
        items:
          $ref: '#/definitions/AchEnrollmentSubStatus'
      accountType:
        $ref: '#/definitions/AchAccountType'
      bankName:
        type: string
        description: Name of the bank associated with the ACH account
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      assetProvider:
        $ref: '#/definitions/AssetProvider'

  Address:
    description: A physical mailing address for this user.
    type: object
    properties:
      type:
        description: Canonical type values of "work", "home", "billing" and "other".
        type: string
      streetAddress:
        description: The full street address component, which may include house number, street name, P.O. box, and multi-line extended street address information.
        type: string
      locality:
        description: The city or locality component.
        type: string
      region:
        description: The state or region component.
        type: string
      postalCode:
        description: The zip code or postal code component.
        type: string
      country:
        description: The country name component.  When specified, the value MUST be in ISO 3166-1 "alpha-2" code format; e.g., the United States and Sweden are "US" and "SE", respectively.
        type: string
      formatted:
        description: The full mailing address, formatted for display or use with a mailing label.
        type: string
      primary:
        description: Indicates if this is the default address for the associated resource. It only has meaning when used in a set or array of addresses.
        type: boolean
    example:
      type: "work"
      streetAddress: "100 Universal City Plaza"
      locality: "Hollywood"
      region: "CA"
      postalCode: "91608"
      country: "US"
      formatted: "100 Universal City Plaza\nHollywood, CA 91608 US"
      primary: true

  AndroidPay:
    type: object
    properties:
      data:
        type: string
        example: "3CguW5ecfTzO...03d"
      signature:
        type: string
        example: "MIAGCSqGSIb......AAAA=="
      decryptAlias:
        description: field of the public key certificate.
        type: string
        example: "oslo.com.xxx.Prod_mer"
      dPanLast4:
        type: string
        example: "9876"
      cardType:
        $ref: '#/definitions/CreditCardType'
        example: "VISA"
      header:
        type: object
        properties:
          ephemeralPublicKey:
            type: string
            example: "MFkwEw...03d"
          publicKeyHash:
            type: string
            example: "+vbONw...IM="
      token:
        $ref: '#/definitions/ReferenceToken'
      billingAddress:
        $ref: '#/definitions/Address'
      billingPhone:
        $ref: '#/definitions/Phone'

  AmazonPay:
    type: object
    properties:
      token:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      chargeId:
        type: string
        example: "73883992djj39939djj929992jj08838"
      chargeReferenceId:
        type: string
        example: "8jdw838dhhskk9299299299ueuuue838"
      credit:
        $ref: '#/definitions/Credit'

  ApplePay:
    type: object
    properties:
      version:
        type: string
        example: "EC_v1"
      developerEmail:
        type: string
      signature:
        type: string
        example: "MIAGCSqGSIb......AAAA=="
      decryptAlias:
        description: field of the public key certificate.
        type: string
        example: "oslo.com.xxx.Prod_mer"
      data:
        type: string
        example: "3CguW5ecfTz...Yuhw="
      applicationData:
        type: string
        example: "VEVTVA=="
      dPanLast4:
        type: string
        example: "9876"
      bin:
        type: string
      eciIndicator:
        type: string
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      panType:
        type: string
      cardType:
        $ref: '#/definitions/CreditCardType'
        example: "VISA"
      header:
        type: object
        properties:
          applicationDataHash:
            type: string
          ephemeralPublicKey:
            type: string
            example: "MFkwEwYHKoZIzj0CIKoZIz.....NBQQ=="
          publicKeyHash:
            type: string
            example: "+vbONwRlVqJX0........"
          transactionId:
            type: string
            example: "3827c5a02638.....34d50"
      token:
        $ref: '#/definitions/ReferenceToken'
      billingAddress:
        $ref: '#/definitions/Address'
      billingPhone:
        $ref: '#/definitions/Phone'

  ApprovedAmount:
    title: Approved Amount
    description: Amount authorized according to the request type [auth, capture, refund, etc] in lower denomination.  The value is read-only on payment requests.  For a void, the value is required.
    type: number
    format: double
    minimum: 0
    exclusiveMinimum: true
    example: "500.00"

  AssetProvider:
    type: object
    properties:
      providerName:
        type: string
        example: "coinbase"

  Bancontact:
    type: object
    properties:
      returnUrl:
        type: string
      deepLink:
        type: string
      alias:
        type: string
        example: "9876"
      cardType:
        $ref: '#/definitions/CreditCardType'
        example: "VISA"

  Credit:
    description: Information on a credit account
    type: object
    properties:
      cardNumber:
        description: Primary account number, can only be sent when vaulting an account.  This field will NOT be present in responses.
        type: string
        example: "4111111111111111"
      bin:
        type: string
      nameOnCard:
        description: Name as printed on physical card or on virtual account
        type: string
        example: "John Smith"
      alias:
        description: Last four values of the cardNumber
        type: string
        readOnly: true
        example: "1111"
      cardType:
        $ref: '#/definitions/CreditCardType'
      cardSubType:
        description: Merchant or brand specific information about the type of account
        type: string
        example: "ABCD"
      billingAddress:
        $ref: '#/definitions/Address'
      billingPhone:
        $ref: '#/definitions/Phone'
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      securityCode:
        type: string
        example: "444"
      sequenceNumber:
        description: Applicable only for private-label accounts
        type: string
        example: "01"
      token:
        $ref: '#/definitions/ReferenceToken'

  EBT:
    description: Electronic Benefits Transfer card information
    type: object
    properties:
      cardNumber:
        description: Primary account number, can only be sent when vaulting an account.  This field will NOT be present in responses.
        type: string
      nameOnCard:
        description: Name as printed on physical card or on virtual account
        type: string
      alias:
        description: Last four values of the cardNumber
        type: string
        readOnly: true
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      bin:
        description: BIN of EBT card
        type: string
        readOnly: true
      pin:
        description: PIN for EBT card
        type: string
      pinCaptureId:
        description: Session id used on client side SDK to capture the card pin
        type: string
      transactionId:
        description: The unique transaction ID
        type: string
      balance:
        $ref: '#/definitions/EBTBalance'
      metadata:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
      token:
        $ref: '#/definitions/ReferenceToken'

  EBTBalance:
    type: object
    properties:
      cashBalance:
        type: number
      cashCurrencyCode:
        $ref: '#/definitions/ISO-4217'
      snapBalance:
        type: number
      snapCurrencyCode:
        $ref: '#/definitions/ISO-4217'
    readOnly: true

  Email:
    description: Email address for the user.
    type: object
    properties:
      type:
        description: The "type" sub-attribute is used to provide a classification meaningful to the (human) user.  The user interface should encourage the use of basic values of "work", "home", and "other" and MAY allow additional type values to be used at the discretion of the service client.
        type: string
      value:
        description: The value SHOULD be specified according to RFC5321.
        type: string
      primary:
        description:
          Defines if this entry is to be used as the primary or default for the
          user.
        type: boolean
        default: false
    example:
      value: bjensen@example.com
      type: work
      primary: true

  ExpiryDate:
    description: Contains account expiration data and needs to either send the values in individual fields OR as a singleValue.
    type: object
    properties:
      month:
        type: string
        description: Month format 'MM'
        pattern: "[0-9]{2,2}"
        minLength: 2
        maxLength: 2
        example: "09"
      year:
        type: string
        description: Year format 'YY'
        pattern: "[0-9]{2,2}"
        minLength: 2
        maxLength: 2
        example: "20"
      singleValue:
        type: string
        description: Month and year together, 'MMYY' or 'MMYYYY'.  If the latter format, the string will be parsed and validated per the given format.  Any other format will be rejected.
        minLength: 4
        maxLength: 6

  FdCustomerId:
    title: FD Customer ID
    description: FD customer identifier tied to the vaulted accounts.
    type: string
    example: cuid-0987613457398475

  Fleet:
    description: Information on a Fleet account
    type: object
    properties:
      cardNumber:
        description: Primary account number, can only be sent when vaulting an account.  This field will NOT be present in responses.
        type: string
      nameOnCard:
        description: Name as printed on physical card or on virtual account
        type: string
      alias:
        description: Card alias
        type: string
        readOnly: true
      cardType:
        $ref: '#/definitions/FleetCardType'
      billingAddress:
        $ref: '#/definitions/Address'
      billingPhone:
        $ref: '#/definitions/Phone'
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      securityCode:
        type: string
      sequenceNumber:
        description: Sequence number of the card.
        type: string
      token:
        $ref: '#/definitions/ReferenceToken'

  FleetData:
    description: The Fleet Data Segment for all fleet card transaction requests.
    type: object
    properties:
      odometer:
        description: Identifies the vehicle’s odometer reading keyed in by the customer or clerk.
        type: string
        maxLength: 8
      vehicleNumber:
        description: Identifies the Vehicle Number.
        type: string
        maxLength: 10
      jobNumber:
        description: Identifies the Job Number.
        type: string
        maxLength: 10
      driverIdNumber:
        description: Identifies the unencrypted Driver Number or Identification Number.
        type: string
        maxLength: 10
      fleetEmployeeNumber:
        description: Identifies the Fleet Employee Number.
        type: string
        maxLength: 10
      licenseNumber:
        description: Identifies the License # of the fleet card user.
        type: string
        maxLength: 10
      jobId:
        description: Identifies the Job ID.
        type: string
        maxLength: 12
      departmentNumber:
        description: Identifies the Department #.
        type: string
        maxLength: 12
      customerData:
        description: Identifies the Customer Data.
        type: string
        maxLength: 12
      userId:
        description: Identifies the User ID.
        type: string
        maxLength: 12
      vehicleId:
        description: Identifies the Vehicle ID#.
        type: string
        maxLength: 8
      fleetTag:
        type: array
        items:
          $ref: '#/definitions/FleetTagType'

  FundingSource:
    description: Holds information about funding source for the payment transaction. Can hold only one above the provided funding sources.
    type: object
    properties:
      saveToVault:
        description: Flag to indicate if the provided payment method should be vaulted to a secure repository for future use for the given customer.
        type: boolean
        default: false
        example: false
      type:
        $ref: '#/definitions/FundingSourceType'
      vaultedAccount:
        $ref: '#/definitions/VaultedAccount'
      credit:
        $ref: '#/definitions/Credit'
      prepaid:
        $ref: '#/definitions/Prepaid'
      fleet:
        $ref: '#/definitions/Fleet'
      applePay:
        $ref: '#/definitions/ApplePay'
      androidPay:
        $ref: '#/definitions/AndroidPay'
      samsungPay:
        $ref: '#/definitions/SamsungPay'
      paypal:
        $ref: '#/definitions/Paypal'
      token:
        $ref: '#/definitions/ReferenceToken'
      visaCheckout:
        $ref: '#/definitions/VisaCheckout'
      googlePay:
        $ref: '#/definitions/GooglePay'
      masterpass:
        $ref: '#/definitions/MasterPass'
      ach:
        $ref: '#/definitions/ACH'
      venmo:
        $ref: '#/definitions/Venmo'
      vipps:
        $ref: '#/definitions/Vipps'
      amazonPay:
        $ref: '#/definitions/AmazonPay'
      ideal:
        $ref: '#/definitions/Ideal'
      bancontact:
        $ref: '#/definitions/Bancontact'
      walmartPay:
        $ref : '#/definitions/WalmartPay'
      ebt:
        $ref : '#/definitions/EBT'

  GooglePay:
    description: Google Payment specific information
    type: object
    properties:
      version:
        description: Identifies encryption/signing scheme.
        type: string
        example: "EC_v1"
      developerEmail:
        type: string
      signature:
        description: Signature to verify Google initiated message.
        type: string
        example: "MIAGCSqGSIb......AAAA=="
      data:
        description: Data includes encryptedMessage, ephemeralPublicKey, tag.
        type: string
        example: "{\"encryptedMessage\":\"8nx...u003d\",\"ephemeralPublicKey\":\"BGH...u003d\",\"tag\":\"nvm...\\u003d\"}"
      dPanLast4:
        type: string
        example: "9876"
      bin:
        type: string
      eciIndicator:
        type: string
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      panType:
        type: string
      cardType:
        $ref: '#/definitions/CreditCardType'
        example: "VISA"
      token:
        $ref: '#/definitions/ReferenceToken'
      billingAddress:
        $ref: '#/definitions/Address'
      billingPhone:
        $ref: '#/definitions/Phone'

  Ideal:
    type: object
    properties:
      returnUrl:
        type: string
      deepLink:
        type: string

  ISO-4217:
    description: Holds currency information
    type: object
    properties:
      code:
        type: string
        default: "USD"
        example: "USD"
      number:
        type: integer
        default: 840
        example: 840
      digits:
        type: integer
        default: 2
        example: 2
      currency:
        type: string
        default: "US Dollar"
        example: "US Dollar"

  Loyalty:
    description: Information about a Loyalty account.
    type: object
    properties:
      accountId:
        description: Account identifier, can be used for traditional card number or any alphanumeric value.  For example, a unique value not shown on the card, email address, phone number, social id, etc.
        type: string
        example: "email-id@example.com"
      cardNumber:
        description: Card number of loyalty account. The accountId parameter superscedes this field.  This field is ignored when the request is to create a new acccount.
        type: string
        example: '905960447'
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      alias:
        description: Last four values of the cardNumber
        type: string
        readOnly: true
        example: "1111"
      accountStatus:
        $ref: '#/definitions/LoyaltyAccountStatus'
      loyaltyProgram:
        $ref: '#/definitions/LoyaltyProgram'
      pin:
        description: Security pin number
        type: string
      communications:
        description: Methods the account onwer has agreed to be contacted
        type: object
        properties:
          email:
            type: boolean
          phone:
            type: boolean
          sms:
            type: boolean
      commonFlags:
        description: Common true/false settings on an account
        type: object
        properties:
          tncAccepted:
            type: boolean
          canEarn:
            type: boolean
          canRedeem:
            type: boolean
          isChildAccount:
            type: boolean
          isVirtualAccount:
            description: Indicates if the account has an associated plastic card or not.
            type: boolean
      balance:
        $ref: '#/definitions/LoyaltyBalance'
      token:
        $ref: '#/definitions/ReferenceToken'
      metadata:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true

  LoyaltyTransactionInfo:
    description: Information about a Loyalty transaction as part of petro transaction.
    type: object
    properties:
      fundingSource:
        description: Information about Loyalty account associated with the petro transaction.
        type: object
        properties:
          loyalty:
            $ref: '#/definitions/Loyalty'
          vaultedAccount:
            $ref: '#/definitions/VaultedAccount'
          type:
            $ref: '#/definitions/FundingSourceType'
      requestedRedeemUnits:
        type: number
        description: Units requested by user to redeem/burn as part of transaction.
      unitsRewarded:
        type: number
        description: Units earned/rewarded as part of transaction.
      unitsRedeemed:
        type: number
        description: Units burned/redeemed as part of transaction.
      previousBalanceUnits:
        type: number
        description: Previous balance units of an account.
      newBalanceUnits:
        type: number
        description: New balance units of an account.
      unitsValue:
        type: number
        format: double
        description: Units discounted / paid currency value as part of transaction
      hostExtraInfo:
        description: Additional host specific information presented as name-value pairs
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
      status:
        $ref: '#/definitions/LoyaltyTransactionStatus'
      receiptData:
        $ref: '#/definitions/ReceiptData'

  LoyaltyBalance:
    type: object
    properties:
      balance:
        type: number
        example: 2634
      minRedeemUnits:
        type: number
        example: 200
      maxRedeemUnits:
        type: number
        example: 2000
      unitType:
        $ref: '#/definitions/BalanceUnitTypes'
      conversionRatio:
        type: number
        example: 100
      currencyValue:
        type: number
      currencyCode:
        $ref: '#/definitions/ISO-4217'
    readOnly: true

  LoyaltyProgram:
    description: Value object to hold a list of loyalty items.
    type: object
    properties:
      programId:
        description: Unique identifier used to provide link between applications across disparate systems.
        type: string
      hostProgramId:
        description: Loyalty program Id used by the host (cloud) solution. Not in used in uCom system. For future use.
        type: string
      programName:
        description: Loyalty program name. Common name for the given loyalty program
        type: string
      programDesc:
        description: Used to describe the loyalty program and perhaps used to display to the client.
        type: string
      programProvider:
        description: Sponsor of the loyalty program.
        type: string
      loyaltyType:
        $ref: '#/definitions/LoyaltyType'
      programStatus:
        $ref: '#/definitions/ProgramStatus'
    example:
      programId: "TEST_PROGRAM"
      hostProgramId: "TEST_HOST_PROGRAM"
      programName: "TEST_LOAYLTY_PROGRAM"
      programDesc: "Test loyalty program"
      programProvider: "Test Provider"
      loyaltyType: "LOCAL"
      status: "ENABLED"

  MasterPass:
     description: MasterPass information
     type: object
     properties:
       transactionId:
         description: Identifier corresponding to an account enrolled with MasterPass system.
         type: string
         example: "1234732704291071701"
       credit:
         $ref: '#/definitions/Credit'

  NVP:
    title: Name and Value pair.
    type: object
    properties:
      name:
        type: string
      value:
        type: string
      valueAsList:
        type: array
        minItems: 0
        items:
          type: string

  OfferStatus:
    description: Maintain the status of stackable promotions
    type: object
    properties:
      code:
        description: Indicates offer status code, NOT_ACTIVATED | ACTIVATED | REDEEMED | DECLINED | CANCELLED | FAILED
        type: string
      statusInfo:
        description: Details about what to display, images, messaging, etc.
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true

  Paypal:
    description: Information about a Paypal account.
    type: object
    properties:
      payerId:
        type: string
        description: Paypal generated Unique identfier for a Paypal account.
        example: "LPLWNMTBWMFAY"
      nonce:
        type: string
        description: Paypal generated nonce.
        example: "ab12-124C-ab12-124C-ab12-124C"
      token:
        $ref: '#/definitions/ReferenceToken'
      credit:
        $ref: '#/definitions/Credit'

  Phone:
    description: Phone number for the user.
    type: object
    properties:
      value:
        description: The value SHOULD be specified according to the format defined in RFC3966, e.g., 'tel:+1-201-555-0123'.
        type: string
      type:
        description: Often has typical values of "work","billing", "home", "mobile", "fax", "pager", and "other" and MAY allow more types to be defined by the service client.
        type: string
      extension:
        description: Defines the extension of the phone number.
        type: string
      primary:
        description: Defines if this entry is to be used as the primary or default for the user.
        type: boolean
        default: false
    example:
      value: 555-555-5555
      type: billing
      extension: "2145"

  POSItem:
    description: Structure to support passing POS sale info as part of the sale request.
    type: object
    properties:
      itemDescription:
        type: string
        example: Standard Wash (or) Unleaded Petrol
      itemPrice:
        type: number
        format: double
        example: 7.5
      unitOfMeasurement:
        type: string
        example: each
      unitsSold:
        type: number
        format: double
        example: 1
      totalItemSaleAmount:
        type: number
        format: double
        example: 7.5
      originalItemPrice:
        type: number
        format: double
        example: 7.50
      originalTotalSaleAmount:
        type: number
        format: double
        example: 7.50
      posCodeFormat:
        type: string
        example: plu
      posCode:
        type: string
        example: '102'
      posCodeModifier:
        type: string
        example: '1'
      productCode:
        type: string
        example: "102"
      tax:
        type: array
        items:
          $ref: '#/definitions/TaxDetails'
      type:
          $ref: '#/definitions/POSItemType'
      serviceLevelCode:
          $ref: '#/definitions/ServiceLevelCode'
      priceAdjustments:
        type: array
        items:
          $ref: '#/definitions/PriceAdjustment'
      washCodes:
        type: array
        items:
          $ref: '#/definitions/WashCode'
      priceTier:
        type: string

  Prepaid:
    description: Prepaid (a.k.a. gift) account information
    type: object
    properties:
      cardNumber:
        description: Prepaid card number.
        type: string
        example: "6759649826438453"
      cardSubType:
        description: Merchant or brand specific information about the type of account.Issuer/group information.
        type: string
        example: "Merchant Brand"
      securityCode:
        description: Security code of prepaid card
        type: string
        example: "345"
      promotionCode:
        description: Promotion code for prepaid account activation.
        type: string
      alias:
        type: string
        readOnly: true
        example: "8453"
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      balance:
        $ref: '#/definitions/PrepaidBalance'
      token:
        $ref: '#/definitions/ReferenceToken'

  PrepaidBalance:
    description: Details of balance in the prepaid card.
    required:
      - currentBalance
      - currencyCode
    properties:
      currentBalance:
        description: The current balance of prepaid card in lower denomination of the currency.
        type: number
      beginBalance:
        description: The balance of prepaid card before a transaction in lower denomination of the currency.
        type: number
      currencyCode:
        $ref: '#/definitions/ISO-4217'
      currencyType:
        $ref: '#/definitions/CurrencyPairType'
    readOnly: true
    example:
      currentBalance: 1100
      beginBalance: 1000
      currencyCode: 840
      currencyType: "BASE"

  PriceAdjustment:
    description: Structure to support providing price adjustment for sale item.
    type: object
    properties:
      adjustmentId:
        type: string
        example: "discount prepay"
      productCode:
        type: string
        example: "941"
      programID:
        type: string
        example: "P66"
      reason:
        type: string
        example: "loyaltyOffer"
      amount:
        type: number
        format: double
        example: 0.1
      percentage:
        type: number
        format: float
        example: 10
      itemPrice:
        type: number
        format: double
        example: 7.50
      unitOfMeasurement:
        type: string
        example: "each"
      unitsSold:
        type: number
        format: double
        example: 1
      rebateLabel:
        type: string
        example: "HostDiscount"
      maxQuantity:
        type: number
        format: double
        example: 7.50
      offerStatus:
        $ref: '#/definitions/OfferStatus'

  PromotionalOffer:
    description: Offer opportunity details
    type: object
    properties:
      offerReferenceId:
        description: Unique identifier for an offer.
        type: string
      offerName:
        description: Common name for the reward.
        type: string
      offerDescription:
        description: Description about the reward details.
        type: string
      type:
        description: Type can be used to distinguish offers, i.e EARN
      offerProvider:
        description: Provider name of the offer
        type: string
      partnerGroup:
        description: Partner group names where the offer can be obtained
        type: array
        minItems: 0
        items:
          type: string
      offerMessage:
        description: The offer information that is for the client to see on the user-interface.  This is most often set by the host system.
        type: string
      effectiveDateTime:
        description: Starting time for a reward validity.
        type: string
        format: date-time
      expiryDateTime:
        description: Ending time for a reward to be applied.
        type: string
        format: date-time
      visibleFrom:
        description: Date when offer will start the visibility.
        type: string
        format: date-time
      visibleTo:
        description: Date when offer will end the visibility.
        type: string
        format: date-time
      registrationFrom:
        description: Date when offer start with the registration.
        type: string
        format: date-time
      registrationTo:
        description: Date when offer end with the registration.
        type: string
        format: date-time
      promotionId:
        description: Links to associated promotion if it applies.
        type: string
      isExclusive:
        description: Indicator if offer can be combined with other offers or is mutually exclusive.
        type: boolean
      userAcceptanceRequired:
        description: Indicator if a user has to accept the offer before it can be applied to a transaction or accrued in an account.
        type: boolean
      offerStatus:
        $ref: '#/definitions/OfferStatus'
      currencyCode:
        $ref: '#/definitions/ISO-4217'
      qualifiers:
        description: Conditions that must be met for the rewared to be awarded.
        type: object
        properties:
          currency:
            type: array
            items:
              properties:
                currencyType:
                  $ref: '#/definitions/ValueAddCurrencyType'
                value:
                  description: Value of the reward in the associated currency.
                  type: string
                realizationCode:
                  $ref: '#/definitions/RewardRealizationCode'
          saleItems:
            type: array
            items:
              $ref: '#/definitions/POSItem'
      offerCostInfo:
        description: Offer cost details.
        type: object
        properties:
          currency:
            type: array
            items:
              properties:
                currencyType:
                  $ref: '#/definitions/ValueAddCurrencyType'
                value:
                  description: Value of the Offer cost associated with currency.
                  type: string
          saleItems:
            type: array
            items:
              $ref: '#/definitions/POSItem'
      reward:
        $ref: '#/definitions/Reward'
      metadata:
        description: Details about what to display, images, messaging, etc.
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
      offerRealizationType:
        $ref: '#/definitions/OfferRealizationType'

  QRCode:
    type: object
    properties:
      qrCodeId:
        type: string
        readOnly: true
        description: Unique Identifier for the QRCode.
      expiryDateTime:
        description: Date and time of the transaction.
        type: string
        readOnly: true
        format: date-time
        example: "2016-04-16T16:06:05Z"

  ReceiptData:
    description: Container for the receipt lines sent from the site box as printed on the paper receipt.
    type: object
    properties:
      receiptSection:
        type: string
        description: Indicates the section of the receipt the text represents [e.g. full, vat, eft, loyalty, etc]
      receiptLines:
        $ref: '#/definitions/ReceiptLine'

  ReceiptLine:
    description: A line of text on a receipt.
    type: object
    properties:
      plain:
        type: array
        items:
          type: string
      formatted:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            value:
              type: string
            order:
              type: number
            row:
              type: number
            column:
              type: number
            charSet:
              type: number
            color:
              type: string
            alignment:
              type: string
            height:
              type: string
            width:
              type: string
            charSet1:
              type: string
            charSet2:
              type: string
            charSet3:
              type: string

  RequestedAmount:
    title: Requested Amount
    description: Requested amount for the given request type [auth, capture, refund, etc] in lower denomination.
    type: number
    format: double
    minimum: 0
    exclusiveMinimum: true
    example: '500.00'

  Reward:
    description: Reward details
    type: object
    properties:
      rewardId:
        description: Unique identifier for the reward instance
        type: string
      rewardDescription:
        description: reward description
        type: string
      effectiveDateTime:
        description: Starting time for a reward validity.
        type: string
        format: date-time
      expiryDateTime:
        description: Ending time for a reward to be applied.
        type: string
        format: date-time
      offerReferenceId:
        description: Link to the offer that provided the opportunity for a customer to receive the reward.
        type: string
      currencyCode:
        $ref: '#/definitions/ISO-4217'
      values:
        description: Medium of exchange for the value.
        type: object
        properties:
          transactionLevel:
            type: array
            items:
              properties:
                currencyType:
                  $ref: '#/definitions/ValueAddCurrencyType'
                value:
                  description: Value of the reward in the associated currency.
                  type: string
                realizationCode:
                  $ref: '#/definitions/RewardRealizationCode'
                priceAdjustments:
                  type: array
                  items:
                    $ref: '#/definitions/PriceAdjustment'
          lineItemLevel:
            type: array
            items:
              properties:
                saleItem:
                  $ref: '#/definitions/POSItem'
                realizationCode:
                  $ref: '#/definitions/RewardRealizationCode'
      dispensationCode:
        $ref: '#/definitions/RewardDispensationCode'

  ReferenceToken:
    description: Surrogate value used to represent a handle to an account without sharing PCI/PII data to look it up.
    type: object
    properties:
      tokenId:
        description: Actual token value
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      tokenProvider:
        description: Indicates what system is the originator of the token
        type: string
        example: "TRANS_ARMOR"
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      tokenType:
        $ref: '#/definitions/ReferenceTokenType'

  Stac:
    type: object
    properties:
      stacId:
        type: string
        readOnly: true
        description: Unique Identifier for the STAC.
      storeId:
        description: Store identifier where the transaction is being performed.
        type: string
        example: "123456"
      qrCode:
        $ref: '#/definitions/QRCode'
      requestedAmount:
        $ref: '#/definitions/RequestedAmount'
      fundingSource:
        $ref: '#/definitions/FundingSource'
      currencyCode:
        $ref: '#/definitions/ISO-4217'
      transactionOrigin:
        $ref: '#/definitions/TransactionOrigin'        
      loyaltyTransactions:
        type: array
        items:
          $ref: '#/definitions/LoyaltyTransactionInfo'
      availOffersTrxnId:
        description: Identifier to be carried along with subsequent interactions using the available offers returned to the client.
        type: string
      printReceipt:
        description: Indicate whether or not to print the receipt at the outside fuel dispenser.
        type: boolean
      offers:
        type: array
        items:
          $ref: '#/definitions/PromotionalOffer'
      hostExtraInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
      threeDSecureInfo:
          $ref: '#/definitions/ThreeDSecure'
      fleetData:
        $ref: '#/definitions/FleetData'
      webhookUrl:
          $ref: '#/definitions/Link'

  SamsungPay:
    type: object
    properties:
      version:
        type: string
        example: "EC_v1"
      developerEmail:
        type: string
      data:
        type: string
        example: "3CguW5ecfTzO...03d"
      signature:
        type: string
        example: "MIAGCSqGSIb......AAAA=="
      decryptAlias:
        description: field of the public key certificate.
        type: string
        example: "oslo.com.xxx.Prod_mer"
      dPanLast4:
        type: string
        example: "9876"
      bin:
        type: string
      eciIndicator:
        type: string
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      panType:
        type: string
      cardType:
        $ref: '#/definitions/CreditCardType'
        example: "VISA"
      header:
        type: object
        properties:
          ephemeralPublicKey:
            type: string
            example: "MFkwEw...03d"
          publicKeyHash:
            type: string
            example: "+vbONw...IM="
      token:
        $ref: '#/definitions/ReferenceToken'
      billingAddress:
        $ref: '#/definitions/Address'
      billingPhone:
        $ref: '#/definitions/Phone'

  TaxDetails:
    description: Tax details.
    type: object
    properties:
      code:
        type: string
        example: TX01
      description:
        type: string
        example: Sales Tax
      amount:
        type: string
        example: '7.50'
      rate:
          type: string
          example: '13.5'

  ThreeDSecure:
    description: Details of ThreeDSecure transaction used to process the challege flow
    type: object
    properties:
      transactionId:
        description: Transaction id generated on the server
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      transactionStatus:
        type: string
        description: Transactions status of 3DS server
        example: "C"
      transactionStatusReason:
        type: string
        description: Reason for the transaction status
      challengeResponse:
        type: string
        example: "ewogIC"
      challengeIndicator:
        type: string
        example: "01 = No preference
                  02 = No challenge requested
                  03 = Challenge requested: 3DS Requestor Preference
                  04 = Challenge requested: Mandate"
      dsTransactionId:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      acsTransactionId:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      serverTransactionId:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      acsReferenceNumber:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      acsSignedContent:
        type: string
        example: "292bb6b88....6fc4446894f878b7e32bd5e"
      cardType:
        $ref: '#/definitions/CreditCardType'
      challengeRequest:
        type: string
        example: "ewogICAiYW.......MjJjMGVjIgp9"
      acsUrl:
        type: string
        example: "https://test.modirum.com/dstests/ACSEmu2"
      iframeContent:
        type: string
        example: "<iframe></iframe>"
      termUrl:
        type: string
        example: "https://mydomain/3dstest?transactionId=292bb6b886fc4446894f878b7e32bd5e"
      isThreeDSMethodCompleted:
        type: boolean
        example: true
      isAuthenticationCompleted:
        type: boolean
        example: true
      cavv:
        type: string
        description: Card authenticaion verificaiton value
      threeDSVersion:
        type: string
      expiryDateTime:
        description: 3DS challenge transaction expiry date time.
        type: string
        readOnly: true
        format: date-time
        example: "2020-01-01T16:06:05Z"
      eci:
        type: string
        description: Electronic Commerce Indicator value

  VaultedAccount:
    description: FD Account information
    type: object
    properties:
      fdAccountId:
        description: Unique identifier for a customer account vaulted with uCom
        type: string
      securityCode:
        description: Card Verificatiion value.
        type: string
      status:
        $ref: '#/definitions/AccountStatus'
      type:
        $ref: '#/definitions/AccountType'
    example:
      fdAccountId: "muid-3d4f2ac...c91014f2dc1"

  Venmo:
    description: Information about a Venmo account.
    type: object
    properties:
      nonce:
        type: string
        description: Venmo generated nonce.
        example: "ab12-124C-ab12-124C-ab12-124C"
      token:
        $ref: '#/definitions/ReferenceToken'

  Vipps:
    description: Information about a Vipps account. 'credit' is a read-only property.
    type: object
    required:
      - paymentId
    properties:
      paymentId:
        type: string
        description: The payment_id of Vipps. Used to correlate with the webhook of an open order.
        example: "ab12-124C-ab12-124C-ab12-124C"
      credit:
        $ref: '#/definitions/Credit'

  VisaCheckout:
    description: Visa Checkout information
    type: object
    properties:
      callId:
        description: Identifier corresponding to an account enrolled with Visa Checkout system.
        type: string
        example: "1234732704291071701"
      credit:
        $ref: '#/definitions/Credit'

  WashCode:
    description: Purchased wash information.
    type: object
    properties:
      code:
        description: Wash code generated by the POS system.
        type: string
      description:
        description: Wash code description generated by the POS system.
        type: string
      expiration:
        description: Expiration date for the purchased wash code
        type: string
        format: date-time
      message:
        description: Field to carry message from site system for display to customer.
        type: string

  WalmartPay:
    type: object
    properties:
        credit:
          $ref: '#/definitions/Credit'
        token:
          $ref: '#/definitions/ReferenceToken'

#-------------------------------------
# Common Models
#-------------------------------------
  DeviceInfo:
    description: Request origin device details
    type: object
    required:
      - id
      - kind
    properties:
      id:
        description: Unique Id for the device. Value should not contain line feeds, carriage returns, tabs, leading or trailing spaces, or multiple spaces.
        type: string
        example: "537edec8-d33e-4ee8-93a7-b9f61876950c"
      kind:
        description: Possible values are mobile, wearable, automobile, embedded,desktop, other.
        type: string
        example: "mobile"
      details:
        title: deviceData
        description: Device data information from multiple providers.
        type: array
        minItems: 0
        uniqueItems: true
        items:
          description: Collection of device data
          type: object
          properties:
            provider:
              description: Identifies the provider of the data and is often used when decrypting data on the server.
              type: string
              example: "InAuth"
            dataCapture:
              description: Device data captured as a bundle and transmitted as an encrypted and/or specifically formated string.
              type: object
              properties:
                rawData:
                  description: Device capture - raw data blob
                  type: string
                  example: "aaaaaXREUVZGRlFY...aMV"
                dataEventId:
                  description: Event identifier used map state on the server.
                  type: string
                  example: "BB8E4E92...Fz1E063113"
                captureTime:
                  description: Device data capture time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
                  type: string
                  format: date-time
                  example: "2016-04-16T16:06:05Z"
            dataStatic:
              description: Device static details
              type: object
              properties:
                os:
                  description: Device OS name
                  type: string
                  example: "Android 5.1.1 Lollipop"
                osVersion:
                  description: Device OS version
                  type: string
                  example: "5.1.1 Lollipop"
                model:
                  description: Device model
                  type: string
                  example: "XT1540"
                type:
                  description: Device type
                  type: string
                  example: "Moto G"
            dataDynamic:
              description: Device location details
              type: object
              properties:
                latitude:
                  description: Device position - latitude at the time of the data event
                  type: string
                  example: "13.0827 N"
                longitude:
                  description: Device position - longitude at the time of the data event
                  type: string
                  example: "80.2707 E"
                ipAddress:
                  description: IP address
                  type: string
                  example: "172.27.37.221"
                captureTime:
                  description: Device data capture time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
                  type: string
                  format: date-time
                  example: "2016-04-16T16:06:05Z"
            dataApplication:
              description: Mobile application specific data
              type: object
              properties:
                version:
                  description: Mobile application version.
                  type: string
                  format: sting
                  example: "1.0.0"
                name:
                  description: Mobile application name.
                  type: string
                  format: sting
                  example: "aplication-name"
                country:
                  description: Mobile application store country.
                  type: string
                  format: sting
                  example: "US"
      additionalInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
    example:
      {
      id: "537edec8-d33e-4ee8-93a7-b9f61876950c",
      kind: "mobile",
      details: [{
        provider: "InAuth",
        dataCapture: {
          rawData: "aaaaaXREUVZGRlFY...aMV",
          dataEventId: "BB8E4E92...Fz1E063113",
          captureTime: "2016-04-16T16:06:05Z"
        },
        dataStatic: {
           os: "Android 5.1.1 Lollipop",
           osVersion: "5.1.1 Lollipop",
           model: "XYX-1",
           Type: "Moto G"
          },
        dataDynamic: {
          latitude: "13.0827 N",
          longitude: "80.2707 E",
          ipAddress: "172.27.37.221",
          captureTime: "2016-04-16T16:06:05Z"
          }
      }],
      additionalInfo: [{
         name: "some-key",
         value: "some-value"
      }]
    }

  Error:
    description: Model for error messaging
    type: object
    properties:
      code:
        type: string
        description: Uniquely identifies an error condition. Client applications need to read and handle errors based on this.
      message:
        type: string
        description: A generic description of the error condition.
      category:
        type: string
        description: The resource associated with the error condition.
      developerInfo:
        type: object
        description: Information that needs to be understood by the client developers and should not be interpreted for application processing.
        properties:
          developerMessage:
            type: string
            description: An elaborative description of the error description.
          moreInfo:
            type: string
            description: Link to the error in Developer page.
          fieldError:
            description: Detailed information about message format errors.
            type: array
            items:
              properties:
                field:
                  description: The property or attribute associated with the error
                  type: string
                message:
                  description: Information specific to a property or attribute.
                  type: string
      hostExtraInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
      threeDSecureInfo:
          $ref: '#/definitions/ThreeDSecure'
      _links:
        type: array
        items:
          $ref: '#/definitions/Link'
    example:
      code: "40000"
      message: "Example Error"
      category: "example"
      developerInfo:
        developerMessage: "Invalid Message format in request payload"
        moreInfo: "https://www.example.com/errors/40000"
        fieldError:
          - field: "example id"
            message: "exampleId is mandatory"

  Link:
    description: Model to communicate linked resources.
    type: object
    required:
      - href
      - rel
    properties:
        href:
          description: URL to linked resource.
          type: string
          format: uri
          example:
            "https://api.example.com/v1/customers/cust-id-123456/accounts/acct-id-123456"
        rel:
          description: Defines the type of link relationship to current resource.
          type: string
          example:
            "linked.account"
        method:
          description: Defines the HTTP method for the given href.
          type: string
          default: "GET"
          example:
            "GET"
        id:
          description: Identifier to the resource.
          type: string
          example:
            "415e5cf6bfdb11e8a355529269fb1459"

#-------------------------------------
# ENUM Models
#-------------------------------------
  AccountStatus:
    description: Indicates the status of an account.
    type: string
    readOnly: true
    enum:
      - ACTIVE
      - INACTIVE
      - TERMINATED
      - ISSUER_TERMINATED
      - WALLET_TERMINATED
      - PENDING

  AccountType:
    description: Type of Account vaulted
    type: string
    readOnly: true
    enum:
      - CREDIT
      - PREPAID
      - ACH
      - LOYALTY
      - PAYPAL
      - MASTERPASS
      - VENMO
      - THREEDSECURE
      - VAULTED_ACCOUNT
      - FLEET

  AchEnrollmentStatus:
    description: Indicates ACH enrollment status
    type: string
    enum:
      - ACTIVE
      - PENDING
      - PENDING_LINKED_ACCOUNT

  AchEnrollmentSubStatus:
    description: Indicates ACH enrollment pending status
    type: string
    enum:
        - PENDING_BANK_VALIDATION
        - PENDING_PIN_VALIDATION
        - PENDING_EMAIL_VALIDATION
        - PENDING_PHONE_VALIDATION
        - PENDING_SOFT_BLOCK
        - PENDING_HARD_BLOCK

  BalanceUnitTypes:
    description: Indicator to determine how to display balances
    type: string
    enum:
      - CENTS
      - MILES
      - POINTS
      - STARS
      - LITRES

  CreditCardType:
    title: Credit Card Type
    description: Indicates the type of credit account association
    type: string
    enum:
      - AMEX
      - DISCOVER
      - MASTERCARD
      - PLCC
      - VISA
      - OTHER

  AchCardType:
    description: Indicates the type of ACH card association
    type: string
    enum:
      - CONNECTPAY

  AchAccountType:
    description: ACH account type
    type: string
    enum:
      - CHECKING
      - SAVINGS

  CurrencyPairType:
    description: Describes the type of currency where BASE represents the currency from Host and TRANSACTION represents the one requested.
    type: string
    enum:
      - BASE
      - TRANSACTION

  FleetCardType:
    description: Indicates the type of fleet account association
    type: string
    enum:
      - WEX

  FleetTagType:
    title: Indicates the possible values accepted in Fleet Data segment to Payment Processor.
    type: object
    properties:
      name:
        type: string
        enum:
          - value: DLS
            description: Driver License State/Province Abbreviation
          - value: DLN
            description: Driver License nameation
          - value: PON
            description: Work Order or P.O. Number.
          - value: INV
            description: Invoice Number.
          - value: TRP
            description: Trip Number.
          - value: UNT
            description: Unit Number.
          - value: TLH
            description: Trailer Hours or Refer Hours.
          - value: DOB
            description: Date of Birth.
          - value: ZIP
            description: ZIP or Postal Code.
          - value: END
            description: Entered Data.
          - value: MID
            description: Maintenance ID.
          - value: VIN
            description: VIN.
          - value: TRA
            description: Tractor Number.
          - value: HUB
            description: Hubometer.
          - value: TLR
            description: Trailer Number.
          - value: CBA
            description: Cashback Amount.
          - value: VHT
            description: Vehicle Tag.
        example: VHT
      value:
        type: string
        example: TXT 1200

  FundingSourceType:
    description: Describes the type of Funding source
    type: string
    readOnly: true
    enum:
      - VAULTED_ACCOUNT
      - CREDIT
      - PREPAID
      - APPLE_PAY
      - ANDRIOD_PAY
      - PAYPAL
      - TOKEN
      - NONCE
      - VCO
      - VENMO
      - AMAZON_PAY
      - VIPPS
      - FLEET
      - BANCONTACT
      - IDEAL
      - WALMART_PAY
      - EBT

  LoyaltyAccountStatus:
    description: Indicator of the account state as indicated by the loyalty issuer.
    type: string
    enum:
      - ENROLLED
      - ANONYMOUS
      - PARTIAL
      - PENDING_DATA
      - PENDING_VERIFICATION
      - INACTIVE
      - BLOCKED

  LoyaltyTransactionStatus:
    description: Indicates the status of an loyalty operation.
    type: string
    readOnly: true
    enum:
      - AUTHORIZED
      - AUTH_CANCELLED
      - AUTH_DECLINED
      - COMPLETED
      - COMPLETION_DECLINED
      - PENDING

  LoyaltyType:
    description: Identifier to indicate type of Loyalty program being registered.
    type: string
    enum:
      - LOCAL
      - NATIONAL

  OfferRealizationType:
    description: Identifier to indicate the type of a Loyalty Offer.
    type: string
    enum:
      - SPLIT_PAYMENT
      - PRE_ITEM_AMOUNT_OFF
      - POST_ITEM_AMOUNT_OFF
      - PRICE_ROLLBACK
      - HBD
      - TRANSACTION_LEVEL

  PaymentStatus:
    title: Payment Status
    description: Indicates the status of an payment operation.
    type: string
    readOnly: true
    enum:
      - APPROVED
      - DECLINED
      - CANCELLED
      - CHALLENGED

  POSItemType:
    description: Indicates the type of item
    type: string
    enum:
      - CARWASH
      - FUEL
      - OTHER

  ProgramStatus:
    description: Indicates if the given loyalty program is still active or not.
    type: string
    enum:
      - ENABLED
      - DISABLED
      - CONTRACTED_ONLY

  ReferenceTokenType:
    description: Indicates if the given loyalty program is still active or not.
    type: string
    enum:
      - FORMAT_PRESERVING_MULTI_USE
      - FORMAT_PRESERVING_SINGLE_USE
      - CLAIM_CHECK_NONCE
      - RANDOM_MULTI_USE
      - RANDOM_SINGLE_USE
      - CLAIM_CHECK_NONCE_WITH_PINCAPTURE

  RewardDispensationCode:
    description: Indicates when a reward is to be redeemed.
    type: string
    enum:
      - INSTANT
      - DEFERRED

  RewardRealizationCode:
    description: Indicates how a reward is applied to a transaction.
    type: string
    enum:
      - NEW_PRICE
      - PERCENT_OFF
      - AMOUNT_OFF
      - EARN
      - REDEEM

  SaleItemType:
    description: Indicates the type of item
    type: string
    enum:
      - FUEL
      - CARWASH
      - OTHER

  ServiceLevelCode:
    description: Indicates service level code.
    type: string
    default: 'S'
    enum:
      - S
      - F
      - N
      - X

  TransactionOrigin:
    description: Transaction origin details.
    type: string
    enum:
      - ECOM
      - MOTO
      - POS

  UpdateActionType:
    description: Indicates the action intended as part of patch operation.
    type: string
    enum:
      - RESUME_TRANSACTION
      - CANCEL_TRANSACTION

  ValueAddCurrencyType:
    description: Indicates the type of units used to show value of a reward.
    type: string
    enum:
      - MONEY
      - POINTS
      - DISTANCE
      - COUNTS
      - VOLUMES
      - VISITS

#-------------------------------------
# Responses
#-------------------------------------
responses:

  StacCreated:
    description: Resource created
    headers:
      Location:
        type: string
        description: Location of newly created resource.
    schema:
      $ref: '#/definitions/Stac'

  NoContent:
    description: The request succeeded but there's really nothing to show.

  BadRequest:
    description: Bad request
    schema:
      $ref: '#/definitions/Error'

  Unauthorized:
    description: Unauthorized

  NotFound:
    description: Not Found - The requested resource doesn't exist.
    schema:
      $ref: '#/definitions/Error'

  Conflict:
    description: Conflict - The requested operation conflicts with the current state of the identified resource.
    schema:
      $ref: '#/definitions/Error'

  ServerError:
    description: An unexpected server error occured.
    schema:
      $ref: '#/definitions/Error'

#-------------------------------------
# Parameter Models
#-------------------------------------
parameters:
  AcceptLanguageParam:
    name: Accept-Language
    description: The Accept-Language header contains information about the language preference of a user. This HTTP header is useful to multilingual sites for deciding the best language to serve to the client. i.e en-US,fr-CA
    in: header
    type: string

  ApiKeyParam:
    name: Api-Key
    description: An API key is a string value passed by a client app to the API proxies. The key uniquely identifies the client app.
    in: header
    required: true
    type: string

  AuthorizationParam:
    name: Authorization
    description: Authorization information for the request. Format- `HMAC {hmacToken}`
    in: header
    required: true
    type: string

  ClientTokenParam:
    name: Client-Token
    description: Used to pass the original client OAuth token information given in a client-credentials flow.  This field is only used when the server is making the request and needs to link the transaction to a specific client.  Format- `Bearer {access_token}`
    in: header
    type: string

  ClientRequestIdParam:
    name: Client-Request-Id
    description: Contains a unique ID generated by the client that can be used for enforcing idempotency on POST actions. POSTs are inherently non-idempotent and submitting the exact same request multiple times would create duplicate resources. Note:- Omitting this header increases the risk of duplicate transactions, which for payments could cost the client issues like double-billing.
    in: header
    required: true
    type: string

  SubMerchantIdParam:
    name: Sub-Merchant-Id
    description: Sub Merchant Id contains information about the merchant identifier
    in: header
    type: string

  TimestampParam:
    name: Timestamp
    description: Epoch timestamp in the request initiating system
    in: header
    required: true
    type: string

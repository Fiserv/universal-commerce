#-------------------------------------
# Document Change Log
# 0.2.3
#     - No Changes
# 0.2.2
#     - No Changes
# 0.2.1
#     - Added Merchant id as header field
# 0.2.0
#     - Added 'OTHER' CreditCardType
#     - Added fields in ThreeDSecure object
# 0.1.9
#     - No change.
# 0.1.8
#     - Added 3ds web support
# 0.1.7
#     - New API for creating third party tokens
#     - Added 3ds challenge transaction expiry date time in ThreeDSecure
# 0.1.6
#     - Added Accept-Language header field
# 0.1.5
#     - Added Link in the Error object.
#     - acsSignedContent and CardType in threeDSecureInfo object
# 0.1.4
#     - No change.
# 0.1.3
#     - Adding NVP with valueAsList
#     - update in DeviceInfo.
# 0.1.2
#     - No change.
# 0.1.1
#     - No change.
# 0.1.0
#     - No change.
# 0.0.9
#     - No change.
# 0.0.8
#   - Added required keyId parameter to GET /signature-keys
#   - Added required keyId parameter to GET /encryption-keys
# 0.0.7
#   - Updated ReferenceToken to have more accurate attribute names, removed use value
#   - Cleaned up examples in the models
# 0.0.6
#     - No change.
# 0.0.5
#     - No change.
# 0.0.4
#     - Added endpoints for signature and encryption keys
#     - Added encryption and validation models
# 0.0.3
#     - Added publicKeyRequired flag in request and publicKey attribute in response.
#     - Removed GET, PATCH, DELETE operations.
#     - Added Grant Type in header.
# 0.0.2
#     - Added 'osVersion' attribute to 'DeviceInfo' object.
# 0.0.1
#     - Initial Version
#-------------------------------------

openapi: 3.0.1
info:
  title: uCom Security Services
  description: Services related to managing security like access tokens and validation.
  version: 0.2.3
servers:
- url: https://int.api.firstdata.com/ucom
tags:
- name: security
  description: Operations and details for API security services.
paths:
  /v1/signature-keys/{keyId}:
    get:
      x-group-name: Security Services
      x-proxy-name: Get Public Signature Key
      tags:
      - security
      summary: Get uCom Gateway public signature key
      description: Get uCom Gateway public key for validating message signatures.
      parameters:
      - name: keyId
        in: path
        description: identifier of the public key used for signature verification.
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureKey'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

  /v1/encryption-keys/{keyId}:
    get:
      x-group-name: Security Services
      x-proxy-name: Get Encryption Key
      tags:
      - security
      summary: Get uCom Gateway encryption key
      description: Get uCom Gateway partner-specific key for encryption of data elements.
      parameters:
      - name: keyId
        in: path
        description: identifier of the public key used for field-level encryption.
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncryptionKey'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

  /v1/tokens:
    post:
      x-group-name: Security Services
      x-proxy-name: Create Security Access Token
      tags:
      - security
      summary: Create a security access token
      description: For service calls directly from a mobile or connected device, the client needs to have an access token which is received by the client's server.
      parameters:
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
            examples:
              Registerd User: {summary: Request with fdcustomerId, $ref: '#/components/examples/TokenCreationWithfdcustomerId'}
              Guest User: {summary: Request with ananymous, $ref: '#/components/examples/TokenCreationWithoutfdcustomerId'}
        required: true
      responses:
        201:
          $ref: '#/components/responses/TokenCreated'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        409:
          $ref: '#/components/responses/Conflict'
        500:
          $ref: '#/components/responses/ServerError'

components:
  schemas:

#-------------------------------------
# Operational Models
#-------------------------------------

    TokenRequest:
      title: TokenRequest
      type: object
      properties:
        token:
          $ref: '#/components/schemas/Token'
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
        anonymous:
          type: boolean
          description: Flag to indicate that the requested user does not have a uCom customer profile.
          default: false
        publicKeyRequired:
          type: boolean
          description: Flag to indicate if a public key is required for payload data encryption.
          default: false
    #-------------------------------------
    # Resource Models
    #-------------------------------------
    EncryptionKey:
      type: object
      properties:
        id:
          type: string
          description: Uniquely identifies a Key.
          example: c2RnYXJ0aHR3ZXN3eXNk
        publicKey:
          type: string
          description: Generated Public Key for encrypting the request.
          example: MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCqGKukO1De7zhZj6+H0qtjTkVxwTCpvKe4eCZ0FPqri0cb2JZfXJ/DgYSF6vUpwmJG8wVQZKjeGcjDOL5UlsuusFncCzWBQ7RKNUSesmQRMSGkVb1/3j+skZ6UtW+5u09lHNsj6tQ51s1SPrCBkedbNf0Tp0GbMJDyR4e9T04ZZwIDAQAB
        algorithm:
          type: string
          description: Cipher algorithm to use for encryption.
          example: RSA/ECB/PKCS1Padding
        created:
          type: number
          description: Epoch timestamp representing the Key creation date-time.
          example: 1501715477
        expires:
          type: string
          description: Epoch timestamp representing the date-time by which the Key expires.
          example: "1501795478"
      description: Model for attributes of Key pair required for field encryption.

    ExpiryDate:
      type: object
      properties:
        month:
          maxLength: 2
          minLength: 2
          pattern: '[0-9]{2,2}'
          type: string
          description: Month format 'MM'
          example: "09"
        year:
          maxLength: 2
          minLength: 2
          pattern: '[0-9]{2,2}'
          type: string
          description: Year format 'YY'
          example: "20"
        singleValue:
          maxLength: 6
          minLength: 4
          type: string
          description: Month and year together, 'MMYY' or 'MMYYYY'.  If the latter format, the string will be parsed and validated per the given format.  Any other format will be rejected.
      description: Contains account expiration data and needs to either send the values in individual fields OR as a singleValue.

    ISO-4217:
      type: object
      properties:
        code:
          type: string
          example: USD
          default: USD
        number:
          type: number
          example: 840.0
        digits:
          type: number
          example: 2.0
        currency:
          type: string
          example: US Dollar
          default: US Dollar
      description: ISO 4217 currency format in which the balance is represented.

    Link:
      required:
      - href
      - rel
      type: object
      properties:
        href:
          type: string
          description: URL to linked resource.
          format: uri
        rel:
          type: string
          description: Defines the type of link relationship to current resource.
          example: self
          enum:
          - current.page
          - previous.page
          - next.page
          - self
        method:
          type: string
          description: Defines the HTTP method for the given href.
          example: GET
          default: GET
        id:
          type: string
          description: Identifier to the resource.
          example: 415e5cf6bfdb11e8a355529269fb1459
      description: Model to communicate linked resources.

    NVP:
      title: Name and Value pair.
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        valueAsList:
          minItems: 0
          type: array
          items:
            type: string

    ReferenceToken:
      type: object
      properties:
        tokenId:
          type: string
          description: Actual token value
          example: 292bb6b886fc4446894f878b7e32bd5e
        tokenProvider:
          type: string
          description: Indicates what system is the originator of the token
          example: TRANS_ARMOR
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        tokenType:
          $ref: '#/components/schemas/ReferenceTokenType'
      description: Surrogate value used to represent a handle to an account without sharing PCI/PII data to look it up.

    SignatureKey:
      type: object
      properties:
        id:
          type: string
          description: Uniquely identifies a Key.
          example: c2RnYXJ0aHR3ZXN3eXNk
        publicKey:
          type: string
          description: Generated Public Key for Signature validation.
          example: MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCqGKukO1De7zhZj6+H0qtjTkVxwTCpvKe4eCZ0FPqri0cb2JZfXJ/DgYSF6vUpwmJG8wVQZKjeGcjDOL5UlsuusFncCzWBQ7RKNUSesmQRMSGkVb1/3j+skZ6UtW+5u09lHNsj6tQ51s1SPrCBkedbNf0Tp0GbMJDyR4e9T04ZZwIDAQAB
        created:
          type: number
          description: Epoch timestamp representing the Key creation date-time.
          example: 1501715477
        expires:
          type: string
          description: Epoch timestamp representing the date-time by which the Key expires.
          example: "1501795478"
      description: Model for attributes of Key pair required for Signature validation.

    Token:
      type: object
      properties:
        tokenId:
          type: string
          description: Unique identifier provided for the Token.
          readOnly: true
        fdCustomerId:
          type: string
          description: Unique identifier for a customer profile registered with uCom
        status:
          $ref: '#/components/schemas/TokenStatus'
        issuedOn:
          type: number
          description: Token issuance date time in epoch time format.
          readOnly: true
        expiresInSeconds:
          type: number
          description: Time remaining for token expiry in seconds.
          readOnly: true
        publicKey:
          type: string
          description: Public key required to encrypt the payload data.
          readOnly: true
        algorithm:
          type: string
          description: Indicates algorithm used to generate key pair.
          example: PKCS1/NONE/RSA
      description: Access Token object
      example:
        tokenId: 0OcWjNTKu8rjfVb0AJnAUGTM9dWx
        fdCustomerId: bc5b70d996cb4bfebced3973880f8543
        status: ACTIVE
        issuedOn: 1501502067595
        expiresInSeconds: 1199
        publicKey: MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCqGKukO1De7zhZj6+H0qtjTkVxwTCpvKe4eCZ0FPqri0cb2JZfXJ/DgYSF6vUpwmJG8wVQZKjeGcjDOL5UlsuusFncCzWBQ7RKNUSesmQRMSGkVb1/3j+skZ6UtW+5u09lHNsj6tQ51s1SPrCBkedbNf0Tp0GbMJDyR4e9T04ZZwIDAQAB
        algorithm: PKCS1/NONE/RSA

    ThirdPartyToken:
      type: object
      properties:
        tokenId:
          type: string
          description: Unique identifier provided for the Token.
          readOnly: true
        tokenType:
          type: string
          description: Token type.
        status:
          $ref: '#/components/schemas/TokenStatus'
        issuedOn:
          type: number
          description: Token issuance date time in epoch time format.
          readOnly: true
        expiresInSeconds:
          type: number
          description: Time remaining for token expiry in seconds.
          readOnly: true
        publicKey:
          type: string
          description: Public key required to encrypt the payload data.
          readOnly: true
        algorithm:
          type: string
          description: Indicates algorithm used to generate key pair.
          example: PKCS1/NONE/RSA
        additionalInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
      description: Third party token request details

    ThreeDSecure:
      type: object
      properties:
        transactionId:
          type: string
          description: Transaction id generated on the server
          example: 292bb6b886fc4446894f878b7e32bd5e
        transactionStatus:
          type: string
          description: Transactions status of 3DS server
          example: C
        transactionStatusReason:
          type: string
          description: Reason for the transaction status
        challengeResponse:
          type: string
          example: ewogIC
        challengeIndicator:
          type: string
          example: '01 = No preference 02 = No challenge requested 03 = Challenge requested: 3DS Requestor Preference 04 = Challenge requested: Mandate'
        dsTransactionId:
          type: string
          example: 292bb6b886fc4446894f878b7e32bd5e
        acsTransactionId:
          type: string
          example: 292bb6b886fc4446894f878b7e32bd5e
        serverTransactionId:
          type: string
          example: 292bb6b886fc4446894f878b7e32bd5e
        acsReferenceNumber:
          type: string
          example: 292bb6b886fc4446894f878b7e32bd5e
        acsSignedContent:
          type: string
          example: 292bb6b88....6fc4446894f878b7e32bd5e
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        challengeRequest:
          type: string
          example: ewogICAiYW.......MjJjMGVjIgp9
        acsUrl:
          type: string
          example: https://test.modirum.com/dstests/ACSEmu2
        iframeContent:
          type: string
          example: <iframe></iframe>
        termUrl:
          type: string
          example: https://mydomain/3dstest?transactionId=292bb6b886fc4446894f878b7e32bd5e
        isThreeDSMethodCompleted:
          type: boolean
          example: true
        isAuthenticationCompleted:
          type: boolean
          example: true
        cavv:
          type: string
          description: Card authenticaion verificaiton value
        threeDSVersion:
          type: string
        expiryDateTime:
          type: string
          description: 3DS challenge transaction expiry date time.
          format: date-time
          readOnly: true
          example: 2020-01-01T16:06:05Z
        eci:
          type: string
          description: Electronic Commerce Indicator value
      description: Details of ThreeDSecure transaction used to process the challege flow

    #-------------------------------------
    # Common Models
    #-------------------------------------
    DeviceInfo:
      required:
      - id
      - kind
      type: object
      properties:
        id:
          type: string
          description: Unique Id for the device. Value should not contain line feeds, carriage returns, tabs, leading or trailing spaces, or multiple spaces.
          example: 537edec8-d33e-4ee8-93a7-b9f61876950c
        kind:
          type: string
          description: Possible values are mobile, wearable, automobile, embedded,desktop, other.
          example: mobile
        details:
          title: deviceData
          minItems: 0
          uniqueItems: true
          type: array
          description: Device data information from multiple providers.
          items:
            type: object
            properties:
              provider:
                type: string
                description: Identifies the provider of the data and is often used when decrypting data on the server.
                example: InAuth
              dataCapture:
                type: object
                properties:
                  rawData:
                    type: string
                    description: Device capture - raw data blob
                    example: aaaaaXREUVZGRlFY...aMV
                  dataEventId:
                    type: string
                    description: Event identifier used map state on the server.
                    example: BB8E4E92...Fz1E063113
                  captureTime:
                    type: string
                    description: Device data capture time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
                    format: date-time
                    example: 2016-04-16T16:06:05Z
                description: Device data captured as a bundle and transmitted as an encrypted and/or specifically formated string.
              dataStatic:
                type: object
                properties:
                  os:
                    type: string
                    description: Device OS name
                    example: Android 5.1.1 Lollipop
                  osVersion:
                    type: string
                    description: Device OS version
                    example: 5.1.1 Lollipop
                  model:
                    type: string
                    description: Device model
                    example: XT1540
                  type:
                    type: string
                    description: Device type
                    example: Moto G
                description: Device static details
              dataDynamic:
                type: object
                properties:
                  latitude:
                    type: string
                    description: Device position - latitude at the time of the data event
                    example: 13.0827 N
                  longitude:
                    type: string
                    description: Device position - longitude at the time of the data event
                    example: 80.2707 E
                  ipAddress:
                    type: string
                    description: IP address
                    example: 172.27.37.221
                  captureTime:
                    type: string
                    description: Device data capture time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
                    format: date-time
                    example: 2016-04-16T16:06:05Z
                description: Device location details
              dataApplication:
                type: object
                properties:
                  version:
                    type: string
                    description: Mobile application version.
                    format: sting
                    example: 1.0.0
                  name:
                    type: string
                    description: Mobile application name.
                    format: sting
                    example: aplication-name
                  country:
                    type: string
                    description: Mobile application store country.
                    format: sting
                    example: US
                description: Mobile application specific data
            description: Collection of device data
        additionalInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
      description: Request origin device details
      example:
        id: 537edec8-d33e-4ee8-93a7-b9f61876950c
        kind: mobile
        details:
        - provider: InAuth
          dataCapture:
            rawData: aaaaaXREUVZGRlFY...aMV
            dataEventId: BB8E4E92...Fz1E063113
            captureTime: 2016-04-16T16:06:05Z
          dataStatic:
            os: Android 5.1.1 Lollipop
            osVersion: 5.1.1 Lollipop
            model: XYX-1
            Type: Moto G
          dataDynamic:
            latitude: 13.0827 N
            longitude: 80.2707 E
            ipAddress: 172.27.37.221
            captureTime: 2016-04-16T16:06:05Z
        additionalInfo:
        - name: some-key
          value: some-value

    Error:
      type: object
      properties:
        code:
          type: string
          description: Uniquely identifies an error condition. Client applications need to read and handle errors based on this.
        message:
          type: string
          description: A generic description of the error condition.
        category:
          type: string
          description: The resource associated with the error condition.
        developerInfo:
          type: object
          properties:
            developerMessage:
              type: string
              description: An elaborative description of the error description.
            moreInfo:
              type: string
              description: Link to the error in Developer page.
            fieldError:
              type: array
              description: Detailed information about message format errors.
              items:
                type: object
                properties:
                  field:
                    type: string
                    description: The property or attribute associated with the error
                  message:
                    type: string
                    description: Information specific to a property or attribute.
          description: Information that needs to be understood by the client developers and should not be interpreted for application processing.
        hostExtraInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
        threeDSecureInfo:
          $ref: '#/components/schemas/ThreeDSecure'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
      description: Model for error messaging
      example:
        code: "40000"
        message: Example Error
        category: example
        developerInfo:
          developerMessage: Invalid Message format in request payload
          moreInfo: https://www.example.com/errors/40000
          fieldError:
          - field: example id
            message: exampleId is mandatory

    #-------------------------------------
    # ENUM Models
    #-------------------------------------
    CreditCardType:
      type: string
      description: Indicates the type of credit account association
      enum:
      - AMEX
      - DISCOVER
      - MASTERCARD
      - PLCC
      - VISA
      - OTHER

    ReferenceTokenType:
      type: string
      description: Indicates the purpose of token.
      enum:
      - FORMAT_PRESERVING_MULTI_USE
      - FORMAT_PRESERVING_SINGLE_USE
      - CLAIM_CHECK_NONCE
      - RANDOM_MULTI_USE
      - RANDOM_SINGLE_USE
      - CLAIM_CHECK_NONCE_WITH_PINCAPTURE
    TokenStatus:
      type: string
      enum:
      - ACTIVE
      - EXPIRED

  #-------------------------------------
  # Responses
  #-------------------------------------
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Conflict:
      description: Conflict - The requested operation conflicts with the current state of the identified resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NoContent:
      description: The request succeeded but there’s really nothing to show.
      content: {}

    NotFound:
      description: Not Found - The requested resource doesn't exist.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    OK:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Token'

    ServerError:
      description: An unexpected server error occured.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    ThirdPartyTokenCreated:
      description: Resource created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ThirdPartyToken'

    TokenCreated:
      description: Resource created
      headers:
        Location:
          description: Location of newly created resource.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Token'

    Unauthorized:
      description: Unauthorized
      content: {}

  #-------------------------------------
  # Parameter Models
  #-------------------------------------
  parameters:
    AcceptLanguageParam:
      name: Accept-Language
      in: header
      description: The Accept-Language header contains information about the language preference of a user. This HTTP header is useful to multilingual sites for deciding the best language to serve to the client. i.e en-US,fr-CA
      schema:
        type: string

    ApiKeyParam:
      name: Api-Key
      in: header
      description: An API key is a string value passed by a client app to the API proxies. The key uniquely identifies the client app.
      required: true
      schema:
        type: string

    AuthorizationParam:
      name: Authorization
      in: header
      description: Authorization information for the request. Format- `HMAC {hmacToken}`
      required: true
      schema:
        type: string

    ClientTokenParam:
      name: Client-Token
      in: header
      description: Used to pass the original client OAuth token information given in a client-credentials flow.  This field is only used when the server is making the request and needs to link the transaction to a specific client.  Format- `Bearer {access_token}`
      schema:
        type: string

    SubMerchantIdParam:
      name: Sub-Merchant-Id
      in: header
      description: Merchant Id contains information about the merchant identifier
      schema:
        type: string

    GrantTypeParam:
      name: GrantType
      in: header
      description: Only supported value `client_credentials`.
      required: true
      schema:
        type: string

    TimestampParam:
      name: Timestamp
      in: header
      description: Epoch timestamp in the request initiating system
      required: true
      schema:
        type: string
  examples:
    TokenCreationWithfdcustomerId:
      value:
        token:
          fdCustomerId: 6feb514fa255433881ecfe7f7d9b508e
        publicKeyRequired: true
    TokenCreationWithoutfdcustomerId:
      value:
        anonymous: true
        publicKeyRequired: true
        
        
    

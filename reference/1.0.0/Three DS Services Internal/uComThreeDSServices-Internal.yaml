#-------------------------------------
# Document Change Log
# 0.2.2
#     - No Changes
# 0.2.1
#     - No Change.
# 0.2.0
#     - Added 'OTHER' CreditCardType
# 0.1.9
#     - No change.
# 0.1.8
#     - Added 3ds web support
# 0.1.7
#     - No change.
# 0.1.6
#     - No change.
# 0.1.5
#     - acsSignedContent and CardType in threeDSecureInfo object
#-------------------------------------
openapi: "3.0.0"
info:
  version: 0.2.2
  title: uCom Three-DS Authentication Services (Internal)
servers:
  - url: https://ucom-3ds-authentication-services-dev.apps.us-oma1-np2.1dc.com
  - url: https://ucom-3ds-authentication-services-qa.apps.us-oma1-np2.1dc.com
  - url: https://ucom-3ds-authentication-services-cat.apps.us-oma1-np2.1dc.com
  - url: https://ucom-3ds-authentication-services-preprod.apps.us-chd1-np2.1dc.com
  - url: https://ucom-3ds-authentication-services.apps.us-oma1-ip01.1dc.com

paths:

  /v1/partners/{partnerId}/authentication:
    post:
      summary: Make a 3ds authentication for a given payment card
      parameters:
        - name: partnerId
          in: path
          required: true
          description: uCom provided identifer for the client partner
          schema:
            type: string
        - name: X-Wallet-Id
          in: header
          required: true
          description: uCom provided identifer for the wallet of client partner
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: The Accept-Language header contains information about the language preference of a user. This HTTP header is useful to multilingual sites for deciding the best language to serve to the client. i.e en-US,fr-CA
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Authentication'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Authentication"
        '202':
          description: Request accepted. Partial Content.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Authentication"
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/partners/{partnerId}/transactions/{transactionId}:
    post:
      summary: Get 3ds authentication status for given transaction Id.
      parameters:
        - name: partnerId
          in: path
          required: true
          description: uCom provided identifer for the client partner
          schema:
            type: string
        - name: X-Wallet-Id
          in: header
          required: true
          description: uCom provided identifer for the wallet of client partner
          schema:
            type: string
        - name: transactionId
          in: path
          required: true
          description: Unique id for each 3DS transaction.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Authentication'
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Authentication"
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '404':
          description: Not Found - The requested resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:

    Address:
      description: A physical mailing address for this user.
      type: object
      properties:
        type:
          description: Canonical type values of "work", "home", and "other".
          type: string
          writeOnly: true
        streetAddress:
          description: The full street address component, which may include house number, street name, P.O. box, and multi-line extended street address information.
          type: string
          writeOnly: true
        locality:
          description: The city or locality component.
          type: string
          writeOnly: true
        region:
          description: The state or region component.
          type: string
          writeOnly: true
        postalCode:
          description: The zip code or postal code component.
          type: string
        country:
          description: The country name component.  When specified, the value MUST be in ISO 3166-1 "alpha-2" code format; e.g., the United States and Sweden are "US" and "SE", respectively.
          type: string
          writeOnly: true
        formatted:
          description: The full mailing address, formatted for display or use with a mailing label.
          type: string
          writeOnly: true
        primary:
          description: Indicates if this is the default address for the associated resource. It only has meaning when used in a set or array of addresses.
          type: boolean
          writeOnly: true

    Authentication:
      type: object
      properties:
        transactionId:
          type: string
          example: 7ad99e2c2a5343a4a270aececf1ff45b
        amount:
          type: number
          format: double
          minimum: 0.00
          exclusiveMinimum: true
          example: 87.95
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'
        description:
          description: The detail of the purchase made.
          type: string
        transactionStatus:
          description: Status of 3DS Transaction.
          type: string
          writeOnly: true
        transactionStatusReason:
          description: Provides information on why the Transaction Status field has the specified value.
          type: string
          writeOnly: true
        dsTransId:
          description: Universally unique transaction identifier assigned by the DS to identify a single transaction.
          type: string
          writeOnly: true
        acsTransId:
          description: Universally Unique transaction identifier assigned by the ACS to identify a single transaction.
          type: string
          writeOnly: true
        threeDSServerTransId:
          description: A unique identifier for the transaction that will be the same as the 3DS Server Transaction ID in the AReq message.
          type: string
          writeOnly: true
        acsReferenceNumber:
          type: string
          example: "292bb6b886fc4446894f878b7e32bd5e"
        credit:
          $ref: '#/components/schemas/Credit'
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
        status:
          $ref: '#/components/schemas/AuthenticationStatus'
        additionalInfo:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
          uniqueItems: true
        threeDSecureInfo:
          $ref: '#/components/schemas/ThreeDSecure'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Email'
        phoneNumbers:
          type: array
          items:
            $ref: '#/components/schemas/Phone'

    Credit:
      description: Information on a credit account
      type: object
      writeOnly: true
      properties:
        cardNumber:
          description: Primary account number, can only be sent when vaulting an account.  This field will NOT be present in responses.
          type: string
          example: "4111111111111111"
        nameOnCard:
          description: Name as printed on physical card or on virtual account
          type: string
          example: "John Smith"
        alias:
          description: Last four values of the cardNumber
          type: string
          readOnly: true
          example: "1111"
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        cardSubType:
          description: Merchant or brand specific information about the type of account
          type: string
          example: "ABCD"
        billingAddress:
          $ref: '#/components/schemas/Address'
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        securityCode:
          type: string
          example: "444"
        sequenceNumber:
          description: Applicable only for private-label accounts
          type: string
          example: "01"
        AuthenticationVerificationValue:
          description: This contains CAVV for Visa, AAV for MC and AEVV for Amex etc. This is used in 3D secure.
          type: string
          example: "QUNTRU1Vf3poLWZDciZkMmFQLjc="
        eci:
          description: ECI or Electronic Commerce Indicator is the two or three digit code that is returned by the credit card processing networks and issuing banks to notify an eCommerce merchant about the authentication of the cardholder and the status of the cardholderâ€™s issuing bank under 3D Secure.
          type: string
          example: "5"

    DeviceInfo:
      description: Request origin device details
      type: object
      writeOnly: true
      required:
        - id
        - kind
      properties:
        id:
          description: Unique Id for the device. Value should not contain line feeds, carriage returns, tabs, leading or trailing spaces, or multiple spaces.
          type: string
          example: "537edec8-d33e-4ee8-93a7-b9f61876950c"
        kind:
          description: Possible values are mobile, wearable, automobile, embedded,desktop, other.
          type: string
          example: "mobile"
        details:
          title: deviceData
          description: Device data information from multiple providers.
          type: array
          minItems: 0
          uniqueItems: true
          items:
            description: Collection of device data
            type: object
            properties:
              provider:
                description: Identifies the provider of the data and is often used when decrypting data on the server.
                type: string
                example: "3DS"
              dataCapture:
                description: Device data captured as a bundle and transmitted as an encrypted and/or specifically formated string.
                type: object
                properties:
                  rawData:
                    description: Device capture - raw data blob
                    type: string
                    example: "aaaaaXREUVZGRlFY...aMV"
                  dataEventId:
                    description: Event identifier used map state on the server.
                    type: string
                    example: "BB8E4E92...Fz1E063113"
                  captureTime:
                    description: Device data capture time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
                    type: string
                    format: date-time
                    example: "2016-04-16T16:06:05Z"
              dataStatic:
                description: Device static details
                type: object
                properties:
                  os:
                    description: Device OS name
                    type: string
                    example: "Android 5.1.1 Lollipop"
                  osVersion:
                    description: Device OS version
                    type: string
                    example: "5.1.1 Lollipop"
                  model:
                    description: Device model
                    type: string
                    example: "XT1540"
                  type:
                    description: Device type
                    type: string
                    example: "Moto G"
              dataDynamic:
                description: Device location details
                type: object
                properties:
                  latitude:
                    description: Device position - latitude at the time of the data event
                    type: string
                    example: "13.0827 N"
                  longitude:
                    description: Device position - longitude at the time of the data event
                    type: string
                    example: "80.2707 E"
                  ipAddress:
                    description: IP address
                    type: string
                    example: "172.27.37.221"
                  captureTime:
                    description: Device data capture time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
                    type: string
                    format: date-time
                    example: "2016-04-16T16:06:05Z"
              dataApplication:
                description: Mobile application specific data
                type: object
                properties:
                  version:
                    description: Mobile application version.
                    type: string
                    format: sting
                    example: "1.0.0"
                  name:
                    description: Mobile application name.
                    type: string
                    format: sting
                    example: "aplication-name"
                  country:
                    description: Mobile application store country.
                    type: string
                    format: sting
                    example: "US"
        additionalInfo:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
          uniqueItems: true
      example:
        {
          id: "537edec8-d33e-4ee8-93a7-b9f61876950c",
          kind: "mobile",
          details: [{
                      provider: "InAuth",
                      dataCapture: {
                        rawData: "aaaaaXREUVZGRlFY...aMV",
                        dataEventId: "BB8E4E92...Fz1E063113",
                        captureTime: "2016-04-16T16:06:05Z"
                      },
                      dataStatic: {
                        os: "Android 5.1.1 Lollipop",
                        osVersion: "5.1.1 Lollipop",
                        model: "XYX-1",
                        Type: "Moto G"
                      },
                      dataDynamic: {
                        latitude: "13.0827 N",
                        longitude: "80.2707 E",
                        ipAddress: "172.27.37.221",
                        captureTime: "2016-04-16T16:06:05Z"
                      }
                    }],
          additionalInfo: [{
                             name: "some-key",
                             value: "some-value"
                           }]
        }

    Email:
      description: Email address for the user.
      type: object
      properties:
        type:
          description: The "type" sub-attribute is used to provide a classification meaningful to the (human) user.  The user interface should encourage the use of basic values of "work", "home", and "other" and MAY allow additional type values to be used at the discretion of the service client.
          type: string
        value:
          description: The value SHOULD be specified according to RFC5321.
          type: string
        primary:
          description: Defines if this entry is to be used as the primary or default for the user.
          type: boolean
          default: false
      example:
        value: "bjensen@example.com"
        type: "work"
        primary: true

    ExpiryDate:
      description: Contains account expiration data and needs to either send the values in individual fields OR as a singleValue.
      type: object
      properties:
        month:
          type: string
          description: Month format 'MM'
          pattern: "[0-9]{2,2}"
          minLength: 2
          maxLength: 2
          example: "09"
        year:
          type: string
          description: Year format 'YY'
          pattern: "[0-9]{2,2}"
          minLength: 2
          maxLength: 2
          example: "20"
        singleValue:
          type: string
          description: Month and year together, 'MMYY' or 'MMYYYY'.  If the latter format, the string will be parsed and validated per the given format.  Any other format will be rejected.
          minLength: 4
          maxLength: 6

    ISO-4217:
      description: Holds currency information
      type: object
      properties:
        code:
          type: string
          default: "USD"
          example: "USD"
        number:
          type: integer
          default: 840
          example: 840
        digits:
          type: integer
          default: 2
          example: 2
        currency:
          type: string
          default: "US Dollar"
          example: "US Dollar"

    NVP:
      title: Name and Value pair.
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        valueAsList:
          type: array
          minItems: 0
          items:
            type: string
    Phone:
      description: Phone number for the user.
      type: object
      properties:
        value:
          description: The value SHOULD be specified according to the format defined in RFC3966, e.g., 'tel:+1-201-555-0123'.
          type: string
        type:
          description: Often has typical values of "work", "home", "mobile", "fax", "pager", and "other" and MAY allow more types to be defined by the service client.
          type: string
        primary:
          description: Defines if this entry is to be used as the primary or default for the user.
          type: boolean
          default: false
      example:
        value: "555-555-5555"
        type: "work"

    ThreeDSecure:
      description: Details of ThreeDSecure transaction used to process the challege flow
      type: object
      properties:
        transactionId:
          description: Transaction id generated on the server
          type: string
          example: "292bb6b886fc4446894f878b7e32bd5e"
        transactionStatus:
          type: string
          description: Transactions status of 3DS server
          example: "C"
        transactionStatusReason:
          type: string
          description: Reason for the transaction status
        challengeResponse:
          type: string
          example: "ewogIC"
        challengeIndicator:
          type: string
          example: "01 = No preference
                    02 = No challenge requested
                    03 = Challenge requested: 3DS Requestor Preference
                    04 = Challenge requested: Mandate"
        dsTransactionId:
          type: string
          example: "292bb6b886fc4446894f878b7e32bd5e"
        acsTransactionId:
          type: string
          example: "292bb6b886fc4446894f878b7e32bd5e"
        serverTransactionId:
          type: string
          example: "292bb6b886fc4446894f878b7e32bd5e"
        acsReferenceNumber:
          type: string
          example: "292bb6b886fc4446894f878b7e32bd5e"
        acsSignedContent:
          type: string
          example: "292bb6b88....6fc4446894f878b7e32bd5e"
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        challengeRequest:
          type: string
          example: "ewogICAiYW.......MjJjMGVjIgp9"
        acsUrl:
          type: string
          example: "https://test.modirum.com/dstests/ACSEmu2"
        iframeContent:
          type: string
          example: "<iframe></iframe>"
        termUrl:
          type: string
          example: "https://mydomain/3dstest?transactionId=292bb6b886fc4446894f878b7e32bd5e"
        isThreeDSMethodCompleted:
          type: boolean
          example: true
        isAuthenticationCompleted:
          type: boolean
          example: true
        cavv:
          type: string
          description: Card authenticaion verificaiton value
        threeDSVersion:
          type: string
        expiryDateTime:
          description: 3DS challenge transaction expiry date time.
          type: string
          readOnly: true
          format: date-time
          example: "2020-01-01T16:06:05Z"
        eci:
          type: string
          description: Electronic Commerce Indicator value

    Error:
      description: Model for error messaging
      type: object
      properties:
        code:
          type: string
          description: Uniquely identifies an error condition. Client applications need to read and handle errors based on this.
        message:
          type: string
          description: A generic description of the error condition.
        category:
          type: string
          description: The resource associated with the error condition.
        developerInfo:
          type: object
          description: Information that needs to be understood by the client developers and should not be interpreted for application processing.
          properties:
            developerMessage:
              type: string
              description: An elaborative description of the error description.
            moreInfo:
              type: string
              description: Link to the error in Developer page.
            fieldError:
              description: Detailed information about message format errors.
              type: array
              items:
                properties:
                  field:
                    description: The property or attribute associated with the error
                    type: string
                  message:
                    description: Information specific to a property or attribute.
                    type: string
        hostExtraInfo:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
          uniqueItems: true
      example:
        code: "40000"
        message: "Example Error"
        category: "example"
        developerInfo:
          developerMessage: "Invalid Message format in request payload"
          moreInfo: "https://www.example.com/errors/40000"
          fieldError:
            - field: "example id"
              message: "exampleId is mandatory"

    AuthenticationStatus:
      description: Indicates the status of the authentication
      type: string
      readOnly: true
      enum:
        - APPROVED
        - CHALLENGED
        - DECLINED
        - NOT_PROCESSED

    CreditCardType:
      title: Credit Card Type
      description: Indicates the type of credit account association
      type: string
      enum:
        - AMEX
        - DISCOVER
        - MASTERCARD
        - PLCC
        - VISA
        - OTHER

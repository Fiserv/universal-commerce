openapi: 3.0.1
info:
  title: uCom Prepaid Account Services
  description: Services related to prepaid cards such as creating a new prepaid card,
    balance check, reloading funds, balance transfer etc.
  version: 0.2.2
servers:
- url: https://int.api.firstdata.com/ucom
tags:
- name: balance
  description: Operations and details about prepaid balance.
- name: purchase
  description: Operations and details about prepaid purchase.
- name: void
  description: Operations and details about prepaid void.
- name: reload
  description: Operations and details about prepaid reload.
- name: merge
  description: Operations and details about prepaid merge.
- name: transaction
  description: Operations and details about prepaid merge.
paths:
  /v1/prepaids/balances:
    post:
      x-group-name: Pre Paid Services
      x-proxy-name: Retrieve pre-paid balance
      tags:
      - balance
      description: Service to retrieve the balance of an anonymous Prepaid Card.
      parameters:
      - name: Api-Key
        in: header
        description: An API key is a string value passed by a client app to the API
          proxies.The key uniquely identifies the client app.
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Epoch timestamp in the request initiating system
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Authorization information for the request. Format- `HMAC {hmacToken}`
        required: true
        schema:
          type: string
      - name: Client-Token
        in: header
        description: Used to pass the original client OAuth token information given
          in a client-credentials flow.  This field is only used when the server is
          making the request and needs to link the transaction to a specific client.  Format-
          `Bearer {access_token}`
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: Contains a unique ID generated by the client that can be used
          for enforcing idempotency on POST actions. POSTs are inherently non-idempotent
          and submitting the exact same request multiple times would create duplicate
          resources. Note:- Omitting this header increases the risk of duplicate transactions,
          which for payments could cost the client issues like double-billing.
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: The Accept-Language header contains information about the language
          preference of a user. This HTTP header is useful to multilingual sites for
          deciding the best language to serve to the client. i.e en-US,fr-CA
        schema:
          type: string
      - name: Sub-Merchant-Id
        in: header
        description: Sub Merchant Id contains information about the merchant identifier
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidAccountRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prepaid'
        204:
          $ref: '#/parameters/LocationParam'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: payload
  /v1/prepaids/aggregate-balances:
    post:
      x-group-name: Pre Paid Services
      x-proxy-name: Retrieve balance of anonymous card
      tags:
      - balance
      description: Service to retrieve the balance of an anonymous Prepaid Card.
      parameters:
      - name: Api-Key
        in: header
        description: An API key is a string value passed by a client app to the API
          proxies.The key uniquely identifies the client app.
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Epoch timestamp in the request initiating system
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Authorization information for the request. Format- `HMAC {hmacToken}`
        required: true
        schema:
          type: string
      - name: Client-Token
        in: header
        description: Used to pass the original client OAuth token information given
          in a client-credentials flow.  This field is only used when the server is
          making the request and needs to link the transaction to a specific client.  Format-
          `Bearer {access_token}`
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: Contains a unique ID generated by the client that can be used
          for enforcing idempotency on POST actions. POSTs are inherently non-idempotent
          and submitting the exact same request multiple times would create duplicate
          resources. Note:- Omitting this header increases the risk of duplicate transactions,
          which for payments could cost the client issues like double-billing.
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: The Accept-Language header contains information about the language
          preference of a user. This HTTP header is useful to multilingual sites for
          deciding the best language to serve to the client. i.e en-US,fr-CA
        schema:
          type: string
      - name: Sub-Merchant-Id
        in: header
        description: Sub Merchant Id contains information about the merchant identifier
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidAggregateRequest'
        required: true
      responses:
        200:
          description: Prepaid balance response based on customer id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregateBalanceTransactionInfo'
        204:
          $ref: '#/parameters/LocationParam'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: payload
  /v1/prepaids/balances/{requestId}:
    get:
      x-group-name: Pre Paid Services
      x-proxy-name: Retrieve balance by identifier
      tags:
      - balance
      description: Service to retrieve the balance based on request identifier.
      parameters:
      - name: Api-Key
        in: header
        description: An API key is a string value passed by a client app to the API
          proxies.The key uniquely identifies the client app.
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Epoch timestamp in the request initiating system
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Authorization information for the request. Format- `HMAC {hmacToken}`
        required: true
        schema:
          type: string
      - name: Client-Token
        in: header
        description: Used to pass the original client OAuth token information given
          in a client-credentials flow.  This field is only used when the server is
          making the request and needs to link the transaction to a specific client.  Format-
          `Bearer {access_token}`
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: Contains a unique ID generated by the client that can be used
          for enforcing idempotency on POST actions. POSTs are inherently non-idempotent
          and submitting the exact same request multiple times would create duplicate
          resources. Note:- Omitting this header increases the risk of duplicate transactions,
          which for payments could cost the client issues like double-billing.
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: The Accept-Language header contains information about the language
          preference of a user. This HTTP header is useful to multilingual sites for
          deciding the best language to serve to the client. i.e en-US,fr-CA
        schema:
          type: string
      - name: requestId
        in: path
        description: Unique identifier for the request.
        required: true
        schema:
          type: string
      - name: Sub-Merchant-Id
        in: header
        description: Sub Merchant Id contains information about the merchant identifier
        schema:
          type: string
      responses:
        200:
          description: Prepaid balance response based on request id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidBalanceTransactionInfo'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/prepaids/purchases:
    post:
      x-group-name: Pre Paid Services
      x-proxy-name: create pre paid card
      tags:
      - purchase
      description: Service to create a new Prepaid card.
      parameters:
      - name: Api-Key
        in: header
        description: An API key is a string value passed by a client app to the API
          proxies.The key uniquely identifies the client app.
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Epoch timestamp in the request initiating system
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Authorization information for the request. Format- `HMAC {hmacToken}`
        required: true
        schema:
          type: string
      - name: Client-Token
        in: header
        description: Used to pass the original client OAuth token information given
          in a client-credentials flow.  This field is only used when the server is
          making the request and needs to link the transaction to a specific client.  Format-
          `Bearer {access_token}`
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: Contains a unique ID generated by the client that can be used
          for enforcing idempotency on POST actions. POSTs are inherently non-idempotent
          and submitting the exact same request multiple times would create duplicate
          resources. Note:- Omitting this header increases the risk of duplicate transactions,
          which for payments could cost the client issues like double-billing.
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: The Accept-Language header contains information about the language
          preference of a user. This HTTP header is useful to multilingual sites for
          deciding the best language to serve to the client. i.e en-US,fr-CA
        schema:
          type: string
      - name: Sub-Merchant-Id
        in: header
        description: Sub Merchant Id contains information about the merchant identifier
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidAccountRequest'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidPurchase'
        202:
          description: Partially Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidPurchase'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        409:
          description: Conflict - The requested operation conflicts with the current
            state of the identified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: payload
  /v2/prepaids/purchases:
    get:
      x-group-name: Pre Paid Services
      x-proxy-name: create pre paid card
      tags:
      - purchase
      description: Service to create a new Prepaid card.
      parameters:
      - name: Api-Key
        in: header
        description: An API key is a string value passed by a client app to the API
          proxies.The key uniquely identifies the client app.
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Epoch timestamp in the request initiating system
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Authorization information for the request. Format- `HMAC {hmacToken}`
        required: true
        schema:
          type: string
      - name: Client-Token
        in: header
        description: Used to pass the original client OAuth token information given
          in a client-credentials flow.  This field is only used when the server is
          making the request and needs to link the transaction to a specific client.  Format-
          `Bearer {access_token}`
        schema:
          type: string
      - name: clientRequestId
        in: query
        description: Id used in the previous transaction.
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: The Accept-Language header contains information about the language
          preference of a user. This HTTP header is useful to multilingual sites for
          deciding the best language to serve to the client. i.e en-US,fr-CA
        schema:
          type: string
      - name: Sub-Merchant-Id
        in: header
        description: Sub Merchant Id contains information about the merchant identifier
        schema:
          type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidPurchase'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        409:
          description: Conflict - The requested operation conflicts with the current
            state of the identified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v2/prepaids/multi-purchases:
    post:
      x-group-name: Pre Paid Services
      x-proxy-name: create new prepaid cards
      tags:
      - purchase
      description: Service to create new Prepaid cards.
      parameters:
      - name: Api-Key
        in: header
        description: An API key is a string value passed by a client app to the API
          proxies.The key uniquely identifies the client app.
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Epoch timestamp in the request initiating system
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Authorization information for the request. Format- `HMAC {hmacToken}`
        required: true
        schema:
          type: string
      - name: Client-Token
        in: header
        description: Used to pass the original client OAuth token information given
          in a client-credentials flow.  This field is only used when the server is
          making the request and needs to link the transaction to a specific client.  Format-
          `Bearer {access_token}`
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: Contains a unique ID generated by the client that can be used
          for enforcing idempotency on POST actions. POSTs are inherently non-idempotent
          and submitting the exact same request multiple times would create duplicate
          resources. Note:- Omitting this header increases the risk of duplicate transactions,
          which for payments could cost the client issues like double-billing.
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: The Accept-Language header contains information about the language
          preference of a user. This HTTP header is useful to multilingual sites for
          deciding the best language to serve to the client. i.e en-US,fr-CA
        schema:
          type: string
      - name: Sub-Merchant-Id
        in: header
        description: Sub Merchant Id contains information about the merchant identifier
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidMultiAccountRequest'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidMultiPurchase'
        207:
          description: Multiple status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidMultiPurchase'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        409:
          description: Conflict - The requested operation conflicts with the current
            state of the identified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        425:
          description: Request is too early to process.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: payload
  /v1/prepaids/void:
    post:
      x-group-name: Pre Paid Services
      x-proxy-name: deduct/cashout pre paid balance
      tags:
      - void
      description: Service to deduct/cashout prepaid account.
      parameters:
      - name: Api-Key
        in: header
        description: An API key is a string value passed by a client app to the API
          proxies.The key uniquely identifies the client app.
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Epoch timestamp in the request initiating system
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Authorization information for the request. Format- `HMAC {hmacToken}`
        required: true
        schema:
          type: string
      - name: Client-Token
        in: header
        description: Used to pass the original client OAuth token information given
          in a client-credentials flow.  This field is only used when the server is
          making the request and needs to link the transaction to a specific client.  Format-
          `Bearer {access_token}`
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: Contains a unique ID generated by the client that can be used
          for enforcing idempotency on POST actions. POSTs are inherently non-idempotent
          and submitting the exact same request multiple times would create duplicate
          resources. Note:- Omitting this header increases the risk of duplicate transactions,
          which for payments could cost the client issues like double-billing.
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: The Accept-Language header contains information about the language
          preference of a user. This HTTP header is useful to multilingual sites for
          deciding the best language to serve to the client. i.e en-US,fr-CA
        schema:
          type: string
      - name: Sub-Merchant-Id
        in: header
        description: Sub Merchant Id contains information about the merchant identifier
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidVoidRequest'
        required: true
      responses:
        200:
          description: Voided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidVoid'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        409:
          description: Conflict - The requested operation conflicts with the current
            state of the identified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: payload
  /v2/prepaids/void:
    get:
      x-group-name: Pre Paid Services
      x-proxy-name: Service to deduct/cashout prepaid account
      tags:
      - void
      description: Service to deduct/cashout prepaid account.
      parameters:
      - name: Api-Key
        in: header
        description: An API key is a string value passed by a client app to the API
          proxies.The key uniquely identifies the client app.
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Epoch timestamp in the request initiating system
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Authorization information for the request. Format- `HMAC {hmacToken}`
        required: true
        schema:
          type: string
      - name: Client-Token
        in: header
        description: Used to pass the original client OAuth token information given
          in a client-credentials flow.  This field is only used when the server is
          making the request and needs to link the transaction to a specific client.  Format-
          `Bearer {access_token}`
        schema:
          type: string
      - name: clientRequestId
        in: query
        description: Id used in the previous transaction.
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: The Accept-Language header contains information about the language
          preference of a user. This HTTP header is useful to multilingual sites for
          deciding the best language to serve to the client. i.e en-US,fr-CA
        schema:
          type: string
      - name: Sub-Merchant-Id
        in: header
        description: Sub Merchant Id contains information about the merchant identifier
        schema:
          type: string
      responses:
        200:
          description: Voided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidVoid'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        409:
          description: Conflict - The requested operation conflicts with the current
            state of the identified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v2/prepaids/multi-void:
    post:
      x-group-name: Pre Paid Services
      x-proxy-name: Service to deduct/cashout prepaid account
      tags:
      - void
      description: Service to deduct/cashout prepaid accounts.
      parameters:
      - name: Api-Key
        in: header
        description: An API key is a string value passed by a client app to the API
          proxies.The key uniquely identifies the client app.
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Epoch timestamp in the request initiating system
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Authorization information for the request. Format- `HMAC {hmacToken}`
        required: true
        schema:
          type: string
      - name: Client-Token
        in: header
        description: Used to pass the original client OAuth token information given
          in a client-credentials flow.  This field is only used when the server is
          making the request and needs to link the transaction to a specific client.  Format-
          `Bearer {access_token}`
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: Contains a unique ID generated by the client that can be used
          for enforcing idempotency on POST actions. POSTs are inherently non-idempotent
          and submitting the exact same request multiple times would create duplicate
          resources. Note:- Omitting this header increases the risk of duplicate transactions,
          which for payments could cost the client issues like double-billing.
        required: true
        schema:
          type: string
      - name: clientRequestId
        in: query
        description: Id used in the previous transaction.
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: The Accept-Language header contains information about the language
          preference of a user. This HTTP header is useful to multilingual sites for
          deciding the best language to serve to the client. i.e en-US,fr-CA
        schema:
          type: string
      - name: Sub-Merchant-Id
        in: header
        description: Sub Merchant Id contains information about the merchant identifier
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidMultiVoidRequest'
        required: true
      responses:
        200:
          description: Voided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidMultiVoid'
        207:
          description: Multiple status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidMultiVoid'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        409:
          description: Conflict - The requested operation conflicts with the current
            state of the identified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        425:
          description: Request is too early to process.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: payload
  /v1/prepaids/purchases/{fdTransactionId}:
    patch:
      x-group-name: Pre Paid Services
      x-proxy-name: Patch prepaid account
      tags:
      - purchase
      description: Service to patch a Prepaid card.
      parameters:
      - name: Api-Key
        in: header
        description: An API key is a string value passed by a client app to the API
          proxies.The key uniquely identifies the client app.
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Epoch timestamp in the request initiating system
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Authorization information for the request. Format- `HMAC {hmacToken}`
        required: true
        schema:
          type: string
      - name: Client-Token
        in: header
        description: Used to pass the original client OAuth token information given
          in a client-credentials flow.  This field is only used when the server is
          making the request and needs to link the transaction to a specific client.  Format-
          `Bearer {access_token}`
        schema:
          type: string
      - name: fdTransactionId
        in: path
        description: Unique identifier provided for a purchase/sale/merge transaction.
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: The Accept-Language header contains information about the language
          preference of a user. This HTTP header is useful to multilingual sites for
          deciding the best language to serve to the client. i.e en-US,fr-CA
        schema:
          type: string
      - name: Sub-Merchant-Id
        in: header
        description: Sub Merchant Id contains information about the merchant identifier
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  $ref: '#/components/schemas/UpdateActionType'
                deviceInfo:
                  $ref: '#/components/schemas/DeviceInfo'
        required: true
      responses:
        200:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidPurchase'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        409:
          description: Conflict - The requested operation conflicts with the current
            state of the identified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: payload
  /v1/prepaids/purchases/{fdTransactionId}/void:
    post:
      x-group-name: Pre Paid Services
      x-proxy-name: Void of a purchase transaction.
      tags:
      - purchase
      summary: Void of a purchase transaction.
      description: Void of a purchase transaction.
      parameters:
      - name: Api-Key
        in: header
        description: An API key is a string value passed by a client app to the API
          proxies.The key uniquely identifies the client app.
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Epoch timestamp in the request initiating system
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Authorization information for the request. Format- `HMAC {hmacToken}`
        required: true
        schema:
          type: string
      - name: Client-Token
        in: header
        description: Used to pass the original client OAuth token information given
          in a client-credentials flow.  This field is only used when the server is
          making the request and needs to link the transaction to a specific client.  Format-
          `Bearer {access_token}`
        schema:
          type: string
      - name: fdTransactionId
        in: path
        description: Unique identifier provided for a purchase/sale/merge transaction.
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: The Accept-Language header contains information about the language
          preference of a user. This HTTP header is useful to multilingual sites for
          deciding the best language to serve to the client. i.e en-US,fr-CA
        schema:
          type: string
      - name: Sub-Merchant-Id
        in: header
        description: Sub Merchant Id contains information about the merchant identifier
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoidRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prepaid'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: payload
  /v2/prepaids/purchases/{fdTransactionId}/void:
    post:
      x-group-name: Pre Paid Services
      x-proxy-name: Void of a purchase transaction.
      tags:
      - purchase
      summary: Void of a purchase transaction.
      description: Void of a purchase transaction.
      parameters:
      - name: Api-Key
        in: header
        description: An API key is a string value passed by a client app to the API
          proxies.The key uniquely identifies the client app.
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Epoch timestamp in the request initiating system
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Authorization information for the request. Format- `HMAC {hmacToken}`
        required: true
        schema:
          type: string
      - name: Client-Token
        in: header
        description: Used to pass the original client OAuth token information given
          in a client-credentials flow.  This field is only used when the server is
          making the request and needs to link the transaction to a specific client.  Format-
          `Bearer {access_token}`
        schema:
          type: string
      - name: fdTransactionId
        in: path
        description: Unique identifier provided for a purchase/sale/merge transaction.
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: The Accept-Language header contains information about the language
          preference of a user. This HTTP header is useful to multilingual sites for
          deciding the best language to serve to the client. i.e en-US,fr-CA
        schema:
          type: string
      - name: Sub-Merchant-Id
        in: header
        description: Sub Merchant Id contains information about the merchant identifier
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidVoidRequest'
        required: true
      responses:
        200:
          description: Voided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidVoid'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: payload
  /v2/prepaids/purchases/{fdParentTransactionId}/multi-void:
    post:
      x-group-name: Pre Paid Services
      x-proxy-name: Void of a purchase transaction.
      tags:
      - purchase
      summary: Void of purchase transactions.
      description: Void of purchase transactions.
      parameters:
      - name: Api-Key
        in: header
        description: An API key is a string value passed by a client app to the API
          proxies.The key uniquely identifies the client app.
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Epoch timestamp in the request initiating system
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Authorization information for the request. Format- `HMAC {hmacToken}`
        required: true
        schema:
          type: string
      - name: Client-Token
        in: header
        description: Used to pass the original client OAuth token information given
          in a client-credentials flow.  This field is only used when the server is
          making the request and needs to link the transaction to a specific client.  Format-
          `Bearer {access_token}`
        schema:
          type: string
      - name: fdParentTransactionId
        in: path
        description: Unique identifier provided for a parent transaction.
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: The Accept-Language header contains information about the language
          preference of a user. This HTTP header is useful to multilingual sites for
          deciding the best language to serve to the client. i.e en-US,fr-CA
        schema:
          type: string
      - name: Sub-Merchant-Id
        in: header
        description: Sub Merchant Id contains information about the merchant identifier
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidMultiVoidRequest'
        required: true
      responses:
        200:
          description: Voided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidMultiVoid'
        207:
          description: Multiple status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidMultiVoid'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: payload
  /v1/prepaids/reloads:
    post:
      x-group-name: Pre Paid Services
      x-proxy-name: Re-Load prepaid card
      tags:
      - reload
      description: Service to load fund into a vaulted Prepaid Card.
      parameters:
      - name: Api-Key
        in: header
        description: An API key is a string value passed by a client app to the API
          proxies.The key uniquely identifies the client app.
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Epoch timestamp in the request initiating system
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Authorization information for the request. Format- `HMAC {hmacToken}`
        required: true
        schema:
          type: string
      - name: Client-Token
        in: header
        description: Used to pass the original client OAuth token information given
          in a client-credentials flow.  This field is only used when the server is
          making the request and needs to link the transaction to a specific client.  Format-
          `Bearer {access_token}`
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: Contains a unique ID generated by the client that can be used
          for enforcing idempotency on POST actions. POSTs are inherently non-idempotent
          and submitting the exact same request multiple times would create duplicate
          resources. Note:- Omitting this header increases the risk of duplicate transactions,
          which for payments could cost the client issues like double-billing.
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: The Accept-Language header contains information about the language
          preference of a user. This HTTP header is useful to multilingual sites for
          deciding the best language to serve to the client. i.e en-US,fr-CA
        schema:
          type: string
      - name: Sub-Merchant-Id
        in: header
        description: Sub Merchant Id contains information about the merchant identifier
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadFundsRequest'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadFundsPurchase'
        202:
          description: Partially Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadFundsPurchase'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        409:
          description: Conflict - The requested operation conflicts with the current
            state of the identified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: payload
  /v2/prepaids/reloads:
    get:
      x-group-name: Pre Paid Services
      x-proxy-name: Load funds in a vaulted prepaid card
      tags:
      - reload
      description: Service to load fund into a vaulted Prepaid Card.
      parameters:
      - name: Api-Key
        in: header
        description: An API key is a string value passed by a client app to the API
          proxies.The key uniquely identifies the client app.
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Epoch timestamp in the request initiating system
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Authorization information for the request. Format- `HMAC {hmacToken}`
        required: true
        schema:
          type: string
      - name: Client-Token
        in: header
        description: Used to pass the original client OAuth token information given
          in a client-credentials flow.  This field is only used when the server is
          making the request and needs to link the transaction to a specific client.  Format-
          `Bearer {access_token}`
        schema:
          type: string
      - name: clientRequestId
        in: query
        description: Id used in the previous transaction.
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: The Accept-Language header contains information about the language
          preference of a user. This HTTP header is useful to multilingual sites for
          deciding the best language to serve to the client. i.e en-US,fr-CA
        schema:
          type: string
      - name: Sub-Merchant-Id
        in: header
        description: Sub Merchant Id contains information about the merchant identifier
        schema:
          type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadFundsPurchase'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        409:
          description: Conflict - The requested operation conflicts with the current
            state of the identified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v2/prepaids/multi-reloads:
    post:
      x-group-name: Pre Paid Services
      x-proxy-name: Load fundsto as vaulted prepaid card
      tags:
      - reload
      description: Service to load fund into a vaulted Prepaid Card.
      parameters:
      - name: Api-Key
        in: header
        description: An API key is a string value passed by a client app to the API
          proxies.The key uniquely identifies the client app.
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Epoch timestamp in the request initiating system
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Authorization information for the request. Format- `HMAC {hmacToken}`
        required: true
        schema:
          type: string
      - name: Client-Token
        in: header
        description: Used to pass the original client OAuth token information given
          in a client-credentials flow.  This field is only used when the server is
          making the request and needs to link the transaction to a specific client.  Format-
          `Bearer {access_token}`
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: Contains a unique ID generated by the client that can be used
          for enforcing idempotency on POST actions. POSTs are inherently non-idempotent
          and submitting the exact same request multiple times would create duplicate
          resources. Note:- Omitting this header increases the risk of duplicate transactions,
          which for payments could cost the client issues like double-billing.
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: The Accept-Language header contains information about the language
          preference of a user. This HTTP header is useful to multilingual sites for
          deciding the best language to serve to the client. i.e en-US,fr-CA
        schema:
          type: string
      - name: Sub-Merchant-Id
        in: header
        description: Sub Merchant Id contains information about the merchant identifier
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadMultiFundsRequest'
        required: true
      responses:
        200:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadMultiFundsPurchase'
        207:
          description: Multiple Status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadMultiFundsPurchase'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        409:
          description: Conflict - The requested operation conflicts with the current
            state of the identified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        425:
          description: Request is too early to process.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: payload
  /v1/prepaids/reloads/{fdTransactionId}:
    patch:
      x-group-name: Pre Paid Services
      x-proxy-name: Load funds into a vaulted prepaid card
      tags:
      - reload
      description: Service to load fund into a vaulted Prepaid Card.
      parameters:
      - name: Api-Key
        in: header
        description: An API key is a string value passed by a client app to the API
          proxies.The key uniquely identifies the client app.
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Epoch timestamp in the request initiating system
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Authorization information for the request. Format- `HMAC {hmacToken}`
        required: true
        schema:
          type: string
      - name: Client-Token
        in: header
        description: Used to pass the original client OAuth token information given
          in a client-credentials flow.  This field is only used when the server is
          making the request and needs to link the transaction to a specific client.  Format-
          `Bearer {access_token}`
        schema:
          type: string
      - name: fdTransactionId
        in: path
        description: Unique identifier provided for a purchase/sale/merge transaction.
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: The Accept-Language header contains information about the language
          preference of a user. This HTTP header is useful to multilingual sites for
          deciding the best language to serve to the client. i.e en-US,fr-CA
        schema:
          type: string
      - name: Sub-Merchant-Id
        in: header
        description: Sub Merchant Id contains information about the merchant identifier
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  $ref: '#/components/schemas/UpdateActionType'
                deviceInfo:
                  $ref: '#/components/schemas/DeviceInfo'
        required: true
      responses:
        200:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadFundsPurchase'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        409:
          description: Conflict - The requested operation conflicts with the current
            state of the identified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: payload
  /v1/prepaids/reloads/{fdTransactionId}/void:
    post:
      x-group-name: Pre Paid Services
      x-proxy-name: Void of a reoaded prepaid card
      tags:
      - reload
      summary: Void of a reload transaction.
      description: Void of a reload transaction.
      parameters:
      - name: Api-Key
        in: header
        description: An API key is a string value passed by a client app to the API
          proxies.The key uniquely identifies the client app.
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Epoch timestamp in the request initiating system
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Authorization information for the request. Format- `HMAC {hmacToken}`
        required: true
        schema:
          type: string
      - name: Client-Token
        in: header
        description: Used to pass the original client OAuth token information given
          in a client-credentials flow.  This field is only used when the server is
          making the request and needs to link the transaction to a specific client.  Format-
          `Bearer {access_token}`
        schema:
          type: string
      - name: fdTransactionId
        in: path
        description: Unique identifier provided for a purchase/sale/merge transaction.
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: The Accept-Language header contains information about the language
          preference of a user. This HTTP header is useful to multilingual sites for
          deciding the best language to serve to the client. i.e en-US,fr-CA
        schema:
          type: string
      - name: Sub-Merchant-Id
        in: header
        description: Sub Merchant Id contains information about the merchant identifier
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoidRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prepaid'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: payload
  /v2/prepaids/reloads/{fdTransactionId}/void:
    post:
      x-group-name: Pre Paid Services
      x-proxy-name: Void a reload transaction on prepaid card
      tags:
      - reload
      summary: Void of a reload transaction.
      description: Void of a reload transaction.
      parameters:
      - name: Api-Key
        in: header
        description: An API key is a string value passed by a client app to the API
          proxies.The key uniquely identifies the client app.
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Epoch timestamp in the request initiating system
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Authorization information for the request. Format- `HMAC {hmacToken}`
        required: true
        schema:
          type: string
      - name: Client-Token
        in: header
        description: Used to pass the original client OAuth token information given
          in a client-credentials flow.  This field is only used when the server is
          making the request and needs to link the transaction to a specific client.  Format-
          `Bearer {access_token}`
        schema:
          type: string
      - name: fdTransactionId
        in: path
        description: Unique identifier provided for a purchase/sale/merge transaction.
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: The Accept-Language header contains information about the language
          preference of a user. This HTTP header is useful to multilingual sites for
          deciding the best language to serve to the client. i.e en-US,fr-CA
        schema:
          type: string
      - name: Sub-Merchant-Id
        in: header
        description: Sub Merchant Id contains information about the merchant identifier
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidVoidRequest'
        required: true
      responses:
        200:
          description: Voided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidVoid'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: payload
  /v2/prepaids/reloads/{fdParentTransactionId}/multi-void:
    post:
      x-group-name: Pre Paid Services
      x-proxy-name: Void of a reloaded transaction
      tags:
      - reload
      summary: Void of reload transactions.
      description: Void of reload transactions.
      parameters:
      - name: Api-Key
        in: header
        description: An API key is a string value passed by a client app to the API
          proxies.The key uniquely identifies the client app.
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Epoch timestamp in the request initiating system
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Authorization information for the request. Format- `HMAC {hmacToken}`
        required: true
        schema:
          type: string
      - name: Client-Token
        in: header
        description: Used to pass the original client OAuth token information given
          in a client-credentials flow.  This field is only used when the server is
          making the request and needs to link the transaction to a specific client.  Format-
          `Bearer {access_token}`
        schema:
          type: string
      - name: fdParentTransactionId
        in: path
        description: Unique identifier provided for a parent transaction.
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: The Accept-Language header contains information about the language
          preference of a user. This HTTP header is useful to multilingual sites for
          deciding the best language to serve to the client. i.e en-US,fr-CA
        schema:
          type: string
      - name: Sub-Merchant-Id
        in: header
        description: Sub Merchant Id contains information about the merchant identifier
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidMultiVoidRequest'
        required: true
      responses:
        200:
          description: Voided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidMultiVoid'
        207:
          description: Multiple status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidMultiVoid'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        425:
          description: Request is too early to process.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: payload
  /v1/prepaids/merges:
    post:
      x-group-name: Pre Paid Services
      x-proxy-name: Merge balance from one vaulted prepaid card to another
      tags:
      - merge
      description: Service to merge balance from one vaulted prepaid card to another
        vaulted prepaid card.
      parameters:
      - name: Api-Key
        in: header
        description: An API key is a string value passed by a client app to the API
          proxies.The key uniquely identifies the client app.
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Epoch timestamp in the request initiating system
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Authorization information for the request. Format- `HMAC {hmacToken}`
        required: true
        schema:
          type: string
      - name: Client-Token
        in: header
        description: Used to pass the original client OAuth token information given
          in a client-credentials flow.  This field is only used when the server is
          making the request and needs to link the transaction to a specific client.  Format-
          `Bearer {access_token}`
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: Contains a unique ID generated by the client that can be used
          for enforcing idempotency on POST actions. POSTs are inherently non-idempotent
          and submitting the exact same request multiple times would create duplicate
          resources. Note:- Omitting this header increases the risk of duplicate transactions,
          which for payments could cost the client issues like double-billing.
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: The Accept-Language header contains information about the language
          preference of a user. This HTTP header is useful to multilingual sites for
          deciding the best language to serve to the client. i.e en-US,fr-CA
        schema:
          type: string
      - name: Sub-Merchant-Id
        in: header
        description: Sub Merchant Id contains information about the merchant identifier
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergeAccountsRequest'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MergeBalanceTransaction'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        409:
          description: Conflict - The requested operation conflicts with the current
            state of the identified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: payload
  /v2/prepaids/merges:
    get:
      x-group-name: Pre Paid Services
      x-proxy-name: Merge balance from one vaulted prepaid card to another
      tags:
      - merge
      description: Service to merge balance from one vaulted prepaid card to another
        vaulted prepaid card.
      parameters:
      - name: Api-Key
        in: header
        description: An API key is a string value passed by a client app to the API
          proxies.The key uniquely identifies the client app.
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Epoch timestamp in the request initiating system
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Authorization information for the request. Format- `HMAC {hmacToken}`
        required: true
        schema:
          type: string
      - name: Client-Token
        in: header
        description: Used to pass the original client OAuth token information given
          in a client-credentials flow.  This field is only used when the server is
          making the request and needs to link the transaction to a specific client.  Format-
          `Bearer {access_token}`
        schema:
          type: string
      - name: clientRequestId
        in: query
        description: Id used in the previous transaction.
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: The Accept-Language header contains information about the language
          preference of a user. This HTTP header is useful to multilingual sites for
          deciding the best language to serve to the client. i.e en-US,fr-CA
        schema:
          type: string
      - name: Sub-Merchant-Id
        in: header
        description: Sub Merchant Id contains information about the merchant identifier
        schema:
          type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MergeBalanceTransaction'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        409:
          description: Conflict - The requested operation conflicts with the current
            state of the identified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/prepaids/merges/{fdTransactionId}/void:
    post:
      x-group-name: Pre Paid Services
      x-proxy-name: Void of a merge transaction
      tags:
      - merge
      summary: Void of a merge transaction.
      description: Void of a merge transaction.
      parameters:
      - name: Api-Key
        in: header
        description: An API key is a string value passed by a client app to the API
          proxies.The key uniquely identifies the client app.
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Epoch timestamp in the request initiating system
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Authorization information for the request. Format- `HMAC {hmacToken}`
        required: true
        schema:
          type: string
      - name: Client-Token
        in: header
        description: Used to pass the original client OAuth token information given
          in a client-credentials flow.  This field is only used when the server is
          making the request and needs to link the transaction to a specific client.  Format-
          `Bearer {access_token}`
        schema:
          type: string
      - name: fdTransactionId
        in: path
        description: Unique identifier provided for a purchase/sale/merge transaction.
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: The Accept-Language header contains information about the language
          preference of a user. This HTTP header is useful to multilingual sites for
          deciding the best language to serve to the client. i.e en-US,fr-CA
        schema:
          type: string
      - name: Sub-Merchant-Id
        in: header
        description: Sub Merchant Id contains information about the merchant identifier
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoidRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prepaid'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: payload
  /v2/prepaids/merges/{fdTransactionId}/void:
    post:
      x-group-name: Pre Paid Services
      x-proxy-name: Void of a merge transaction
      tags:
      - merge
      summary: Void of a merge transaction.
      description: Void of a merge transaction.
      parameters:
      - name: Api-Key
        in: header
        description: An API key is a string value passed by a client app to the API
          proxies.The key uniquely identifies the client app.
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Epoch timestamp in the request initiating system
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Authorization information for the request. Format- `HMAC {hmacToken}`
        required: true
        schema:
          type: string
      - name: Client-Token
        in: header
        description: Used to pass the original client OAuth token information given
          in a client-credentials flow.  This field is only used when the server is
          making the request and needs to link the transaction to a specific client.  Format-
          `Bearer {access_token}`
        schema:
          type: string
      - name: fdTransactionId
        in: path
        description: Unique identifier provided for a purchase/sale/merge transaction.
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: The Accept-Language header contains information about the language
          preference of a user. This HTTP header is useful to multilingual sites for
          deciding the best language to serve to the client. i.e en-US,fr-CA
        schema:
          type: string
      - name: Sub-Merchant-Id
        in: header
        description: Sub Merchant Id contains information about the merchant identifier
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidVoidRequest'
        required: true
      responses:
        200:
          description: Voided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidVoid'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        404:
          description: Not Found - The requested resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: payload
  /v1/prepaids/transactions:
    post:
      x-group-name: Pre Paid Services
      x-proxy-name: Retrieve transactions on a vaulted Prepaid Card
      tags:
      - transaction
      description: Service to retrieve transactions on a vaulted Prepaid Card from
        the host.
      parameters:
      - name: Api-Key
        in: header
        description: An API key is a string value passed by a client app to the API
          proxies.The key uniquely identifies the client app.
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Epoch timestamp in the request initiating system
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Authorization information for the request. Format- `HMAC {hmacToken}`
        required: true
        schema:
          type: string
      - name: Client-Token
        in: header
        description: Used to pass the original client OAuth token information given
          in a client-credentials flow.  This field is only used when the server is
          making the request and needs to link the transaction to a specific client.  Format-
          `Bearer {access_token}`
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: Contains a unique ID generated by the client that can be used
          for enforcing idempotency on POST actions. POSTs are inherently non-idempotent
          and submitting the exact same request multiple times would create duplicate
          resources. Note:- Omitting this header increases the risk of duplicate transactions,
          which for payments could cost the client issues like double-billing.
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: The Accept-Language header contains information about the language
          preference of a user. This HTTP header is useful to multilingual sites for
          deciding the best language to serve to the client. i.e en-US,fr-CA
        schema:
          type: string
      - name: Sub-Merchant-Id
        in: header
        description: Sub Merchant Id contains information about the merchant identifier
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidAccountRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                title: TransactionList
                type: array
                items:
                  $ref: '#/components/schemas/PrepaidTransaction'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        409:
          description: Conflict - The requested operation conflicts with the current
            state of the identified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: payload
  /v1/prepaids/txn-history:
    post:
      x-group-name: Pre Paid Services
      x-proxy-name: Retrieve transactions on a vaulted Prepaid Card
      tags:
      - transaction
      description: Service to retrieve transactions on a vaulted Prepaid Card from
        the host.
      parameters:
      - name: Api-Key
        in: header
        description: An API key is a string value passed by a client app to the API
          proxies.The key uniquely identifies the client app.
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Epoch timestamp in the request initiating system
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Authorization information for the request. Format- `HMAC {hmacToken}`
        required: true
        schema:
          type: string
      - name: Client-Token
        in: header
        description: Used to pass the original client OAuth token information given
          in a client-credentials flow.  This field is only used when the server is
          making the request and needs to link the transaction to a specific client.  Format-
          `Bearer {access_token}`
        schema:
          type: string
      - name: Client-Request-Id
        in: header
        description: Contains a unique ID generated by the client that can be used
          for enforcing idempotency on POST actions. POSTs are inherently non-idempotent
          and submitting the exact same request multiple times would create duplicate
          resources. Note:- Omitting this header increases the risk of duplicate transactions,
          which for payments could cost the client issues like double-billing.
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: The Accept-Language header contains information about the language
          preference of a user. This HTTP header is useful to multilingual sites for
          deciding the best language to serve to the client. i.e en-US,fr-CA
        schema:
          type: string
      - name: pageNo
        in: query
        description: Page number
        schema:
          type: integer
      - name: pageSize
        in: query
        description: Max number of records per page. Supported values - 5, 10, 15,
          20, 25 ..50
        allowEmptyValue: false
        schema:
          type: integer
      - name: startDate
        in: query
        description: Date from which transactions are to be retrieved. Format YYYYMMDD
        schema:
          type: string
          format: date-time
      - name: endDate
        in: query
        description: Date upto which transactions are to be retrieved. Format YYYYMMDD
        schema:
          type: string
          format: date-time
      - name: Sub-Merchant-Id
        in: header
        description: Sub Merchant Id contains information about the merchant identifier
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidAccountRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidTxnSearchResult'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: payload
components:
  schemas:
    LoadFundsRequest:
      type: object
      properties:
        fdCustomerId:
          $ref: '#/components/schemas/FdCustomerId'
        externalCustomerId:
          $ref: '#/components/schemas/ExternalCustomerId'
        transaction:
          $ref: '#/components/schemas/LoadFundsPurchase'
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
      description: Reload a Prepaid Account Request
    LoadMultiFundsRequest:
      type: object
      properties:
        fdCustomerId:
          $ref: '#/components/schemas/FdCustomerId'
        externalCustomerId:
          $ref: '#/components/schemas/ExternalCustomerId'
        parentExternalId:
          type: string
          description: External transaction id reference
        merchantTransactionId:
          type: string
          description: Merchant transaction id
        purchaseInfo:
          $ref: '#/components/schemas/PurchaseInfo'
        replayCount:
          type: number
          description: Indicates request retry attempt count.
        postDate:
          type: string
          description: Settlement date for the transaction. Format- MMDDYYYY
          format: date
        hostExtraInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/LoadFundsPurchase'
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
      description: Reload a Prepaid Account Requests
    MergeAccountsRequest:
      type: object
      properties:
        fdCustomerId:
          $ref: '#/components/schemas/FdCustomerId'
        externalCustomerId:
          $ref: '#/components/schemas/ExternalCustomerId'
        transaction:
          $ref: '#/components/schemas/MergeBalanceTransaction'
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
      description: Merge a Accounts Request
    PrepaidAggregateRequest:
      type: object
      properties:
        fdCustomerId:
          $ref: '#/components/schemas/FdCustomerId'
        externalCustomerId:
          $ref: '#/components/schemas/ExternalCustomerId'
        groupNames:
          minItems: 0
          type: array
          items:
            type: string
        transaction:
          $ref: '#/components/schemas/PrepaidPurchase'
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
      description: Prepaid Aggregate Request
    PrepaidAccountRequest:
      type: object
      properties:
        fdCustomerId:
          $ref: '#/components/schemas/FdCustomerId'
        externalCustomerId:
          $ref: '#/components/schemas/ExternalCustomerId'
        transaction:
          $ref: '#/components/schemas/PrepaidPurchase'
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
      description: Purchase a Prepaid Account Request
    PrepaidMultiAccountRequest:
      type: object
      properties:
        fdCustomerId:
          $ref: '#/components/schemas/FdCustomerId'
        parentExternalId:
          type: string
          description: External transaction id reference
        merchantTransactionId:
          type: string
          description: Merchant transaction id
        externalCustomerId:
          $ref: '#/components/schemas/ExternalCustomerId'
        purchaseInfo:
          $ref: '#/components/schemas/PurchaseInfo'
        replayCount:
          type: number
          description: Indicates request retry attempt count.
        postDate:
          type: string
          description: Settlement date for the transaction. Format- MMDDYYYY
          format: date
        hostExtraInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/PrepaidPurchase'
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
      description: Purchase Multiple Prepaid Account Request
    PrepaidVoidRequest:
      type: object
      properties:
        fdCustomerId:
          $ref: '#/components/schemas/FdCustomerId'
        externalCustomerId:
          $ref: '#/components/schemas/ExternalCustomerId'
        transaction:
          $ref: '#/components/schemas/PrepaidVoid'
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
      description: Purchase a Prepaid Account Request
    PrepaidMultiVoidRequest:
      type: object
      properties:
        fdCustomerId:
          $ref: '#/components/schemas/FdCustomerId'
        externalCustomerId:
          $ref: '#/components/schemas/ExternalCustomerId'
        parentExternalId:
          type: string
          description: External transaction id reference
        merchantTransactionId:
          type: string
          description: Merchant transaction id
        purchaseInfo:
          $ref: '#/components/schemas/PurchaseInfo'
        replayCount:
          type: number
          description: Indicates request retry attempt count.
        operationType:
          $ref: '#/components/schemas/OperationType'
        postDate:
          type: string
          description: Settlement date for the transaction. Format- MMDDYYYY
          format: date
        hostExtraInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/PrepaidVoid'
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
      description: Purchase Multiple Prepaid Void Request
    VoidRequest:
      type: object
      properties:
        fdCustomerId:
          $ref: '#/components/schemas/FdCustomerId'
        externalCustomerId:
          $ref: '#/components/schemas/ExternalCustomerId'
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
    ACH:
      type: object
      properties:
        accountNumber:
          type: string
          description: Unique number identifying the ACH account provided by Financial
            institution.
          example: "92658250156"
        routingNumber:
          type: string
          description: Number to identify the financial institution
          example: "999999999"
        secCode:
          type: string
          description: SEC Code is optional data, It is specifically required for
            ACH account which is ruled by NACHA compliance.
        cardNumber:
          type: string
          description: ACH Card number, can only be sent when vaulting an account.  This
            field will NOT be present in responses.
          example: "9111111111111111"
        cardType:
          $ref: '#/components/schemas/AchCardType'
        securityCode:
          type: string
          description: Code to validate the ACH account, like micro deposit or security
            code.
          example: "278356"
        alias:
          type: string
          description: Last four values of the cardNumber
          readOnly: true
          example: "1111"
        enrollmentStatus:
          $ref: '#/components/schemas/AchEnrollmentStatus'
        enrollmentSubStatuses:
          type: array
          items:
            $ref: '#/components/schemas/AchEnrollmentSubStatus'
        accountType:
          $ref: '#/components/schemas/AchAccountType'
        bankName:
          type: string
          description: Name of the bank associated with the ACH account
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        assetProvider:
          $ref: '#/components/schemas/AssetProvider'
      description: Information about an ACH account
    Address:
      type: object
      properties:
        type:
          type: string
          description: Canonical type values of "work", "home", and "other".
        streetAddress:
          type: string
          description: The full street address component, which may include house
            number, street name, P.O. box, and multi-line extended street address
            information.
        locality:
          type: string
          description: The city or locality component.
        region:
          type: string
          description: The state or region component.
        postalCode:
          type: string
          description: The zip code or postal code component.
        country:
          type: string
          description: The country name component.  When specified, the value MUST
            be in ISO 3166-1 "alpha-2" code format; e.g., the United States and Sweden
            are "US" and "SE", respectively.
        formatted:
          type: string
          description: The full mailing address, formatted for display or use with
            a mailing label.
        primary:
          type: boolean
          description: Indicates if this is the default address for the associated
            resource. It only has meaning when used in a set or array of addresses.
      description: A physical mailing address for this user.
      example:
        type: work
        streetAddress: 100 Universal City Plaza
        locality: Hollywood
        region: CA
        postalCode: "91608"
        country: US
        formatted: |-
          100 Universal City Plaza
          Hollywood, CA 91608 US
        primary: true
    AmazonPay:
      type: object
      properties:
        token:
          type: string
          example: 292bb6b886fc4446894f878b7e32bd5e
        chargeId:
          type: string
          example: 73883992djj39939djj929992jj08838
        chargeReferenceId:
          type: string
          example: 8jdw838dhhskk9299299299ueuuue838
        credit:
          $ref: '#/components/schemas/Credit'
    AndroidPay:
      type: object
      properties:
        data:
          type: string
          example: 3CguW5ecfTzO...03d
        signature:
          type: string
          example: MIAGCSqGSIb......AAAA==
        decryptAlias:
          type: string
          description: field of the public key certificate.
          example: oslo.com.xxx.Prod_mer
        dPanLast4:
          type: string
          example: "9876"
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        header:
          type: object
          properties:
            ephemeralPublicKey:
              type: string
              example: MFkwEw...03d
            publicKeyHash:
              type: string
              example: +vbONw...IM=
        token:
          $ref: '#/components/schemas/ReferenceToken'
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'
    ApplePay:
      type: object
      properties:
        version:
          type: string
          example: EC_v1
        developerEmail:
          type: string
        signature:
          type: string
          example: MIAGCSqGSIb......AAAA==
        decryptAlias:
          type: string
          description: field of the public key certificate.
          example: oslo.com.xxx.Prod_mer
        data:
          type: string
          example: 3CguW5ecfTz...Yuhw=
        applicationData:
          type: string
          example: VEVTVA==
        dPanLast4:
          type: string
          example: "9876"
        bin:
          type: string
        eciIndicator:
          type: string
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        panType:
          type: string
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        header:
          type: object
          properties:
            applicationDataHash:
              type: string
            ephemeralPublicKey:
              type: string
              example: MFkwEwYHKoZIzj0CIKoZIz.....NBQQ==
            publicKeyHash:
              type: string
              example: +vbONwRlVqJX0........
            transactionId:
              type: string
              example: 3827c5a02638.....34d50
        token:
          $ref: '#/components/schemas/ReferenceToken'
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'
    Authorization:
      type: object
      properties:
        authorizationId:
          type: string
          description: Unique identifier for the payment authorization.
          example: 8a34843d4f2acc91014f2dc1e85e0122
        transactionTime:
          type: string
          description: Transaction date time value.
          format: date-time
          readOnly: true
          example: 2017-03-21T08:15:30-05:00
      description: Information related to the authorization transaction on the source
        card.
    AggregateBalanceTransactionInfo:
      type: object
      properties:
        totalBalance:
          type: number
          description: sum of prepaid card in lower denomination of the currency.
        groupBalances:
          type: array
          items:
            $ref: '#/components/schemas/GroupPrepaidBalanceInfo'
      description: Prepaid balance transaction response.
    AssetProvider:
      type: object
      properties:
        providerName:
          type: string
          example: coinbase
    BalanceInfo:
      required:
      - currencyCode
      - currentBalance
      type: object
      properties:
        currentBalance:
          type: number
          description: The current balance of prepaid card in lower denomination of
            the currency.
        beginBalance:
          type: number
          description: The balance of prepaid card before a transaction in lower denomination
            of the currency.
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'
        currencyType:
          $ref: '#/components/schemas/CurrencyPairType'
      description: Details of balance in the prepaid card.
      example:
        currentBalance: 1100
        beginBalance: 1000
    Bancontact:
      type: object
      properties:
        returnUrl:
          type: string
        deepLink:
          type: string
        alias:
          type: string
          example: "9876"
        cardType:
          $ref: '#/components/schemas/CreditCardType'
    Credit:
      type: object
      properties:
        cardNumber:
          type: string
          description: Primary account number, can only be sent when vaulting an account.
            This field will NOT be present in responses.
          example: "4111111111111111"
        bin:
          type: string
        nameOnCard:
          type: string
          description: Name as printed on physical card or on virtual account
          example: John Smith
        alias:
          type: string
          description: Last four values of the cardNumber
          readOnly: true
          example: "1111"
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        cardSubType:
          type: string
          description: Merchant or brand specific information about the type of account
          example: ABCD
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        securityCode:
          type: string
          example: "444"
        sequenceNumber:
          type: string
          description: Applicable only for private-label accounts
          example: "01"
        token:
          $ref: '#/components/schemas/ReferenceToken'
      description: Information on a credit account
    DynamicDescriptors:
      type: object
      properties:
        merchantCategoryCode:
          type: string
          description: Merchant category code
        merchantName:
          type: string
          description: Merchant name
        merchantEmail:
          $ref: '#/components/schemas/Email'
        customerServiceNumber:
          $ref: '#/components/schemas/Phone'
        serviceEntitlementNumber:
          type: string
          description: Service entitlement number
        merchantAddress:
          $ref: '#/components/schemas/Address'
    EBT:
      type: object
      properties:
        cardNumber:
          type: string
          description: Primary account number, can only be sent when vaulting an account.  This
            field will NOT be present in responses.
        nameOnCard:
          type: string
          description: Name as printed on physical card or on virtual account
        alias:
          type: string
          description: Last four values of the cardNumber
          readOnly: true
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        bin:
          type: string
          description: BIN of EBT card
          readOnly: true
        pin:
          type: string
          description: PIN for EBT card
        pinCaptureId:
          type: string
          description: Session id used on client side SDK to capture the card pin
        transactionId:
          type: string
          description: The unique transaction ID
        balance:
          $ref: '#/components/schemas/EBTBalance'
        metadata:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
        token:
          $ref: '#/components/schemas/ReferenceToken'
      description: Electronic Benefits Transfer card information
    EBTBalance:
      type: object
      properties:
        cashBalance:
          type: number
        cashCurrencyCode:
          $ref: '#/components/schemas/ISO-4217'
        snapBalance:
          type: number
        snapCurrencyCode:
          $ref: '#/components/schemas/ISO-4217'
    Email:
      type: object
      properties:
        type:
          type: string
          description: The "type" sub-attribute is used to provide a classification
            meaningful to the (human) user.  The user interface should encourage the
            use of basic values of "work", "home", and "other" and MAY allow additional
            type values to be used at the discretion of the service client.
        value:
          type: string
          description: The value SHOULD be specified according to RFC5321.
        primary:
          type: boolean
          description: Defines if this entry is to be used as the primary or default
            for the user.
          default: false
      description: Email address for the user.
      example:
        value: bjensen@example.com
        type: work
        primary: true
    ExpiryDate:
      type: object
      properties:
        month:
          maxLength: 2
          minLength: 2
          pattern: '[0-9]{2,2}'
          type: string
          description: Month format 'MM'
          example: "09"
        year:
          maxLength: 2
          minLength: 2
          pattern: '[0-9]{2,2}'
          type: string
          description: Year format 'YY'
          example: "20"
        singleValue:
          maxLength: 6
          minLength: 4
          type: string
          description: Month and year together, 'MMYY' or 'MMYYYY'.  If the latter
            format, the string will be parsed and validated per the given format.  Any
            other format will be rejected.
      description: Contains account expiration data and needs to either send the values
        in individual fields OR as a singleValue.
    ExternalCustomerId:
      title: External Customer ID
      type: string
      description: External customer id.
    FdCustomerId:
      title: FD Customer ID
      type: string
      description: FD customer identifier tied to the vaulted accounts.
      example: cuid-0987613457398475
    FundingInfo:
      type: object
      properties:
        fundValue:
          type: number
          description: Requested fund amount for the gift card.
          example: 100.0
        approvedAmount:
          type: number
          description: Approved fund amount for the gift card.
          readOnly: true
          example: 100.0
        isFullDeduction:
          type: boolean
          description: Flag that indicates if the full amount needs to be cashedout
        isMerchantFunded:
          type: boolean
          description: Flag that indicates if the source of the payment is funded
            by merchant vs customer
        isPartialTransactionAllowed:
          type: boolean
          description: Flag that indicates if partial transaction is allowed or not
        merchantFundId:
          type: string
          description: Merchant account identfier which will be used for funding the
            prepaid card transactions.
          example: M11AC8616001
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'
        fundingSource:
          $ref: '#/components/schemas/FundingSource'
      description: Source of funding to purchase or reload the value of a prepaid
        account.
    FundingSource:
      type: object
      properties:
        saveToVault:
          type: boolean
          description: Flag to indicate if the destination account should be stored
            in the secure vault.
          example: false
          default: false
        type:
          $ref: '#/components/schemas/FundingSourceType'
        vaultedAccount:
          $ref: '#/components/schemas/VaultedAccount'
        credit:
          $ref: '#/components/schemas/Credit'
        prepaid:
          $ref: '#/components/schemas/Prepaid'
        applePay:
          $ref: '#/components/schemas/ApplePay'
        androidPay:
          $ref: '#/components/schemas/AndroidPay'
        samsungPay:
          $ref: '#/components/schemas/SamsungPay'
        paypal:
          $ref: '#/components/schemas/Paypal'
        token:
          $ref: '#/components/schemas/ReferenceToken'
        visaCheckout:
          $ref: '#/components/schemas/VisaCheckout'
        googlePay:
          $ref: '#/components/schemas/GooglePay'
        masterpass:
          $ref: '#/components/schemas/MasterPass'
        ach:
          $ref: '#/components/schemas/ACH'
        venmo:
          $ref: '#/components/schemas/Venmo'
        vipps:
          $ref: '#/components/schemas/Vipps'
        amazonPay:
          $ref: '#/components/schemas/AmazonPay'
        ideal:
          $ref: '#/components/schemas/Ideal'
        bancontact:
          $ref: '#/components/schemas/Bancontact'
        walmartPay:
          $ref: '#/components/schemas/WalmartPay'
        ebt:
          $ref: '#/components/schemas/EBT'
      description: Holds information about funding source for the payment transaction.
        Can hold only one above the provided funding sources.
    GooglePay:
      type: object
      properties:
        version:
          type: string
          description: Identifies encryption/signing scheme.
          example: EC_v1
        developerEmail:
          type: string
        signature:
          type: string
          description: Signature to verify Google initiated message.
          example: MIAGCSqGSIb......AAAA==
        data:
          type: string
          description: Data includes encryptedMessage, ephemeralPublicKey, tag.
          example: '{"encryptedMessage":"8nx...u003d","ephemeralPublicKey":"BGH...u003d","tag":"nvm...\u003d"}'
        dPanLast4:
          type: string
          example: "9876"
        bin:
          type: string
        eciIndicator:
          type: string
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        panType:
          type: string
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        token:
          $ref: '#/components/schemas/ReferenceToken'
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'
      description: Google Payment specific information
    GroupPrepaidBalanceInfo:
      type: object
      properties:
        groupName:
          type: string
          description: Identifies encryption/signing scheme.
        groupBalance:
          type: number
          description: sum of prepaid card in lower denomination of the currency.
        balances:
          type: array
          items:
            $ref: '#/components/schemas/PrepaidBalanceInfo'
      description: Group prepaid balance information
    Ideal:
      type: object
      properties:
        returnUrl:
          type: string
        deepLink:
          type: string
    ISO-4217:
      type: object
      properties:
        code:
          type: string
          default: USD
        number:
          type: integer
        digits:
          type: integer
        currency:
          type: string
          default: US Dollar
      description: ISO 4217 currency format in which the balance is represented.
      example:
        code: USD
        number: 840
        digits: 2
        currency: US Dollar
    Link:
      required:
      - href
      - rel
      type: object
      properties:
        href:
          type: string
          description: URL to linked resource.
          format: uri
          example: https://api.example.com/v1/customers/cust-id-123456/accounts/acct-id-123456
        rel:
          type: string
          description: Defines the type of link relationship to current resource.
          example: linked.account
        method:
          type: string
          description: Defines the HTTP method for the given href.
          example: GET
          default: GET
        id:
          type: string
          description: Identifier to the resource.
          example: 415e5cf6bfdb11e8a355529269fb1459
      description: Model to communicate linked resources.
    LoadMultiFundsPurchase:
      type: object
      properties:
        parentTransactionId:
          type: string
          description: Unique identifier of multi load transaction.
          readOnly: true
          example: 485-27834-285903824-095
        merchantTransactionId:
          type: string
          description: Merchant transaction id
        createdTime:
          type: string
          description: Prepaid Card creation date time value.
          format: date-time
          readOnly: true
          example: 2017-03-21T08:15:30-05:00
        parentExternalId:
          type: string
          description: External transaction id reference
        purchaseInfo:
          $ref: '#/components/schemas/PurchaseInfo'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/LoadFundsPurchase'
      description: Information related to Fund load operation.
    LoadFundsPurchase:
      required:
      - destinationCard
      - fundingInfo
      type: object
      properties:
        transactionId:
          type: string
          description: Unique identifier for this purchasing transaction.
          readOnly: true
          example: 485-27834-285903824-095
        saveToVault:
          type: boolean
          description: Flag to indicate if the destination card should be vaulted
            to a secure repository for future use for the given customer.
          default: false
        dynamicDescriptors:
          $ref: '#/components/schemas/DynamicDescriptors'
        status:
          $ref: '#/components/schemas/PrepaidStatus'
        destinationCard:
          type: object
          properties:
            account:
              $ref: '#/components/schemas/Prepaid'
            vaultedAccount:
              $ref: '#/components/schemas/VaultedAccount'
            balanceInfo:
              $ref: '#/components/schemas/PrepaidBalance'
          description: Information related to the account receiving the funds.
        fundingInfo:
          $ref: '#/components/schemas/FundingInfo'
        purchaseInfo:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/PurchaseInfo'
        postDate:
          type: string
          description: Settlement date for the transaction. Format- MMDDYYYY
          format: date
        merchantId:
          type: string
          description: Merchant identifier where the transaction is being performed.
          example: M117008616001
        storeId:
          type: string
          description: Store identifier where the transaction is being performed.
          example: "123456"
        merchantTokenCode:
          type: string
          description: Merchant token code used for token generation
        merchantTerminalId:
          type: string
          description: Merchant terminal identifier
        externalId:
          type: string
          description: External transaction id reference
        merchantTransactionId:
          type: string
          description: Merchant transaction id
        hostExtraInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
        threeDSecureInfo:
          $ref: '#/components/schemas/ThreeDSecure'
        errorInfo:
          $ref: '#/components/schemas/Error'
      description: Information related to Fund load operation.
    NVP:
      title: Name and Value pair.
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        valueAsList:
          minItems: 0
          type: array
          items:
            type: string
    MasterPass:
      type: object
      properties:
        transactionId:
          type: string
          description: Identifier corresponding to an account enrolled with MasterPass
            system.
          example: "1234732704291071701"
        credit:
          $ref: '#/components/schemas/Credit'
      description: MasterPass information
    MergeBalanceTransaction:
      type: object
      properties:
        transactionId:
          type: string
          description: Unique identifier for this purchasing transaction.
          readOnly: true
          example: 485-27834-285903824-095
        status:
          $ref: '#/components/schemas/PrepaidStatus'
        activateVirtualCard:
          type: boolean
          description: Indicates whether uCom needs to activate a destination account
          example: true
        dynamicDescriptors:
          $ref: '#/components/schemas/DynamicDescriptors'
        purchaseInfo:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/PurchaseInfo'
        source:
          type: object
          properties:
            account:
              $ref: '#/components/schemas/Prepaid'
            vaultedAccount:
              $ref: '#/components/schemas/VaultedAccount'
            authorization:
              $ref: '#/components/schemas/Authorization'
          description: Information related to the Source account.
        destination:
          type: object
          properties:
            account:
              $ref: '#/components/schemas/Prepaid'
            vaultedAccount:
              $ref: '#/components/schemas/VaultedAccount'
            balanceInfo:
              $ref: '#/components/schemas/PrepaidBalance'
          description: Information related to the Destination account.
        hostExtraInfo:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/NVP'
      description: Information related to balance merge operation
    Order:
      required:
      - orderId
      type: object
      properties:
        orderId:
          type: string
          description: Client provided unique identifier for the order related to
            the requested authorization
          example: Order001
        altOrderId:
          type: string
          description: Alternate order id
        orderType:
          type: string
          description: Type of the order
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Email'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        phoneNumbers:
          type: array
          items:
            $ref: '#/components/schemas/Phone'
      description: Information about the order details
    OfferStatus:
      type: object
      properties:
        code:
          type: string
          description: Indicates offer status code, NOT_ACTIVATED | ACTIVATED | REDEEMED
            | DECLINED | CANCELLED | FAILED
        statusInfo:
          minItems: 0
          uniqueItems: true
          type: array
          description: Details about what to display, images, messaging, etc.
          items:
            $ref: '#/components/schemas/NVP'
      description: Maintain the status of stackable promotions
    PageLink:
      type: object
      properties:
        firstPage:
          type: boolean
          description: Indicates if the list contains first page data
        lastPage:
          type: boolean
          description: Indicates if the list contains last page data
          example: false
        currentPage:
          type: integer
          description: Current page number
          example: 1
        currentPageRecords:
          type: integer
          description: Number of records in current page
          example: 25
        totalPages:
          type: integer
          example: 2
        totalRecords:
          type: integer
          example: 27
        sortOrder:
          type: string
          example: asc
          default: asc
          enum:
          - asc
          - desc
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
      description: Page link information.
    Paypal:
      type: object
      properties:
        payerId:
          type: string
          description: Paypal generated Unique identfier for a Paypal account.
          example: LPLWNMTBWMFAY
        nonce:
          type: string
          description: Paypal generated nonce.
          example: ab12-124C-ab12-124C-ab12-124C
        credit:
          $ref: '#/components/schemas/Credit'
      description: Information about a Paypal account.
    Phone:
      type: object
      properties:
        value:
          type: string
          description: The value SHOULD be specified according to the format defined
            in RFC3966, e.g., 'tel:+1-201-555-0123'.
        type:
          type: string
          description: Often has typical values of "work","billing", "home", "mobile",
            "fax", "pager", and "other" and MAY allow more types to be defined by
            the service client.
        extension:
          type: string
          description: Defines the extension of the phone number.
        primary:
          type: boolean
          description: Defines if this entry is to be used as the primary or default
            for the user.
          default: false
      description: Phone number for the user.
      example:
        value: 555-555-5555
        type: billing
        extension: "2145"
    POSItem:
      type: object
      properties:
        itemDescription:
          type: string
          example: Standard Wash (or) Unleaded Petrol
        itemPrice:
          type: number
          format: double
          example: 7.5
        unitOfMeasurement:
          type: string
          example: each
        unitsSold:
          type: number
          format: double
          example: 1.0
        totalItemSaleAmount:
          type: number
          format: double
          example: 7.5
        originalItemPrice:
          type: number
          format: double
          example: 7.5
        originalTotalSaleAmount:
          type: number
          format: double
          example: 7.5
        posCodeFormat:
          type: string
          example: plu
        posCode:
          type: string
          example: "102"
        posCodeModifier:
          type: string
          example: "1"
        productCode:
          type: string
          example: "102"
        tax:
          type: array
          items:
            $ref: '#/components/schemas/TaxDetails'
        type:
          $ref: '#/components/schemas/POSItemType'
        serviceLevelCode:
          $ref: '#/components/schemas/ServiceLevelCode'
        priceAdjustments:
          type: array
          items:
            $ref: '#/components/schemas/PriceAdjustment'
        washCodes:
          type: array
          items:
            $ref: '#/components/schemas/WashCode'
        priceTier:
          type: string
      description: Structure to support passing POS sale info as part of the sale
        request.
    Prepaid:
      type: object
      properties:
        cardNumber:
          type: string
          description: Prepaid card number.
          example: "6759649826438453"
        cardSubType:
          type: string
          description: Merchant or brand specific information about the type of account.Issuer/group
            information.
          example: Merchant Brand
        securityCode:
          type: string
          description: Security code of prepaid card
          example: "345"
        alias:
          type: string
          readOnly: true
          example: "8453"
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        merchantId:
          type: string
          description: Merchant identifier for prepaid transaction.
          example: M117008616001
        altMerchantId:
          type: string
          description: Alternate Merchant identifier for prepaid transaction.
          example: "23232"
        promotionCode:
          type: string
          description: Promotion code for prepaid account activation.
        isEANRequired:
          type: boolean
          example: true
        balance:
          $ref: '#/components/schemas/PrepaidBalance'
        ebtBalance:
          $ref: '#/components/schemas/EBTBalance'
        vaultedAccount:
          $ref: '#/components/schemas/VaultedAccount'
        token:
          $ref: '#/components/schemas/ReferenceToken'
      description: Prepaid (a.k.a. gift) account information
    PrepaidBalance:
      required:
      - currencyCode
      - currentBalance
      type: object
      properties:
        currentBalance:
          type: number
          description: The current balance of prepaid card in lower denomination of
            the currency.
          example: 1000.0
        beginBalance:
          type: number
          description: The balance of prepaid card before a transaction in lower denomination
            of the currency.
          example: 1100.0
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'
        currencyType:
          $ref: '#/components/schemas/CurrencyPairType'
      description: Details of balance in the prepaid card.
    PrepaidBalanceInfo:
      type: object
      properties:
        prepaid:
          $ref: '#/components/schemas/Prepaid'
        balanceStatus:
          $ref: '#/components/schemas/BalanceStatus'
        hostExtraInfo:
          minItems: 0
          uniqueItems: true
          type: array
          description: Key value pairs providing additional details from host on the
            balance retrieval. Key 'host.account.status' will provide current account
            status from the host. Key 'host.transaction.status' will provide the transaction
            result as success or failure. Key 'host.transaction.error' will provide
            error message from Host if transaction status is failure
          items:
            $ref: '#/components/schemas/NVP'
    PrepaidBalanceTransactionInfo:
      type: object
      properties:
        requestId:
          type: string
          description: Unique identifier of request used to retrieve balance.
          readOnly: true
          example: 485-27834-285903824-095
        requestStatus:
          $ref: '#/components/schemas/RequestStatus'
        createdDateTime:
          type: string
          description: Date and time of resource creation.
          format: date-time
          readOnly: true
          example: 2016-04-16T16:06:05Z
        lastUpdatedDateTime:
          type: string
          description: Last updated Date and time of resource.
          format: date-time
          readOnly: true
          example: 2016-04-16T16:06:05Z
        totalBalance:
          type: number
          description: sum of prepaid card in lower denomination of the currency.
        balances:
          type: array
          items:
            $ref: '#/components/schemas/PrepaidBalanceInfo'
      description: Prepaid balance transaction response.
    PrepaidMultiPurchase:
      type: object
      properties:
        parentTransactionId:
          type: string
          description: Unique identifier of multi transaction.
          readOnly: true
          example: 485-27834-285903824-095
        merchantTransactionId:
          type: string
          description: Merchant transaction id
        createdTime:
          type: string
          description: Prepaid Card creation date time value.
          format: date-time
          readOnly: true
          example: 2017-03-21T08:15:30-05:00
        parentExternalId:
          type: string
          description: External transaction id reference
        purchaseInfo:
          $ref: '#/components/schemas/PurchaseInfo'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/PrepaidPurchase'
      description: Multi prepaid transaction details.
    PrepaidPurchase:
      required:
      - fundingInfo
      type: object
      properties:
        transactionId:
          type: string
          description: Unique identifier for this purchasing transaction.
          readOnly: true
          example: 485-27834-285903824-095
        saveToVault:
          type: boolean
          description: Flag to indicate if the account should be stored in the secure
            vault.
          default: true
        dynamicDescriptors:
          $ref: '#/components/schemas/DynamicDescriptors'
        status:
          $ref: '#/components/schemas/PrepaidStatus'
        account:
          $ref: '#/components/schemas/Prepaid'
        merchantId:
          type: string
          description: Merchant identifier where the transaction is being performed.
          example: M117008616001
        storeId:
          type: string
          description: Store identifier where the transaction is being performed.
          example: "123456"
        merchantTokenCode:
          type: string
          description: Merchant token code used for token generation
        merchantTerminalId:
          type: string
          description: Merchant terminal identifier
        externalId:
          type: string
          description: External transaction id reference
        merchantTransactionId:
          type: string
          description: Merchant transaction id
        createdTime:
          type: string
          description: Prepaid Card creation date time value.
          format: date-time
          readOnly: true
          example: 2017-03-21T08:15:30-05:00
        fundingInfo:
          $ref: '#/components/schemas/FundingInfo'
        postDate:
          type: string
          description: Settlement date for the transaction. Format- MMDDYYYY
          format: date
        purchaseInfo:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/PurchaseInfo'
        _links:
          minItems: 0
          uniqueItems: true
          type: array
          description: Link to the account for future reference.
          readOnly: true
          items:
            $ref: '#/components/schemas/Link'
        hostExtraInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
        threeDSecureInfo:
          $ref: '#/components/schemas/ThreeDSecure'
        errorInfo:
          $ref: '#/components/schemas/Error'
      description: Details about purchasing a prepaid (gift) card.
    PrepaidTransaction:
      type: object
      properties:
        amount:
          type: number
          description: Transactional amount in lower denomination of the currency.
          example: 100.0
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'
        info:
          type: string
          description: Informational description about the transaction.
          example: Balance Merge
        transactionTime:
          type: string
          description: Transaction date time value.
          format: date-time
          readOnly: true
          example: 2017-03-21T08:15:30-05:00
        altMerchantId:
          type: string
          description: Alternate MID information
      description: Information related to a transaction on a Prepaid Card.
    PrepaidTxnSearchResult:
      type: object
      properties:
        pages:
          $ref: '#/components/schemas/PageLink'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/PrepaidTransaction'
      description: This object contains site records for lat lag based request.
    PrepaidVoid:
      required:
      - fundingInfo
      type: object
      properties:
        transactionId:
          type: string
          description: Unique identifier for this void transaction.
          example: 485-27834-285903824-095
        dynamicDescriptors:
          $ref: '#/components/schemas/DynamicDescriptors'
        status:
          $ref: '#/components/schemas/PrepaidStatus'
        account:
          $ref: '#/components/schemas/Prepaid'
        fundingInfo:
          $ref: '#/components/schemas/FundingInfo'
        operationType:
          $ref: '#/components/schemas/OperationType'
        merchantId:
          type: string
          description: Merchant identifier where the transaction is being performed.
          example: M117008616001
        storeId:
          type: string
          description: Store identifier where the transaction is being performed.
          example: "123456"
        externalId:
          type: string
          description: External transaction id reference
        merchantTransactionId:
          type: string
          description: Merchant transaction id
        postDate:
          type: string
          description: Settlement date for the transaction. Format- MMDDYYYY
          format: date
        purchaseInfo:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/PurchaseInfo'
        hostExtraInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
        threeDSecureInfo:
          $ref: '#/components/schemas/ThreeDSecure'
        errorInfo:
          $ref: '#/components/schemas/Error'
      description: Details about voiding a prepaid (gift) card.
    PrepaidMultiVoid:
      type: object
      properties:
        parentTransactionId:
          type: string
          description: Unique identifier of multi transaction.
          readOnly: true
          example: 485-27834-285903824-095
        merchantTransactionId:
          type: string
          description: Merchant transaction id
        createdTime:
          type: string
          description: Prepaid void creation date time value.
          format: date-time
          readOnly: true
          example: 2017-03-21T08:15:30-05:00
        parentExternalId:
          type: string
          description: External transaction id reference
        purchaseInfo:
          $ref: '#/components/schemas/PurchaseInfo'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/PrepaidVoid'
      description: Multi prepaid void transaction details.
    PriceAdjustment:
      type: object
      properties:
        adjustmentId:
          type: string
          example: discount prepay
        productCode:
          type: string
          example: "941"
        programID:
          type: string
          example: P66
        reason:
          type: string
          example: loyaltyOffer
        amount:
          type: number
          format: double
          example: 0.1
        percentage:
          type: number
          format: float
          example: 10.0
        itemPrice:
          type: number
          format: double
          example: 7.5
        unitOfMeasurement:
          type: string
          example: each
        unitsSold:
          type: number
          format: double
          example: 1.0
        rebateLabel:
          type: string
          example: HostDiscount
        maxQuantity:
          type: number
          format: double
          example: 7.5
        offerStatus:
          $ref: '#/components/schemas/OfferStatus'
      description: Structure to support providing price adjustment for sale item.
    PurchaseInfo:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the resource.
        name:
          type: string
          description: Common name for the resource.
        order:
          $ref: '#/components/schemas/Order'
        items:
          type: array
          description: Item(s) for sale at the resource.  Common examples are the
            car wash packages for sale.
          items:
            $ref: '#/components/schemas/POSItem'
      description: Information about Resources associated with the Transaction.  The
        common example is the car wash system.
    ReferenceToken:
      type: object
      properties:
        tokenId:
          type: string
          description: Actual token value
          example: 292bb6b886fc4446894f878b7e32bd5e
        tokenProvider:
          type: string
          description: Indicates what system is the originator of the token
          example: TRANS_ARMOR
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
      description: Surrogate value used to represent a handle to an account without
        sharing PCI/PII data to look it up.
    TaxDetails:
      type: object
      properties:
        code:
          type: string
          example: TX01
        description:
          type: string
          example: Sales Tax
        amount:
          type: string
          example: "7.50"
        rate:
          type: string
          example: "13.5"
      description: Tax details.
    ThreeDSecure:
      type: object
      properties:
        transactionId:
          type: string
          description: Transaction id generated on the server
          example: 292bb6b886fc4446894f878b7e32bd5e
        transactionStatus:
          type: string
          description: Transactions status of 3DS server
          example: C
        transactionStatusReason:
          type: string
          description: Reason for the transaction status
        challengeResponse:
          type: string
          example: ewogIC
        challengeIndicator:
          type: string
          example: '01 = No preference 02 = No challenge requested 03 = Challenge
            requested: 3DS Requestor Preference 04 = Challenge requested: Mandate'
        dsTransactionId:
          type: string
          example: 292bb6b886fc4446894f878b7e32bd5e
        acsTransactionId:
          type: string
          example: 292bb6b886fc4446894f878b7e32bd5e
        serverTransactionId:
          type: string
          example: 292bb6b886fc4446894f878b7e32bd5e
        acsReferenceNumber:
          type: string
          example: 292bb6b886fc4446894f878b7e32bd5e
        acsSignedContent:
          type: string
          example: 292bb6b88....6fc4446894f878b7e32bd5e
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        challengeRequest:
          type: string
          example: ewogICAiYW.......MjJjMGVjIgp9
        acsUrl:
          type: string
          example: https://test.modirum.com/dstests/ACSEmu2
        iframeContent:
          type: string
          example: <iframe></iframe>
        termUrl:
          type: string
          example: https://mydomain/3dstest?transactionId=292bb6b886fc4446894f878b7e32bd5e
        isThreeDSMethodCompleted:
          type: boolean
          example: true
        isAuthenticationCompleted:
          type: boolean
          example: true
        cavv:
          type: string
          description: Card authenticaion verificaiton value
        threeDSVersion:
          type: string
        expiryDateTime:
          type: string
          description: 3DS challenge transaction expiry date time.
          format: date-time
          readOnly: true
          example: 2020-01-01T16:06:05Z
        eci:
          type: string
          description: Electronic Commerce Indicator value
      description: Details of ThreeDSecure transaction used to process the challege
        flow
    SamsungPay:
      type: object
      properties:
        version:
          type: string
          example: EC_v1
        developerEmail:
          type: string
        data:
          type: string
          example: 3CguW5ecfTzO...03d
        signature:
          type: string
          example: MIAGCSqGSIb......AAAA==
        decryptAlias:
          type: string
          description: field of the public key certificate.
          example: oslo.com.xxx.Prod_mer
        dPanLast4:
          type: string
          example: "9876"
        bin:
          type: string
        eciIndicator:
          type: string
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        panType:
          type: string
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        header:
          type: object
          properties:
            ephemeralPublicKey:
              type: string
              example: MFkwEw...03d
            publicKeyHash:
              type: string
              example: +vbONw...IM=
        token:
          $ref: '#/components/schemas/ReferenceToken'
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'
    VaultedAccount:
      type: object
      properties:
        fdAccountId:
          type: string
          description: Unique identifier for a customer account vaulted with uCom
        securityCode:
          type: string
          description: Card Verificatiion value.
        status:
          $ref: '#/components/schemas/AccountStatus'
        type:
          $ref: '#/components/schemas/AccountType'
      description: FD Account information
      example:
        fdAccountId: muid-3d4f2ac...c91014f2dc1
    Venmo:
      type: object
      properties:
        nonce:
          type: string
          description: Venmo generated nonce.
          example: ab12-124C-ab12-124C-ab12-124C
      description: Information about a Venmo account.
    Vipps:
      required:
      - paymentId
      type: object
      properties:
        paymentId:
          type: string
          description: The payment_id of Vipps. Used to correlate with the webhook
            of an open order.
          example: ab12-124C-ab12-124C-ab12-124C
        credit:
          $ref: '#/components/schemas/Credit'
      description: Information about a Vipps account. 'credit' is a read-only property.
    VisaCheckout:
      type: object
      properties:
        callId:
          type: string
          description: Identifier corresponding to an account enrolled with Visa Checkout
            system.
          example: "1234732704291071701"
        credit:
          $ref: '#/components/schemas/Credit'
      description: Visa Checkout information
    WashCode:
      type: object
      properties:
        code:
          type: string
          description: Wash code generated by the POS system.
        description:
          type: string
          description: Wash code description generated by the POS system.
        expiration:
          type: string
          description: Expiration date for the purchased wash code
          format: date-time
        message:
          type: string
          description: Field to carry message from site system for display to customer.
      description: Purchased wash information.
    WalmartPay:
      type: object
      properties:
        credit:
          $ref: '#/components/schemas/Credit'
        token:
          $ref: '#/components/schemas/ReferenceToken'
    DeviceInfo:
      required:
      - id
      - kind
      type: object
      properties:
        id:
          type: string
          description: Unique Id for the device. Value should not contain line feeds,
            carriage returns, tabs, leading or trailing spaces, or multiple spaces.
          example: 537edec8-d33e-4ee8-93a7-b9f61876950c
        kind:
          type: string
          description: Possible values are mobile, wearable, automobile, embedded,desktop,
            other.
          example: mobile
        details:
          title: deviceData
          minItems: 0
          uniqueItems: true
          type: array
          description: Device data information from multiple providers.
          items:
            type: object
            properties:
              provider:
                type: string
                description: Identifies the provider of the data and is often used
                  when decrypting data on the server.
                example: InAuth
              dataCapture:
                type: object
                properties:
                  rawData:
                    type: string
                    description: Device capture - raw data blob
                    example: aaaaaXREUVZGRlFY...aMV
                  dataEventId:
                    type: string
                    description: Event identifier used map state on the server.
                    example: BB8E4E92...Fz1E063113
                  captureTime:
                    type: string
                    description: Device data capture time in Internet Date/Time format
                      - yyyy-MM-dd'T'HH:mm:ss'Z'
                    format: date-time
                    example: 2016-04-16T16:06:05Z
                description: Device data captured as a bundle and transmitted as an
                  encrypted and/or specifically formated string.
              dataStatic:
                type: object
                properties:
                  os:
                    type: string
                    description: Device OS name
                    example: Android 5.1.1 Lollipop
                  osVersion:
                    type: string
                    description: Device OS version
                    example: 5.1.1 Lollipop
                  model:
                    type: string
                    description: Device model
                    example: XT1540
                  type:
                    type: string
                    description: Device type
                    example: Moto G
                description: Device static details
              dataDynamic:
                type: object
                properties:
                  latitude:
                    type: string
                    description: Device position - latitude at the time of the data
                      event
                    example: 13.0827 N
                  longitude:
                    type: string
                    description: Device position - longitude at the time of the data
                      event
                    example: 80.2707 E
                  ipAddress:
                    type: string
                    description: IP address
                    example: 172.27.37.221
                  captureTime:
                    type: string
                    description: Device data capture time in Internet Date/Time format
                      - yyyy-MM-dd'T'HH:mm:ss'Z'
                    format: date-time
                    example: 2016-04-16T16:06:05Z
                description: Device location details
              dataApplication:
                type: object
                properties:
                  version:
                    type: string
                    description: Mobile application version.
                    format: sting
                    example: 1.0.0
                  name:
                    type: string
                    description: Mobile application name.
                    format: sting
                    example: aplication-name
                  country:
                    type: string
                    description: Mobile application store country.
                    format: sting
                    example: US
                description: Mobile application specific data
            description: Collection of device data
        additionalInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
      description: Request origin device details
    Error:
      type: object
      properties:
        code:
          type: string
          description: Uniquely identifies an error condition. Client applications
            need to read and handle errors based on this.
        message:
          type: string
          description: A generic description of the error condition.
        category:
          type: string
          description: The resource associated with the error condition.
        developerInfo:
          type: object
          properties:
            developerMessage:
              type: string
              description: An elaborative description of the error description.
            moreInfo:
              type: string
              description: Link to the error in Developer page.
            fieldError:
              type: array
              description: Detailed information about message format errors.
              items:
                type: object
                properties:
                  field:
                    type: string
                    description: The property or attribute associated with the error
                  message:
                    type: string
                    description: Information specific to a property or attribute.
          description: Information that needs to be understood by the client developers
            and should not be interpreted for application processing.
        hostExtraInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
        threeDSecureInfo:
          $ref: '#/components/schemas/ThreeDSecure'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
      description: Model for error messaging
    AccountStatus:
      type: string
      description: Indicates the status of an account.
      enum:
      - ACTIVE
      - INACTIVE
      - TERMINATED
      - ISSUER_TERMINATED
      - WALLET_TERMINATED
      - PENDING
    AccountType:
      type: string
      description: Type of Account vaulted
      enum:
      - CREDIT
      - PREPAID
      - ACH
      - LOYALTY
      - PAYPAL
      - MASTERPASS
      - VENMO
      - VAULTED_ACCOUNT
    AchEnrollmentStatus:
      type: string
      description: Indicates ACH enrollment status
      enum:
      - ACTIVE
      - PENDING
      - PENDING_LINKED_ACCOUNT
    AchEnrollmentSubStatus:
      type: string
      description: Indicates ACH enrollment pending status
      enum:
      - PENDING_BANK_VALIDATION
      - PENDING_PIN_VALIDATION
      - PENDING_EMAIL_VALIDATION
      - PENDING_PHONE_VALIDATION
      - PENDING_SOFT_BLOCK
      - PENDING_HARD_BLOCK
    BalanceStatus:
      type: string
      description: Indicates the status of the balance transaction of a given account.
        'INPROGRESS' - Balance retrieval is still in inprogress 'COMPLETED' - Balance
        is available 'ERROR' - Balance retrieval failed. System error 'UNAVAILABLE'
        - Balance is not available. Check Host extra info for additional details
      enum:
      - INPROGRESS
      - COMPLETED
      - ERROR
      - UNAVAILABLE
    CurrencyPairType:
      type: string
      description: Describes the type of currency where BASE represents the currency
        from Host and TRANSACTION represents the one requested.
      enum:
      - BASE
      - TRANSACTION
    CreditCardType:
      title: Credit Card Type
      type: string
      description: Indicates the type of credit account association
      enum:
      - AMEX
      - DISCOVER
      - MASTERCARD
      - PLCC
      - VISA
      - JCB
      - DINERS
      - OTHER
    AchCardType:
      type: string
      description: Indicates the type of ACH card association
      enum:
      - CONNECTPAY
    AchAccountType:
      type: string
      description: ACH account type
      enum:
      - CHECKING
      - SAVINGS
    FundingSourceType:
      type: string
      description: Describes the type of Funding source
      enum:
      - VAULTED_ACCOUNT
      - CREDIT
      - PREPAID
      - APPLE_PAY
      - ANDRIOD_PAY
      - PAYPAL
      - TOKEN
      - NONCE
      - VCO
      - VENMO
      - LOYALTY
      - AMAZON_PAY
      - VIPPS
      - FLEET
      - BANCONTACT
      - IDEAL
      - WALMART_PAY
      - EBT
    POSItemType:
      type: string
      description: Indicates the type of item
      enum:
      - CARWASH
      - FUEL
      - OTHER
    PrepaidStatus:
      title: Prepaid Status
      type: string
      description: Indicates the status of an prepaid operation.
      enum:
      - CHALLENGED
      - APPROVED
      - FAILED
      - DECLINED
    OperationType:
      type: string
      description: Indicates the status of the balance transaction of a given account.
        'PURCHASEVOID' - Void a purchase transaction 'RELOADVOID' - Void a relaod
        transaction 'DEDUCT' - Take out funds 'SWEEPOUT' - Sweep out balance to zero
      enum:
      - PURCHASEVOID
      - RELOADVOID
      - DEDUCT
      - SWEEPOUT
    RequestStatus:
      type: string
      description: Indicates the status of the overall request. 'INPROGRESS' - Balance
        retrieval is still in inprogress for one or more accounts 'COMPLETED' - Balance
        retrieval is completed for all accounts
      enum:
      - INPROGRESS
      - COMPLETED
    ServiceLevelCode:
      type: string
      description: Indicates service level code.
      default: S
      enum:
      - S
      - F
      - N
      - X
    UpdateActionType:
      type: string
      description: Indicates the action intended as part of patch operation.
      enum:
      - RESUME_TRANSACTION
      - CANCEL_TRANSACTION
  responses:
    AggregateBalanceResponse:
      description: Prepaid balance response based on customer id
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AggregateBalanceTransactionInfo'
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BalanceResponse:
      description: Prepaid balance response based on request id
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PrepaidBalanceTransactionInfo'
    Conflict:
      description: Conflict - The requested operation conflicts with the current state
        of the identified resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Created:
      description: Resource created
      headers:
        Location:
          description: Location of newly created resource.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Prepaid'
    NoContent:
      description: The request succeeded but there�s really nothing to show.
      content: {}
    NotFound:
      description: Not Found - The requested resource doesn't exist.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    OK:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Prepaid'
    ServerError:
      description: An unexpected server error occured.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    TooEarly:
      description: Request is too early to process.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content: {}
  parameters:
    AcceptLanguageParam:
      name: Accept-Language
      in: header
      description: The Accept-Language header contains information about the language
        preference of a user. This HTTP header is useful to multilingual sites for
        deciding the best language to serve to the client. i.e en-US,fr-CA
      schema:
        type: string
    ApiKeyParam:
      name: Api-Key
      in: header
      description: An API key is a string value passed by a client app to the API
        proxies.The key uniquely identifies the client app.
      required: true
      schema:
        type: string
    AuthorizationParam:
      name: Authorization
      in: header
      description: Authorization information for the request. Format- `HMAC {hmacToken}`
      required: true
      schema:
        type: string
    ClientTokenParam:
      name: Client-Token
      in: header
      description: Used to pass the original client OAuth token information given
        in a client-credentials flow.  This field is only used when the server is
        making the request and needs to link the transaction to a specific client.  Format-
        `Bearer {access_token}`
      schema:
        type: string
    ClientRequestIdParam:
      name: Client-Request-Id
      in: header
      description: Contains a unique ID generated by the client that can be used for
        enforcing idempotency on POST actions. POSTs are inherently non-idempotent
        and submitting the exact same request multiple times would create duplicate
        resources. Note:- Omitting this header increases the risk of duplicate transactions,
        which for payments could cost the client issues like double-billing.
      required: true
      schema:
        type: string
    ClientRequestIdQueryParam:
      name: clientRequestId
      in: query
      description: Id used in the previous transaction.
      schema:
        type: string
    EndDateParam:
      name: endDate
      in: query
      description: Date upto which transactions are to be retrieved. Format YYYYMMDD
      schema:
        type: string
        format: date-time
    LocationParam:
      name: Location
      in: header
      description: Indicates the target of a redirection i.e /v1/prepaid/balances/{requestId}
      schema:
        type: string
    FdTransactionIdParam:
      name: fdTransactionId
      in: path
      description: Unique identifier provided for a purchase/sale/merge transaction.
      required: true
      schema:
        type: string
    FdParentTransactionIdParam:
      name: fdParentTransactionId
      in: path
      description: Unique identifier provided for a parent transaction.
      required: true
      schema:
        type: string
    FdRefundIdParam:
      name: fdRefundId
      in: path
      description: Unique identifier provided for a refund.
      required: true
      schema:
        type: string
    PageNumberParam:
      name: pageNo
      in: query
      description: Page number
      schema:
        type: integer
    PageSizeParam:
      name: pageSize
      in: query
      description: Max number of records per page. Supported values - 5, 10, 15, 20,
        25 ..50
      allowEmptyValue: false
      schema:
        type: integer
    RequestIdParam:
      name: requestId
      in: path
      description: Unique identifier for the request.
      required: true
      schema:
        type: string
    SubMerchantIdParam:
      name: Sub-Merchant-Id
      in: header
      description: Sub Merchant Id contains information about the merchant identifier
      schema:
        type: string
    StartDateParam:
      name: startDate
      in: query
      description: Date from which transactions are to be retrieved. Format YYYYMMDD
      schema:
        type: string
        format: date-time
    TimestampParam:
      name: Timestamp
      in: header
      description: Epoch timestamp in the request initiating system
      required: true
      schema:
        type: string

#-------------------------------------
# Document Change Log
# 0.2.3
#     - Added tokens reference in the Credit
# 0.2.2
#     - No Changes
# 0.2.1
#     - Added Walmart pay as fundingSource
#     - Added SEC code for ACH
#     - Added EBT funding source type
#     - Added Merchant id as header field
#     - Added assert provider field in the ACH
# 0.2.0
#     - initial version
#     - Added local payment methods for Ideal and Bancontact
#-------------------------------------
openapi: 3.0.1
info:
  version: 0.2.3
  description: Services related to ThreeDSecure authentication.
  title: uCom Authentication Services
servers:
- url: https://int.api.firstdata.com/ucom
tags:
- name: threedsecure
paths:
  /v1/threedsecure/authentication:
    post:
      x-group-name: Authentication Services
      x-proxy-name: Execute 3ds Authentication
      tags:
      - threedsecure
      summary: Execute a 3ds authentication for a given payment card
      parameters:
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/AuthorizationParam'
        - $ref: '#/components/parameters/AcceptLanguageParam'
        - $ref: '#/components/parameters/SubMerchantIdParam'

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThreeDSecureAuthRequest'
      responses:
        200:
          $ref: '#/components/responses/OK'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

  /v1/threedsecure/authentication/{authenticationId}:
    patch:
      x-group-name: Authentication Services
      x-proxy-name: Update 3ds Authentication
      tags:
      - threedsecure
      summary: Update 3ds authentication for a given payment card
      parameters:
        - $ref: '#/components/parameters/AuthenticationIdParam'
        - $ref: '#/components/parameters/ApiKeyParam'
        - $ref: '#/components/parameters/TimestampParam'
        - $ref: '#/components/parameters/AuthorizationParam'
        - $ref: '#/components/parameters/AcceptLanguageParam'
        - $ref: '#/components/parameters/SubMerchantIdParam'

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThreeDSecureAuthRequest'
      responses:
        200:
          $ref: '#/components/responses/OK'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

components:
  schemas:
#-------------------------------------
# Operational Models
#-------------------------------------
    ThreeDSecureAuthRequest:
      type: object
      properties:
        fdCustomerId:
          $ref: '#/components/schemas/FdCustomerId'
        externalCustomerId:
          $ref: '#/components/schemas/ExternalCustomerId'
        authentication:
          $ref: '#/components/schemas/ThreeDSecureAuth'
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'

#-------------------------------------
# Resource Models
#-------------------------------------
    ACH:
      description: Information about an ACH account
      type: object
      properties:
        accountNumber:
          type: string
          description: Unique number identifying the ACH account provided by Financial institution.
          example: '92658250156'
        routingNumber:
          type: string
          description: Number to identify the financial institution
          example: '999999999'
        secCode:
          type: string
          description: SEC Code is optional data, It is specifically required for ACH account which is ruled by NACHA compliance.
        cardNumber:
          description: ACH Card number, can only be sent when vaulting an account.  This field will NOT be present in responses.
          type: string
          example: "9111111111111111"
        cardType:
          $ref: '#/components/schemas/AchCardType'
        securityCode:
          type: string
          description: Code to validate the ACH account, like micro deposit or security code.
          example: '278356'
        alias:
          description: Last four values of the cardNumber
          type: string
          readOnly: true
          example: "1111"
        enrollmentStatus:
          $ref: '#/components/schemas/AchEnrollmentStatus'
        enrollmentSubStatuses:
          type: array
          items:
            $ref: '#/components/schemas/AchEnrollmentSubStatus'
        accountType:
          $ref: '#/components/schemas/AchAccountType'
        bankName:
          type: string
          description: Name of the bank associated with the ACH account
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        assertProvider:
          $ref: '#/components/schemas/AssertProvider'

    Address:
      description: A physical mailing address for this user.
      type: object
      properties:
        type:
          description: Canonical type values of "work", "home", and "other".
          type: string
          writeOnly: true
        streetAddress:
          description: The full street address component, which may include house number, street name, P.O. box, and multi-line extended street address information.
          type: string
          writeOnly: true
        locality:
          description: The city or locality component.
          type: string
          writeOnly: true
        region:
          description: The state or region component.
          type: string
          writeOnly: true
        postalCode:
          description: The zip code or postal code component.
          type: string
        country:
          description: The country name component.  When specified, the value MUST be in ISO 3166-1 "alpha-2" code format; e.g., the United States and Sweden are "US" and "SE", respectively.
          type: string
          writeOnly: true
        formatted:
          description: The full mailing address, formatted for display or use with a mailing label.
          type: string
          writeOnly: true
        primary:
          description: Indicates if this is the default address for the associated resource. It only has meaning when used in a set or array of addresses.
          type: boolean
          writeOnly: true

    AndroidPay:
      type: object
      properties:
        data:
          type: string
          example: "3CguW5ecfTzO...03d"
        signature:
          type: string
          example: "MIAGCSqGSIb......AAAA=="
        decryptAlias:
          description: field of the public key certificate.
          type: string
          example: "oslo.com.xxx.Prod_mer"
        dPanLast4:
          type: string
          example: "9876"
        cardType:
          $ref: '#/components/schemas/CreditCardType'
          example: "VISA"
        header:
          type: object
          properties:
            ephemeralPublicKey:
              type: string
              example: "MFkwEw...03d"
            publicKeyHash:
              type: string
              example: "+vbONw...IM="
        token:
          $ref: '#/components/schemas/ReferenceToken'
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'

    AmazonPay:
      type: object
      properties:
        token:
          type: string
          example: "292bb6b886fc4446894f878b7e32bd5e"
        chargeId:
          type: string
          example: "73883992djj39939djj929992jj08838"
        chargeReferenceId:
          type: string
          example: "8jdw838dhhskk9299299299ueuuue838"
        credit:
          $ref: '#/components/schemas/Credit'

    AssertProvider:
      type: object
      properties:
        providerName:
          type: string
          example: "coinbase"

    ApplePay:
      type: object
      properties:
        version:
          type: string
          example: "EC_v1"
        developerEmail:
          type: string
        signature:
          type: string
          example: "MIAGCSqGSIb......AAAA=="
        decryptAlias:
          description: field of the public key certificate.
          type: string
          example: "oslo.com.xxx.Prod_mer"
        data:
          type: string
          example: "3CguW5ecfTz...Yuhw="
        applicationData:
          type: string
          example: "VEVTVA=="
        dPanLast4:
          type: string
          example: "9876"
        bin:
          type: string
        eciIndicator:
          type: string
        xid:
          type: string
        cavv:
          type: string          
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        panType:
          type: string
        cardType:
          $ref: '#/components/schemas/CreditCardType'
          example: "VISA"
        header:
          type: object
          properties:
            applicationDataHash:
              type: string
            ephemeralPublicKey:
              type: string
              example: "MFkwEwYHKoZIzj0CIKoZIz.....NBQQ=="
            publicKeyHash:
              type: string
              example: "+vbONwRlVqJX0........"
            transactionId:
              type: string
              example: "3827c5a02638.....34d50"
        token:
          $ref: '#/components/schemas/ReferenceToken'
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'

    Bancontact:
      type: object
      properties:
        returnUrl:
          type: string
        deepLink:
          type: string
        alias:
          type: string
          example: "9876"
        cardType:
          $ref: '#/components/schemas/CreditCardType'
          example: "VISA"

    Credit:
      description: Information on a credit account
      type: object
      properties:
        cardNumber:
          description: Primary account number, can only be sent when vaulting an account.  This field will NOT be present in responses.
          type: string
          example: "4111111111111111"
        bin:
          type: string
        nameOnCard:
          description: Name as printed on physical card or on virtual account
          type: string
          example: "John Smith"
        alias:
          description: Last four values of the cardNumber
          type: string
          readOnly: true
          example: "1111"
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        cardSubType:
          description: Merchant or brand specific information about the type of account
          type: string
          example: "ABCD"
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        securityCode:
          type: string
          example: "444"
        sequenceNumber:
          description: Applicable only for private-label accounts
          type: string
          example: "01"
        token:
          $ref: '#/components/schemas/ReferenceToken'
        tokens:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/ReferenceToken'


    EBT:
      description: Electronic Benefits Transfer card information
      type: object
      properties:
        cardNumber:
          description: Primary account number, can only be sent when vaulting an account.  This field will NOT be present in responses.
          type: string
        nameOnCard:
          description: Name as printed on physical card or on virtual account
          type: string
        alias:
          description: Last four values of the cardNumber
          type: string
          readOnly: true
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        bin:
          description: BIN of EBT card
          type: string
          readOnly: true
        pin:
          description: PIN for EBT card
          type: string
        pinCaptureId:
          description: Session id used on client side SDK to capture the card pin
          type: string
        transactionId:
          description: The unique transaction ID
          type: string
        balance:
          $ref: '#/components/schemas/EBTBalance'
        metadata:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
          uniqueItems: true
        token:
          $ref: '#/components/schemas/ReferenceToken'

    EBTBalance:
      type: object
      properties:
        cashBalance:
          type: number
        cashCurrencyCode:
          $ref: '#/components/schemas/ISO-4217'
        snapBalance:
          type: number
        snapCurrencyCode:
          $ref: '#/components/schemas/ISO-4217'
      readOnly: true

    Email:
      description: Email address for the user.
      type: object
      properties:
        type:
          description: The "type" sub-attribute is used to provide a classification meaningful to the (human) user.  The user interface should encourage the use of basic values of "work", "home", and "other" and MAY allow additional type values to be used at the discretion of the service client.
          type: string
        value:
          description: The value SHOULD be specified according to RFC5321.
          type: string
        primary:
          description: Defines if this entry is to be used as the primary or default for the user.
          type: boolean
          default: false
      example:
        value: "bjensen@example.com"
        type: "work"
        primary: true

    ExpiryDate:
      description: Contains account expiration data and needs to either send the values in individual fields OR as a singleValue.
      type: object
      properties:
        month:
          type: string
          description: Month format 'MM'
          pattern: "[0-9]{2,2}"
          minLength: 2
          maxLength: 2
          example: "09"
        year:
          type: string
          description: Year format 'YY'
          pattern: "[0-9]{2,2}"
          minLength: 2
          maxLength: 2
          example: "20"
        singleValue:
          type: string
          description: Month and year together, 'MMYY' or 'MMYYYY'.  If the latter format, the string will be parsed and validated per the given format.  Any other format will be rejected.
          minLength: 4
          maxLength: 6

    ExternalCustomerId:
      title: External Customer ID
      description: External customer id.
      type: string

    FdCustomerId:
      title: FD Customer ID
      description: FD customer identifier tied to the vaulted accounts.
      type: string
      example: cuid-0987613457398475

    Fleet:
      description: Information on a Fleet account
      type: object
      properties:
        cardNumber:
          description: Primary account number, can only be sent when vaulting an account.  This field will NOT be present in responses.
          type: string
        nameOnCard:
          description: Name as printed on physical card or on virtual account
          type: string
        alias:
          description: Card alias
          type: string
          readOnly: true
        cardType:
          $ref: '#/components/schemas/FleetCardType'
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        securityCode:
          type: string
        sequenceNumber:
          description: Sequence number of the card.
          type: string
        token:
          $ref: '#/components/schemas/ReferenceToken'

    FundingSource:
      description: Holds information about funding source for the payment transaction. Can hold only one above the provided funding sources.
      type: object
      properties:
        saveToVault:
          description: Flag to indicate if the provided payment method should be vaulted to a secure repository for future use for the given customer.
          type: boolean
          default: false
          example: false
        type:
          $ref: '#/components/schemas/FundingSourceType'
        vaultedAccount:
          $ref: '#/components/schemas/VaultedAccount'
        credit:
          $ref: '#/components/schemas/Credit'
        prepaid:
          $ref: '#/components/schemas/Prepaid'
        fleet:
          $ref: '#/components/schemas/Fleet'
        applePay:
          $ref: '#/components/schemas/ApplePay'
        androidPay:
          $ref: '#/components/schemas/AndroidPay'
        samsungPay:
          $ref: '#/components/schemas/SamsungPay'
        paypal:
          $ref: '#/components/schemas/Paypal'
        token:
          $ref: '#/components/schemas/ReferenceToken'
        visaCheckout:
          $ref: '#/components/schemas/VisaCheckout'
        googlePay:
          $ref: '#/components/schemas/GooglePay'
        masterpass:
          $ref: '#/components/schemas/MasterPass'
        ach:
          $ref: '#/components/schemas/ACH'
        venmo:
          $ref: '#/components/schemas/Venmo'
        vipps:
          $ref: '#/components/schemas/Vipps'
        amazonPay:
          $ref: '#/components/schemas/AmazonPay'
        ideal:
          $ref: '#/components/schemas/Ideal'
        bancontact:
          $ref: '#/components/schemas/Bancontact'
        walmartPay:
          $ref : '#/components/schemas/WalmartPay'
        ebt:
          $ref: '#/components/schemas/EBT'

    GooglePay:
      description: Google Payment specific information
      type: object
      properties:
        version:
          description: Identifies encryption/signing scheme.
          type: string
          example: "EC_v1"
        developerEmail:
          type: string
        signature:
          description: Signature to verify Google initiated message.
          type: string
          example: "MIAGCSqGSIb......AAAA=="
        data:
          description: Data includes encryptedMessage, ephemeralPublicKey, tag.
          type: string
          example: "{\"encryptedMessage\":\"8nx...u003d\",\"ephemeralPublicKey\":\"BGH...u003d\",\"tag\":\"nvm...\\u003d\"}"
        dPanLast4:
          type: string
          example: "9876"
        bin:
          type: string
        eciIndicator:
          type: string
        xid:
          type: string
        cavv:
          type: string            
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        panType:
          type: string
        cardType:
          $ref: '#/components/schemas/CreditCardType'
          example: "VISA"
        token:
          $ref: '#/components/schemas/ReferenceToken'
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'

    Ideal:
      type: object
      properties:
        returnUrl:
          type: string
        deepLink:
          type: string

    ISO-4217:
      description: Holds currency information
      type: object
      properties:
        code:
          type: string
          default: "USD"
          example: "USD"
        number:
          type: integer
          default: 840
          example: 840
        digits:
          type: integer
          default: 2
          example: 2
        currency:
          type: string
          default: "US Dollar"
          example: "US Dollar"

    Link:
      description: Model to communicate linked resources.
      type: object
      required:
        - href
        - rel
      properties:
        href:
          description: URL to linked resource.
          type: string
          format: uri
        rel:
          description: Defines the type of link relationship to current resource.
          type: string
          enum:
            - current.page
            - previous.page
            - next.page
            - self
          example:
            "self"
        method:
          description: Defines the HTTP method for the given href.
          type: string
          default: "GET"
          example:
            "GET"
        id:
          description: Identifier to the resource.
          type: string
          example:
            "415e5cf6bfdb11e8a355529269fb1459"

    MasterPass:
       description: MasterPass information
       type: object
       properties:
         transactionId:
           description: Identifier corresponding to an account enrolled with MasterPass system.
           type: string
           example: "1234732704291071701"
         credit:
           $ref: '#/components/schemas/Credit'


    NVP:
      title: Name and Value pair.
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        valueAsList:
          type: array
          minItems: 0
          items:
            type: string

    Paypal:
      description: Information about a Paypal account.
      type: object
      properties:
        payerId:
          type: string
          description: Paypal generated Unique identifier for a Paypal account.
          example: "LPLWNMTBWMFAY"
        nonce:
          type: string
          description: Paypal generated nonce.
          example: "ab12-124C-ab12-124C-ab12-124C"
        token:
          $ref: '#/components/schemas/ReferenceToken'
        credit:
          $ref: '#/components/schemas/Credit'

    Phone:
      description: Phone number for the user.
      type: object
      properties:
        value:
          description: The value SHOULD be specified according to the format defined in RFC3966, e.g., 'tel:+1-201-555-0123'.
          type: string
        type:
          description: Often has typical values of "work", "home", "mobile", "fax", "pager", and "other" and MAY allow more types to be defined by the service client.
          type: string
        primary:
          description: Defines if this entry is to be used as the primary or default for the user.
          type: boolean
          default: false
      example:
        value: "555-555-5555"
        type: "work"

    Prepaid:
      description: Prepaid (a.k.a. gift) account information
      type: object
      properties:
        cardNumber:
          description: Prepaid card number.
          type: string
          example: "6759649826438453"
        cardSubType:
          description: Merchant or brand specific information about the type of account.Issuer/group information.
          type: string
          example: "Merchant Brand"
        securityCode:
          description: Security code of prepaid card
          type: string
          example: "345"
        promotionCode:
          description: Promotion code for prepaid account activation.
          type: string
        alias:
          type: string
          readOnly: true
          example: "8453"
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        balance:
          $ref: '#/components/schemas/PrepaidBalance'
        token:
          $ref: '#/components/schemas/ReferenceToken'

    PrepaidBalance:
      description: Details of balance in the prepaid card.
      required:
        - currentBalance
        - currencyCode
      properties:
        currentBalance:
          description: The current balance of prepaid card in lower denomination of the currency.
          type: number
        beginBalance:
          description: The balance of prepaid card before a transaction in lower denomination of the currency.
          type: number
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'
        currencyType:
          $ref: '#/components/schemas/CurrencyPairType'
      readOnly: true
      example:
        currentBalance: 1100
        beginBalance: 1000
        currencyCode: 840
        currencyType: "BASE"

    ReferenceToken:
      description: Surrogate value used to represent a handle to an account without sharing PCI/PII data to look it up.
      type: object
      properties:
        tokenId:
          description: Actual token value
          type: string
          example: "292bb6b886fc4446894f878b7e32bd5e"
        tokenProvider:
          description: Indicates what system is the originator of the token
          type: string
          example: "TRANS_ARMOR or NETWORK_TOKEN or THIRD_PARTY_NETWORK_TOKEN"
        cryptogram:
          description: 28 or 56 characters for Visa / Mastercard. 4 characters for Discover / Amex. Required for CIT. Not required for MIT.
          type: string
          example: "3CguW5ecfTz...Yuhw="
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        tokenType:
          $ref: '#/components/schemas/ReferenceTokenType'

    RequestedAmount:
      title: Requested Amount
      description: Requested amount for the given request type [auth, capture, refund, etc] in lower denomination.
      type: number
      format: double
      minimum: 0
      exclusiveMinimum: true
      example: '500.00'

    SamsungPay:
      type: object
      properties:
        version:
          type: string
          example: "EC_v1"
        developerEmail:
          type: string
        data:
          type: string
          example: "3CguW5ecfTzO...03d"
        signature:
          type: string
          example: "MIAGCSqGSIb......AAAA=="
        decryptAlias:
          description: field of the public key certificate.
          type: string
          example: "oslo.com.xxx.Prod_mer"
        dPanLast4:
          type: string
          example: "9876"
        bin:
          type: string
        eciIndicator:
          type: string
        xid:
          type: string
        cavv:
          type: string          
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        panType:
          type: string
        cardType:
          $ref: '#/components/schemas/CreditCardType'
          example: "VISA"
        header:
          type: object
          properties:
            ephemeralPublicKey:
              type: string
              example: "MFkwEw...03d"
            publicKeyHash:
              type: string
              example: "+vbONw...IM="
        token:
          $ref: '#/components/schemas/ReferenceToken'
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'

    VaultedAccount:
      description: FD Account information
      type: object
      properties:
        fdAccountId:
          description: Unique identifier for a customer account vaulted with uCom
          type: string
        securityCode:
          description: Card Verification value.
          type: string
        status:
          $ref: '#/components/schemas/AccountStatus'
        type:
          $ref: '#/components/schemas/AccountType'
      example:
        fdAccountId: "muid-3d4f2ac...c91014f2dc1"

    Venmo:
      description: Information about a Venmo account.
      type: object
      properties:
        nonce:
          type: string
          description: Venmo generated nonce.
          example: "ab12-124C-ab12-124C-ab12-124C"
        token:
          $ref: '#/components/schemas/ReferenceToken'

    Vipps:
      description: Information about a Vipps account. 'credit' is a read-only property.
      type: object
      required:
        - paymentId
      properties:
        paymentId:
          type: string
          description: The payment_id of Vipps. Used to correlate with the webhook of an open order.
          example: "ab12-124C-ab12-124C-ab12-124C"
        credit:
          $ref: '#/components/schemas/Credit'

    VisaCheckout:
      description: Visa Checkout information
      type: object
      properties:
        callId:
          description: Identifier corresponding to an account enrolled with Visa Checkout system.
          type: string
          example: "1234732704291071701"
        credit:
          $ref: '#/components/schemas/Credit'

    ThreeDSecure:
      description: Details of ThreeDSecure transaction used to process the challenge flow
      type: object
      properties:
        transactionId:
          description: Transaction id generated on the server
          type: string
          example: "292bb6b886fc4446894f878b7e32bd5e"
        transactionStatus:
          type: string
          description: Transactions status of 3DS server
          example: "C"
        transactionStatusReason:
          type: string
          description: Reason for the transaction status
        challengeResponse:
          type: string
          example: "ewogIC"
        challengeIndicator:
          type: string
          example: "01 = No preference
                    02 = No challenge requested
                    03 = Challenge requested: 3DS Requestor Preference
                    04 = Challenge requested: Mandate"
        dsTransactionId:
          type: string
          example: "292bb6b886fc4446894f878b7e32bd5e"
        acsTransactionId:
          type: string
          example: "292bb6b886fc4446894f878b7e32bd5e"
        serverTransactionId:
          type: string
          example: "292bb6b886fc4446894f878b7e32bd5e"
        acsReferenceNumber:
          type: string
          example: "292bb6b886fc4446894f878b7e32bd5e"
        acsSignedContent:
          type: string
          example: "292bb6b88....6fc4446894f878b7e32bd5e"
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        challengeRequest:
          type: string
          example: "ewogICAiYW.......MjJjMGVjIgp9"
        acsUrl:
          type: string
          example: "https://test.modirum.com/dstests/ACSEmu2"
        iframeContent:
          type: string
          example: "<iframe></iframe>"
        termUrl:
          type: string
          example: "https://mydomain/3dstest?transactionId=292bb6b886fc4446894f878b7e32bd5e"
        isThreeDSMethodCompleted:
          type: boolean
          example: true
        isAuthenticationCompleted:
          type: boolean
          example: true
        cavv:
          type: string
          description: Card authentication verification value
        threeDSVersion:
          type: string
        expiryDateTime:
          description: 3DS challenge transaction expiry date time.
          type: string
          readOnly: true
          format: date-time
          example: "2020-01-01T16:06:05Z"
        eci:
          type: string
          description: Electronic Commerce Indicator value

    ThreeDSecureAuth:
      type: object
      properties:
        authenticationId:
          type: string
          example: 7ad99e2c2a5343a4a270aececf1ff45b
        storeId:
          description: Store identifier where the transaction is being performed.
          type: string
          example: "123456"
        requestedAmount:
          $ref: '#/components/schemas/RequestedAmount'
        authenticationType:
          $ref: '#/components/schemas/AuthenticationType'
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'
        fundingSource:
          $ref: '#/components/schemas/FundingSource'
        additionalInfo:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
          uniqueItems: true
        threeDSecureInfo:
          $ref: '#/components/schemas/ThreeDSecure'

    WalmartPay:
      type: object
      properties:
          credit:
            $ref: '#/components/schemas/Credit'
          token:
            $ref: '#/components/schemas/ReferenceToken'



#-------------------------------------
# Common Models
#-------------------------------------
    DeviceInfo:
      description: Request origin device details
      type: object
      writeOnly: true
      required:
        - id
        - kind
      properties:
        id:
          description: Unique Id for the device. Value should not contain line feeds, carriage returns, tabs, leading or trailing spaces, or multiple spaces.
          type: string
          example: "537edec8-d33e-4ee8-93a7-b9f61876950c"
        kind:
          description: Possible values are mobile, wearable, automobile, embedded,desktop, other.
          type: string
          example: "mobile"
        details:
          title: deviceData
          description: Device data information from multiple providers.
          type: array
          minItems: 0
          uniqueItems: true
          items:
            description: Collection of device data
            type: object
            properties:
              provider:
                description: Identifies the provider of the data and is often used when decrypting data on the server.
                type: string
                example: "3DS"
              dataCapture:
                description: Device data captured as a bundle and transmitted as an encrypted and/or specifically formatted string.
                type: object
                properties:
                  rawData:
                    description: Device capture - raw data blob
                    type: string
                    example: "aaaaaXREUVZGRlFY...aMV"
                  dataEventId:
                    description: Event identifier used map state on the server.
                    type: string
                    example: "BB8E4E92...Fz1E063113"
                  captureTime:
                    description: Device data capture time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
                    type: string
                    format: date-time
                    example: "2016-04-16T16:06:05Z"
              dataStatic:
                description: Device static details
                type: object
                properties:
                  os:
                    description: Device OS name
                    type: string
                    example: "Android 5.1.1 Lollipop"
                  osVersion:
                    description: Device OS version
                    type: string
                    example: "5.1.1 Lollipop"
                  model:
                    description: Device model
                    type: string
                    example: "XT1540"
                  type:
                    description: Device type
                    type: string
                    example: "Moto G"
              dataDynamic:
                description: Device location details
                type: object
                properties:
                  latitude:
                    description: Device position - latitude at the time of the data event
                    type: string
                    example: "13.0827 N"
                  longitude:
                    description: Device position - longitude at the time of the data event
                    type: string
                    example: "80.2707 E"
                  ipAddress:
                    description: IP address
                    type: string
                    example: "172.27.37.221"
                  captureTime:
                    description: Device data capture time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
                    type: string
                    format: date-time
                    example: "2016-04-16T16:06:05Z"
              dataApplication:
                description: Mobile application specific data
                type: object
                properties:
                  version:
                    description: Mobile application version.
                    type: string
                    format: sting
                    example: "1.0.0"
                  name:
                    description: Mobile application name.
                    type: string
                    format: sting
                    example: "application-name"
                  country:
                    description: Mobile application store country.
                    type: string
                    format: sting
                    example: "US"
        additionalInfo:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
          uniqueItems: true

    Error:
      description: Model for error messaging
      type: object
      properties:
        code:
          type: string
          description: Uniquely identifies an error condition. Client applications need to read and handle errors based on this.
        message:
          type: string
          description: A generic description of the error condition.
        category:
          type: string
          description: The resource associated with the error condition.
        developerInfo:
          type: object
          description: Information that needs to be understood by the client developers and should not be interpreted for application processing.
          properties:
            developerMessage:
              type: string
              description: An elaborative description of the error description.
            moreInfo:
              type: string
              description: Link to the error in Developer page.
            fieldError:
              description: Detailed information about message format errors.
              type: array
              items:
                properties:
                  field:
                    description: The property or attribute associated with the error
                    type: string
                  message:
                    description: Information specific to a property or attribute.
                    type: string
        hostExtraInfo:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/NVP'
          uniqueItems: true
        threeDSecureInfo:
          $ref: '#/components/schemas/ThreeDSecure'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

  #-------------------------------------
  # ENUM Models
  #-------------------------------------
    AccountStatus:
      description: Indicates the status of an account.
      type: string
      readOnly: true
      enum:
        - ACTIVE
        - INACTIVE
        - TERMINATED
        - ISSUER_TERMINATED
        - WALLET_TERMINATED
        - PENDING

    AuthenticationType:
      description: Indicates the type of the authentication
      type: string
      readOnly: true
      enum:
        - PAYMENT
        - CARD_VERIFICATION

    AccountType:
      description: Type of Account vaulted
      type: string
      readOnly: true
      enum:
        - CREDIT
        - PREPAID
        - ACH
        - LOYALTY
        - PAYPAL
        - MASTERPASS
        - VENMO
        - THREEDSECURE
        - VAULTED_ACCOUNT
        - FLEET

    AchEnrollmentStatus:
      description: Indicates ACH enrollment status
      type: string
      enum:
        - ACTIVE
        - PENDING
        - PENDING_LINKED_ACCOUNT

    AchEnrollmentSubStatus:
      description: Indicates ACH enrollment pending status
      type: string
      enum:
          - PENDING_BANK_VALIDATION
          - PENDING_PIN_VALIDATION
          - PENDING_EMAIL_VALIDATION
          - PENDING_PHONE_VALIDATION
          - PENDING_SOFT_BLOCK
          - PENDING_HARD_BLOCK

    AchCardType:
      description: Indicates the type of ACH card association
      type: string
      enum:
        - CONNECTPAY

    AchAccountType:
      description: ACH account type
      type: string
      enum:
        - CHECKING
        - SAVINGS

    CreditCardType:
      title: Credit Card Type
      description: Indicates the type of credit account association
      type: string
      enum:
        - AMEX
        - DISCOVER
        - MASTERCARD
        - PLCC
        - VISA
        - OTHER

    CurrencyPairType:
      description: Describes the type of currency where BASE represents the currency from Host and TRANSACTION represents the one requested.
      type: string
      enum:
        - BASE
        - TRANSACTION

    FleetCardType:
      description: Indicates the type of fleet account association
      type: string
      enum:
        - WEX

    FundingSourceType:
      description: Describes the type of Funding source
      type: string
      readOnly: true
      enum:
        - VAULTED_ACCOUNT
        - CREDIT
        - PREPAID
        - APPLE_PAY
        - PAYPAL
        - TOKEN
        - NONCE
        - VCO
        - VENMO
        - AMAZON_PAY
        - VIPPS
        - FLEET
        - BANCONTACT
        - IDEAL
        - WALMART_PAY
        - EBT

    ReferenceTokenType:
      description: Indicates if the given loyalty program is still active or not.
      type: string
      enum:
        - FORMAT_PRESERVING_MULTI_USE
        - FORMAT_PRESERVING_SINGLE_USE
        - CLAIM_CHECK_NONCE
        - RANDOM_MULTI_USE
        - RANDOM_SINGLE_USE
        - CLAIM_CHECK_NONCE_WITH_PINCAPTURE

  #-------------------------------------
  # Responses
  #-------------------------------------
  responses:
    OK:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ThreeDSecureAuth'

    NoContent:
      description: The request succeeded but there’s really nothing to show.

    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Unauthorized:
      description: Unauthorized

    NotFound:
      description: Not Found - The requested resource doesn't exist.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Conflict:
      description: Conflict - The requested operation conflicts with the current state of the identified resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    ServerError:
      description: An unexpected server error occurred.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  #-------------------------------------
  # Parameter Models
  #-------------------------------------
  parameters:
    AcceptLanguageParam:
      name: Accept-Language
      description: The Accept-Language header contains information about the language preference of a user. This HTTP header is useful to multilingual sites for deciding the best language to serve to the client. i.e en-US,fr-CA
      in: header
      schema:
        type: string

    ApiKeyParam:
      name: Api-Key
      description: An API key is a string value passed by a client app to the API proxies. The key uniquely identifies the client app.
      in: header
      required: true
      schema:
        type: string

    AuthorizationParam:
      name: Authorization
      description: Authorization information for the request. Format- `HMAC {hmacToken}`
      in: header
      required: true
      schema:
        type: string

    ClientTokenParam:
      name: Client-Token
      description: Used to pass the original client OAuth token information given in a client-credentials flow.  This field is only used when the server is making the request and needs to link the transaction to a specific client.  Format- `Bearer {access_token}`
      in: header
      schema:
        type: string

    ClientRequestIdParam:
      name: Client-Request-Id
      description: Contains a unique ID generated by the client that can be used for enforcing idempotency on POST actions. POSTs are inherently non-idempotent and submitting the exact same request multiple times would create duplicate resources.
        Note:- Omitting this header increases the risk of duplicate transactions, which for payments could cost the client issues like double-billing.
      in: header
      required: true
      schema:
        type: string

    AuthenticationIdParam:
      name: authenticationId
      description: Unique identifier provided for the authentication id
      in: path
      required: true
      schema:
        type: string

    SubMerchantIdParam:
      name: Sub-Merchant-Id
      description: Sub Merchant Id contains information about the merchant identifier
      in: header
      schema:
        type: string

    TimestampParam:
      name: Timestamp
      description: Epoch timestamp in the request initiating system
      in: header
      required: true
      schema:
        type: string

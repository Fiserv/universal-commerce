openapi: 3.0.1
info:
  title: uCom Petro Transaction Services - Internal
  description: Services related to purchasing items at a petro station.
  version: 0.0.1
servers:
- url: https://int.api.firstdata.com/ucom
tags:
- name: petro-transactions
  description: Operations for purchasing items at a petro site
paths:
  /v1/petro-sites/{siteLocationId}/transactions:
    get:
      tags:
      - petro-transactions
      summary: Petro transactions summary by status for the current batch
      description: Petro transactions summary for the current batch
      parameters:
      - name: Api-Key
        in: header
        description: An API key is a string value passed by a client app to the API
          proxies. The key uniquely identifies the client app.
        required: true
        schema:
          type: string
      - name: Timestamp
        in: header
        description: Epoch timestamp in the request initiating system
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Authorization information for the request. Format- 'HMAC {hmacToken}'
        required: true
        schema:
          type: string
      - name: Client-Token
        in: header
        description: Used to pass the original client OAuth token information given
          in a client-credentials flow.  This field is only used when the server is
          making the request and needs to link the transaction to a specific client.  Format-
          'Bearer {access_token}'
        schema:
          type: string
      - name: siteLocationId
        in: path
        description: Unique identifier to locate site.
        required: true
        schema:
          type: string
      - name: Accept-Language
        in: header
        description: The Accept-Language header contains information about the language preference of a user. This HTTP header is useful to multilingual sites for deciding the best language to serve to the client. i.e en-US,fr-CA
        schema:
          type: string
      responses:
        200:
          description: Batch Summary response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchSummary'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        401:
          description: Unauthorized
          content: {}
        500:
          description: An unexpected server error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    BatchSummary:
      type: object
      properties:
        batchNumber:
          type: string
          description: Batch number of the site transaction
          example: "1"
        stan:
          type: string
          description: Stan to be used for Closure transaction
          example: "5"
        summary:
          type: array
          items:
            $ref: '#/components/schemas/SummaryItem'
    SummaryItem:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/TransactionStatus'
        transactionCount:
          type: number
          description: Transaction count.
        totalAmount:
          minimum: 0
          exclusiveMinimum: true
          type: number
          description: Transaction total count
          format: double
          readOnly: true
          example: 500.0
      description: A physical mailing address for this user.
      example:
        status: COMPLETED
        transactionCount: 5
        totalAmount: 500.12
    NVP:
      title: Name and Value pair.
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        valueAsList:
          minItems: 0
          type: array
          items:
            type: string
    Error:
      type: object
      properties:
        code:
          type: string
          description: Uniquely identifies an error condition. Client applications
            need to read and handle errors based on this.
        message:
          type: string
          description: A generic description of the error condition.
        category:
          type: string
          description: The resource associated with the error condition.
        developerInfo:
          type: object
          properties:
            developerMessage:
              type: string
              description: An elaborative description of the error description.
            fieldError:
              type: array
              description: Detailed information about message format errors.
              items:
                type: object
                properties:
                  field:
                    type: string
                    description: The property or attribute associated with the error
                  message:
                    type: string
                    description: Information specific to a property or attribute.
            moreInfo:
              type: string
              description: Link to the error in Developer page.
          description: Information that needs to be understood by the client developers
            and should not be interpreted for application processing.
        hostExtraInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
      description: Model for error messaging
      example:
        code: "40000"
        message: Example Error
        category: example
        developerInfo:
          developerMessage: Invalid Message format in request payload
          moreInfo: https://www.example.com/errors/40000
          fieldError:
          - field: example id
            message: exampleId is mandatory
    TransactionStatus:
      type: string
      description: Indicates the status of an account.
      enum:
      - AUTHORIZED
      - CANCELLED
      - FUEL_STARTED
      - COMPLETED
      - CHALLENGED
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NoContent:
      description: The request succeeded but thereâ€™s really nothing to show.
      content: {}
    Conflict:
      description: Conflict - The requested operation conflicts with the current state
        of the identified resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ServerError:
      description: An unexpected server error occured.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content: {}
    BatchSummaryOK:
      description: Batch Summary response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BatchSummary'
    NotFound:
      description: Not Found - The requested resource doesn't exist.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  parameters:
    ClientTokenParam:
      name: Client-Token
      in: header
      description: Used to pass the original client OAuth token information given
        in a client-credentials flow.  This field is only used when the server is
        making the request and needs to link the transaction to a specific client.  Format-
        'Bearer {access_token}'
      schema:
        type: string
    AuthorizationParam:
      name: Authorization
      in: header
      description: Authorization information for the request. Format- 'HMAC {hmacToken}'
      required: true
      schema:
        type: string
    SiteLocationIdParam:
      name: siteLocationId
      in: path
      description: Unique identifier to locate site.
      required: true
      schema:
        type: string
    TimestampParam:
      name: Timestamp
      in: header
      description: Epoch timestamp in the request initiating system
      required: true
      schema:
        type: string
    ApiKeyParam:
      name: Api-Key
      in: header
      description: An API key is a string value passed by a client app to the API
        proxies. The key uniquely identifies the client app.
      required: true
      schema:
        type: string

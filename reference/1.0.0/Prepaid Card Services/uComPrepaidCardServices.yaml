#-------------------------------------
# Document Change Log
# 0.2.3
#     - Added tokens reference in the Credit
#     - Added sweep and deduct API's
# 0.2.2
#     - Added new V2 endpoints for void transactions
#     - Added new V2 endpoints for multiple transaction calls
# 0.2.1
#     - Added Walmart pay as fundingSource
#     - Added SEC code for ACH
#     - Added EBT as funding source
#     - Added Merchant id as header field
#     - Added asset provider field in the ACH
# 0.2.0
#     - Added 'OTHER' CreditCardType
#     - Added fields in ThreeDSecure object
#     - Added Price tier in POSItem
#     - Added PAN type and BIN
#     - Added Expiry Date to InApp entities
#     - Added Developer Email in ApplePay/GooglePay/SamsungPay objects
#     - Added ECIIndicator in ApplePay/GooglePay/SamsungPay objects
#     - Added local payment methods for Ideal and Bancontact
# 0.1.9
#     - Updated PriceAdjustment to add maxQuantity
#     - Added OfferStatus in the PriceAdjustments
#     - Added washcodes under POSItem
#     - Added dynamic descriptors API model
#     - Added external customer id
# 0.1.8
#     - Added 3ds web support
#     - Added new API for prepaid transaction history with pagination
#     - Added account type for ACH
# 0.1.7
#     - Added credit in Paypal object
#     - Added enrollment status and bank name in the ACH object
#     - Added Vipps as a funding source.
#     - Added new API to retrieve balance based on request id
#     - Updated PriceAdjustment as list under POSItem
#     - Added 3ds challenge transaction expiry date time in ThreeDSecure
# 0.1.6
#     - No change.
#     - Added SecurityCode in vaulted Account
#     - Added VAULTED_ACCOUNT as AccountType
#     - Added Accept-Language header field
#     - Added PurchaseInfo in the PrepaidTransaction, deprecated orderId from the parent object
# 0.1.5
#     - Added Link in the Error object.
#     - Added Amazon Pay funding source
#     - acsSignedContent and CardType in threeDSecureInfo object
#     - Added altMerchantId in the PrepaidTransaction object
#     - Added billing phone in Credit,ApplePay, GooglePay, SamsungPay objects
# 0.1.4
#     - Added AccountType and AccountStatus entities under VaultedAccount
#     - Added ACH under funding source.
#     - Added Venmo under funding source.
#     - Added PATCH operation on purchase and reload transactions
#     - Added ThreeDSecure object for purchase and reload transactions
# 0.1.3
#     - Adding NVP with valueAsList
#     - Added 'billingAddress' element in 'AndroidPay', 'ApplePay', 'GooglePay' and 'SamsungPay'
#     - update in DeviceInfo.
# 0.1.2
#   - No change.
# 0.1.1
#   - Added 'token' attribute to 'ApplePay' & 'AndroidPay'
#   - Added 'cardType' attribute in 'ApplePay'
#   - Added 'cardType', 'dPanLast4' attribute in 'AndroidPay', 'GooglePay' and 'SamsungPay'
#   - Added 'id' attribute to Link
#   - Added 'Client-Request-Id' header to Reload api
#   - Added 'approvedAmount' attribute to FundingInfo
#   - Modified Http method type from GET to POST for prepaid balance and transactions APIs.
# 0.1.0
#   - Added 'googlePay' as 'fundingSource'
#   - Added client-token in the header field
# 0.0.9
#   - Added cardSubType attribute to Credit entity.
# 0.0.8
#     - No change.
# 0.0.7
#   - Updated ReferenceToken to have more accurate attribute names, removed use value
#   - Cleaned up examples in the models
# 0.0.6
#   - Updated to use ReferenceToken model
# 0.0.5
#     - No change.
# 0.0.4
#     - No change.
# 0.0.3
#     - No change.
# 0.0.2
#     - Added 'osVersion' attribute to 'DeviceInfo' object.
# 0.0.1
#     - Initial Version
#-------------------------------------

openapi: 3.0.1
info:
  title: uCom Prepaid Account Services
  description: Services related to prepaid cards such as creating a new prepaid card, balance check, reloading funds, balance transfer etc.
  version: 0.2.3
servers:
- url: https://int.api.firstdata.com/ucom
tags:
- name: balance
  description: Operations and details about prepaid balance.
- name: purchase
  description: Operations and details about prepaid purchase.
- name: void
  description: Operations and details about prepaid void.
- name: reload
  description: Operations and details about prepaid reload.
- name: merge
  description: Operations and details about prepaid merge.
- name: transaction
  description: Operations and details about prepaid merge.
paths:
  /v1/prepaids/balances:
    post:
      x-group-name: Prepaid Services
      x-proxy-name: Get Prepaid Card Balance
      tags:
      - balance
      description: This service retrieves the balance of an anonymous prepaid card.
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/ClientRequestIdParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidAccountRequest'
            examples:
              Vaulted Card: {summary: Request with vaulted card, $ref: '#/components/examples/VaultedCardBalanceRequest'}
              Plain Card: {summary: Request with plain card, $ref: '#/components/examples/PlainCardBalanceRequest'}
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prepaid'
              examples:
                Vaulted Card: {summary: Balance response for vaulted card, $ref: '#/components/examples/VaultedCardBalanceResponse'}
                Plain Card: {summary: Balance response for vaulted card, $ref: '#/components/examples/PlainCardBalanceResponse'}

        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        500:
          $ref: '#/components/responses/ServerError'
        204:
          $ref: '#/components/responses/NoContent'

  /v1/prepaids/aggregate-balances:
    post:
      x-group-name: Prepaid Services
      x-proxy-name: Get Aggregated Balance for Multiple Prepaid Cards
      tags:
      - balance
      description: This service retrieves the aggregated balance of anonymous prepaid cards.
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/ClientRequestIdParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:

        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidAggregateRequest'
            examples:
              Vaulted Card: {summary: Request with vaulted card, $ref: '#/components/examples/AggregateBalanceMerchantFundedRequest'}


        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregateBalanceTransactionInfo'
              examples:
                Vaulted Card: {summary: Response with vaulted card, $ref: '#/components/examples/AggregateBalanceMerchantFundedResponse'}

        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        500:
          $ref: '#/components/responses/ServerError'
        204:
          $ref: '#/components/responses/NoContent'

  /v1/prepaids/purchases:
    post:
      x-group-name: Prepaid Services
      x-proxy-name: Purchase a New Prepaid Card
      tags:
      - purchase
      description: Purchase a new prepaid card
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/ClientRequestIdParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidAccountRequest'
            examples:
              Merchant Funded: {summary: Request with Merchant Funded, $ref: '#/components/examples/MerchantFundedPurchaseRequest'}
              Credit Card: {summary: Request with credit card, $ref: '#/components/examples/CreditCardPurchaseRequest'}
              Vaulted Card: {summary: Request with vaulted card, $ref: '#/components/examples/VaultedCardPurchaseRequest'}
              Apple Pay: {summary: Request with Apple Pay, $ref: '#/components/examples/ApplePayPurchaseRequest'}
              Google Pay: {summary: Request with Google Pay, $ref: '#/components/examples/GooglePayPurchaseRequest'}
              Samsung Pay: {summary: Request with Samsung pay, $ref: '#/components/examples/SamsungPayPurchaseRequest'}
              PLCC: {summary: Request with PLCC, $ref: '#/components/examples/PLCCPurchaseRequest'}
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidPurchase'
              examples:
                Credit Card:
                  summary: Purchase Prepaid card with credit Card Response
                  $ref: '#/components/examples/CreditCardPurchaseResponse'
                Vaulted Card:
                  summary: Purchase Prepaid card with Vaulted Card response
                  $ref: '#/components/examples/VaultedCardPurchaseResponse'
                Apple Pay:
                  summary: Purchase prepaid card with apple pay response
                  $ref: '#/components/examples/ApplePayPurchaseResponse'
                Google Pay:
                  summary: Purchase prepaid card with google pay response
                  $ref: '#/components/examples/GooglePayPurchaseResponse'
                Samsung Pay:
                  summary: Purchase prepaid card with samsung pay response
                  $ref: '#/components/examples/SamsungPayPurchaseResponse'
                PLCC:
                  summary: Purchase prepaid card with PLCC response
                  $ref: '#/components/examples/PLCCPurchaseResponse'
        202:
          description: Partially Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidPurchase'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        409:
          $ref: '#/components/responses/Conflict'
        500:
          $ref: '#/components/responses/ServerError'

  /v2/prepaids/purchases:
    get:
      x-group-name: Prepaid Services
      x-proxy-name: Get Status of Prepaid Card Purchase by clientRequestId
      tags:
      - purchase
      description: Get Status of prepaid card purchase transaction by clientRequestId
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/ClientRequestIdQueryParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidPurchase'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        409:
          $ref: '#/components/responses/Conflict'
        500:
          $ref: '#/components/responses/ServerError'

  /v2/prepaids/multi-purchases:
    post:
      x-group-name: Prepaid Services
      x-proxy-name: Purchase Multiple Prepaid Cards
      tags:
      - purchase
      description: Purchase Multiple Prepaid Cards
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/ClientRequestIdParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidMultiAccountRequest'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidMultiPurchase'
        207:
          description: Multiple status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidMultiPurchase'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        409:
          $ref: '#/components/responses/Conflict'
        425:
          $ref: '#/components/responses/TooEarly'
        500:
          $ref: '#/components/responses/ServerError'

  /v1/prepaids/void:
    post:
      x-group-name: Prepaid Services
      x-proxy-name: Void of Any Prepaid Card Transaction
      tags:
      - void
      description: Void of any prepaid card transaction
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/ClientRequestIdParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidVoidRequest'
        required: true
      responses:
        200:
          description: Voided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidVoid'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        409:
          $ref: '#/components/responses/Conflict'
        500:
          $ref: '#/components/responses/ServerError'

  /v2/prepaids/void:
    get:
      x-group-name: Prepaid Services
      x-proxy-name: Get status of Void Prepaid Transaction
      tags:
      - void
      description: This service is to get status of void prepaid transaction.
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/ClientRequestIdQueryParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      responses:
        200:
          description: Voided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidVoid'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        409:
          $ref: '#/components/responses/Conflict'
        500:
          $ref: '#/components/responses/ServerError'

  /v2/prepaids/multi-void:
    post:
      x-group-name: Prepaid Services
      x-proxy-name:  Cancel multiple prepaid card transactions
      tags:
      - void
      description: Multiple prepaid card transactions are voided.
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/ClientRequestIdParam'
      - $ref: '#/components/parameters/ClientRequestIdQueryParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidMultiVoidRequest'
        required: true
      responses:
        200:
          description: Voided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidMultiVoid'
        207:
          description: Multiple status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidMultiVoid'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        409:
          $ref: '#/components/responses/Conflict'
        425:
          $ref: '#/components/responses/TooEarly'
        500:
          $ref: '#/components/responses/ServerError'

  /v2/prepaids/sweeps:
    post:
      x-group-name: Prepaid Services
      x-proxy-name: Sweep a Prepaid Card Balance
      tags:
      - sweep
      description: Service to sweep a prepaid card balance
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/ClientRequestIdParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidSweepRequest'
        required: true
      responses:
        200:
          description: Sweeped
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidSweep'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        409:
          $ref: '#/components/responses/Conflict'
        500:
          $ref: '#/components/responses/ServerError'

  /v2/prepaids/multi-sweeps:
    post:
      x-group-name: Prepaid Services
      x-proxy-name: Sweep Multiple Prepaid Card Balances
      tags:
      - sweep
      description: Service to sweep multiple prepaid card balances
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/ClientRequestIdParam'
      - $ref: '#/components/parameters/ClientRequestIdQueryParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidMultiSweepRequest'
        required: true
      responses:
        200:
          description: Sweeped
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidMultiSweep'
        207:
          description: Multiple status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidMultiSweep'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        409:
          $ref: '#/components/responses/Conflict'
        425:
          $ref: '#/components/responses/TooEarly'
        500:
          $ref: '#/components/responses/ServerError'

  /v2/prepaids/sweeps/{fdTransactionId}/void:
    post:
      x-group-name: Prepaid Services
      x-proxy-name: Void Sweep Transaction
      tags:
      - sweep
      summary: Service to void a sweep transaction
      description: Service to void a sweep transaction
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/FdTransactionIdParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidVoidRequest'
        required: true
      responses:
        200:
          description: Voided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidVoid'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

  /v2/prepaids/sweeps/{fdParentTransactionId}/multi-void:
    post:
      x-group-name: Prepaid Services
      x-proxy-name: Service to Void Multiple Sweep Transactions
      tags:
      - sweep
      summary: Void YES of sweep transactions
      description: Void NO of sweep transactions
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/FdParentTransactionIdParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidMultiVoidRequest'
        required: true
      responses:
        200:
          description: Voided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidMultiVoid'
        207:
          description: Multiple status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidMultiVoid'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

  /v2/prepaids/deducts:
    post:
      x-group-name: Prepaid Services
      x-proxy-name: Deduct Amount from a Prepaid Card
      tags:
      - deduct
      description: Service to deduct prepaid card account
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/ClientRequestIdParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidDeductRequest'
        required: true
      responses:
        200:
          description: Deducted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidDeduct'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        409:
          $ref: '#/components/responses/Conflict'
        500:
          $ref: '#/components/responses/ServerError'

  /v2/prepaids/multi-deducts:
    post:
      x-group-name: Prepaid Services
      x-proxy-name: Deduct amount from multiple prepaid cards
      tags:
      - deduct
      description: Service to deduct multiple prepaid cards
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/ClientRequestIdParam'
      - $ref: '#/components/parameters/ClientRequestIdQueryParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidMultiDeductRequest'
        required: true
      responses:
        200:
          description: Deducted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidMultiDeduct'
        207:
          description: Multiple status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidMultiDeduct'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        409:
          $ref: '#/components/responses/Conflict'
        425:
          $ref: '#/components/responses/TooEarly'
        500:
          $ref: '#/components/responses/ServerError'

  /v2/prepaids/deducts/{fdTransactionId}/void:
    post:
      x-group-name: Prepaid Services
      x-proxy-name: Cancel a deducted transaction
      tags:
      - deduct
      summary: Void of a deducted transaction
      description: A deducted transaction is voided.
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/FdTransactionIdParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidVoidRequest'
        required: true
      responses:
        200:
          description: Voided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidVoid'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

  /v2/prepaids/deducts/{fdParentTransactionId}/multi-void:
    post:
      x-group-name: Prepaid Services
      x-proxy-name: Cancel multiple prepaid card transactions 
      tags:
      - deduct
      summary: Multiple deducted transactions are voided.
      description: Multiple deducted transactions are voided.
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/FdParentTransactionIdParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidMultiVoidRequest'
        required: true
      responses:
        200:
          description: Voided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidMultiVoid'
        207:
          description: Multiple status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidMultiVoid'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

  /v1/prepaids/purchases/{fdTransactionId}:
    patch:
      x-group-name: Prepaid Services
      x-proxy-name: Resume a Reload Transaction
      tags:
      - purchase
      description: This service resumes 3DS pending reload transaction.
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/FdTransactionIdParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  $ref: '#/components/schemas/UpdateActionType'
                deviceInfo:
                  $ref: '#/components/schemas/DeviceInfo'
        required: true
      responses:
        200:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidPurchase'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        409:
          $ref: '#/components/responses/Conflict'
        500:
          $ref: '#/components/responses/ServerError'

  /v1/prepaids/purchases/{fdTransactionId}/void:
    post:
      x-group-name: Prepaid Services
      x-proxy-name: Void of a Purchase Transaction
      tags:
      - purchase
      summary: Void of a purchase transaction
      description: Void of a purchase transaction
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/FdTransactionIdParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoidRequest'
        required: true
      responses:
        '200':
          description: Voided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prepaid'
              examples:
                With fdTransactionId:
                  summary: Cancel response using fd Transaction ID
                  $ref: '#/components/examples/PurchaseVoidResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

  /v2/prepaids/purchases/{fdTransactionId}/void:
    post:
      x-group-name: Prepaid Services
      x-proxy-name: Cancel a Purchase Transaction
      tags:
      - purchase
      summary: Purchase transaction is voided.
      description: Purchase transaction is voided.
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/FdTransactionIdParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidVoidRequest'
        required: true
      responses:
        200:
          description: Voided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidVoid'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

  /v2/prepaids/purchases/{fdParentTransactionId}/multi-void:
    post:
      x-group-name: Prepaid Services
      x-proxy-name: Cancel Purchase Transactions
      tags:
      - purchase
      summary: Purchase transactions are voided.
      description: Purchase transactions are voided.
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/FdParentTransactionIdParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidMultiVoidRequest'
        required: true
      responses:
        200:
          description: Voided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidMultiVoid'
        207:
          description: Multiple status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidMultiVoid'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

  /v1/prepaids/reloads:
    post:
      x-group-name: Prepaid Services
      x-proxy-name: Reload A Prepaid Card
      tags:
      - reload
      description: This service is to reload funds into a vaulted Prepaid Card.
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/ClientRequestIdParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadFundsRequest'
            examples:
              Merchant Funded: {summary: Request with Merchant Funded, $ref: '#/components/examples/MerchantFundedReloadRequest'}

              Credit: {summary: Request with Credit Card, $ref: '#/components/examples/CreditCardReloadRequest'}

              Apple Pay: {summary: Request with ApplePay, $ref: '#/components/examples/ApplePayReloadRequest'}
              Google Pay: {summary: Request with Google Pay, $ref: '#/components/examples/GooglePayReloadRequest'}
              Samsung Pay: {summary: Request with Samsung pay, $ref: '#/components/examples/SamsungPayReloadRequest'}
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadFundsPurchase'
              examples:
                Merchant Funded:
                  summary: Merchant funded reload response
                  $ref: '#/components/examples/MerchantFundedReloadResponse'
                Credit Card:
                  summary: Prepaid card reload with credit card card response
                  $ref: '#/components/examples/CreditCardReloadResponse'
                Apple Pay:
                  summary: prepaid card reload with apple pay response
                  $ref: '#/components/examples/ApplePayReloadResponse'
                Google Pay:
                  summary: prepaid card reload with google pay response
                  $ref: '#/components/examples/GooglePayReloadResponse'
                Samsung Pay:
                  summary: prepaid card reload with samsung pay response
                  $ref: '#/components/examples/SamsungPayReloadResponse'

        202:
          description: Partially Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadFundsPurchase'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        409:
          $ref: '#/components/responses/Conflict'
        500:
          $ref: '#/components/responses/ServerError'

  /v2/prepaids/reloads:
    get:
      x-group-name: Prepaid Services
      x-proxy-name: Get Status of Reload Prepaid Card by clientRequestId
      tags:
      - reload
      description: This service is to get status of reload prepaid card transaction by clientRequestId.
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/ClientRequestIdQueryParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadFundsPurchase'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        409:
          $ref: '#/components/responses/Conflict'
        500:
          $ref: '#/components/responses/ServerError'

  /v2/prepaids/multi-reloads:
    post:
      x-group-name: Prepaid Services
      x-proxy-name: Reload Funds to Multiple Prepaid Cards
      tags:
      - reload
      description: This service is to reload funds to multiple prepaid cards.
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/ClientRequestIdParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadMultiFundsRequest'
        required: true
      responses:/v1/prepaids/reloads
        200:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadMultiFundsPurchase'
        207:
          description: Multiple Status
          content:
            application/json:/v1/prepaids/balances/{requestId}
                $ref: '#/components/schemas/LoadMultiFundsPurchase'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        409:/v1/prepaids/balances/{requestId}
          $ref: '#/components/responses/Conflict'
        425:
          $ref: '#/components/responses/TooEarly'
        500:
          $ref: '#/components/responses/ServerError'

  /v1/prepaids/reloads/{fdTransactionId}:
    patch:
      x-group-name: Prepaid Services
      x-proxy-name: Load Funds into a Vaulted Prepaid Card
      tags:
      - reload
      description: Service to load funds into a vaulted Prepaid Card
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/FdTransactionIdParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  $ref: '#/components/schemas/UpdateActionType'
                deviceInfo:
                  $ref: '#/components/schemas/DeviceInfo'
        required: true
      responses:
        200:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadFundsPurchase'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        409:
          $ref: '#/components/responses/Conflict'
        500:
          $ref: '#/components/responses/ServerError'

  /v1/prepaids/reloads/{fdTransactionId}/void:
    post:
      x-group-name: Prepaid Services
      x-proxy-name: Void of a Reloaded Prepaid Card
      tags:
      - reload
      summary: Void of a reload transaction
      description: Void of a reload transaction
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/FdTransactionIdParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoidRequest'
        required: true
      responses:
        '200':
          description: Voided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prepaid'
              examples:
                With fdTransactionId:
                  summary: Cancel response using fd Transaction ID
                  $ref: '#/components/examples/ReloadVoidResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

  /v2/prepaids/reloads/{fdTransactionId}/void:
    post:
      x-group-name: Prepaid Services
      x-proxy-name: Cancel Reloaded Transaction
      tags:
      - reload
      summary: Void of a reload transaction
      description: Reload prepaid card transaction is voided.
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/FdTransactionIdParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidVoidRequest'
        required: true
      responses:
        200:
          description: Voided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidVoid'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

  /v2/prepaids/reloads/{fdParentTransactionId}/multi-void:
    post:
      x-group-name: Prepaid Services
      x-proxy-name: Cancel Multiple Reload Transactions
      tags:
      - reload
      summary: Void of reload transactions
      description: This service is to void multiple reload transactions.
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/FdParentTransactionIdParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidMultiVoidRequest'
        required: true
      responses:
        200:
          description: Voided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidMultiVoid'
        207:
          description: Multiple status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidMultiVoid'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        425:
          $ref: '#/components/responses/TooEarly'
        500:
          $ref: '#/components/responses/ServerError'

  /v1/prepaids/merges:
    post:
      x-group-name: Prepaid Services
      x-proxy-name: Merge Balance from One Vaulted Prepaid Card to Another
      tags:
      - merge
      description: This service merges the balance from one vaulted prepaid card to another vaulted prepaid card.
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/ClientRequestIdParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MergeAccountsRequest'
            examples:
              Vaulted Accounts: {summary: Request with Merchant Funded, $ref: '#/components/examples/VaultedAccountsBalanceMergeRequest'}
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MergeBalanceTransaction'
              examples:
                Vaulted Accounts:
                  summary: Merge response for two vaulted accounts
                  $ref: '#/components/examples/VaultedAccountsBalanceMergeResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        409:
          $ref: '#/components/responses/Conflict'
        500:
          $ref: '#/components/responses/ServerError'

  /v2/prepaids/merges:
    get:
      x-group-name: Prepaid Services
      x-proxy-name: Get Status of Merge Transaction by clientRequestId
      tags:
      - merge
      description: This service is used for status check when a previous merge transaction is timed out.
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/ClientRequestIdQueryParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MergeBalanceTransaction'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        409:
          $ref: '#/components/responses/Conflict'
        500:
          $ref: '#/components/responses/ServerError'

  /v1/prepaids/merges/{fdTransactionId}/void:
    post:
      x-group-name: Prepaid Services
      x-proxy-name: Void of a Merge Transaction
      tags:
      - merge
      summary: Void of a merge transaction
      description: Void of a merge transaction
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/FdTransactionIdParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoidRequest'
        required: true
      responses:
        200:
          $ref: '#/components/responses/OK'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

  /v2/prepaids/merges/{fdTransactionId}/void:
    post:
      x-group-name: Prepaid Services
      x-proxy-name: Cancel Merge Transaction
      tags:
      - merge
      summary: Void of a merge transaction
      description: Merge transaction is voided.
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/FdTransactionIdParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidVoidRequest'
        required: true
      responses:
        200:
          description: Voided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidVoid'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

  /v1/prepaids/transactions:
    post:
      deprecated: true
      x-group-name: Prepaid Services
      x-proxy-name: Retrieve Transactions on a Prepaid Card
      tags:
      - transaction
      description: Service to retrieve transactions on a vaulted Prepaid Card from the host
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/ClientRequestIdParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidAccountRequest'
            examples:
              Vaulted Card: {summary: Request with vaulted card, $ref: '#/components/examples/VaultedCardTransactionHistoryRequest'}
              Plain Card: {summary: Request with plain card, $ref: '#/components/examples/PlainCardTransactionHistoryRequest'}
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                title: TransactionList
                type: array
                items:
                  $ref: '#/components/schemas/PrepaidTransaction'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        409:
          $ref: '#/components/responses/Conflict'
        500:
          $ref: '#/components/responses/ServerError'

  /v1/prepaids/txn-history:
    post:
      x-group-name: Prepaid Services
      x-proxy-name: Get Prepaid Card Transaction Details
      tags:
      - transaction
      description: This service is to retrieve transactions on a vaulted prepaid card from the host.
      parameters:
      - $ref: '#/components/parameters/ApiKeyParam'
      - $ref: '#/components/parameters/TimestampParam'
      - $ref: '#/components/parameters/AuthorizationParam'
      - $ref: '#/components/parameters/ClientTokenParam'
      - $ref: '#/components/parameters/ClientRequestIdParam'
      - $ref: '#/components/parameters/AcceptLanguageParam'
      - $ref: '#/components/parameters/PageNumberParam'
      - $ref: '#/components/parameters/PageSizeParam'
      - $ref: '#/components/parameters/StartDateParam'
      - $ref: '#/components/parameters/EndDateParam'
      - $ref: '#/components/parameters/SubMerchantIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrepaidAccountRequest'
            examples:
              Vaulted Card: {summary: Request with vaulted card, $ref: '#/components/examples/VaultedCardTransactionHistoryRequest'}
              Plain Card: {summary: Request with plain card, $ref: '#/components/examples/PlainCardTransactionHistoryRequest'}
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrepaidTxnSearchResult'
              examples:
                vaulted Card:
                  summary: Cancel response using Merchant Transaction ID
                  $ref: '#/components/examples/VaultedCardTransactionHistoryResponse'
                Plain card:
                  summary: Cancel response using Merchant Transaction ID
                  $ref: '#/components/examples/PlainCardTransactionHistoryResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        500:
          $ref: '#/components/responses/ServerError'

components:
  schemas:
    #-------------------------------------
    # Operational Models
    #-------------------------------------
    LoadFundsRequest:
      type: object
      properties:
        fdCustomerId:
          $ref: '#/components/schemas/FdCustomerId'
        membership:
          $ref: '#/components/schemas/Membership'
        externalCustomerId:
          $ref: '#/components/schemas/ExternalCustomerId'
        transaction:
          $ref: '#/components/schemas/LoadFundsPurchase'
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
      description: Reload a Prepaid Account Request

    LoadMultiFundsRequest:
      type: object
      properties:
        fdCustomerId:
          $ref: '#/components/schemas/FdCustomerId'
        membership:
          $ref: '#/components/schemas/Membership'
        externalCustomerId:
          $ref: '#/components/schemas/ExternalCustomerId'
        parentExternalId:
          type: string
          description: External transaction id reference
        merchantTransactionId:
          type: string
          description: Merchant transaction id
        merchantId:
          type: string
          description: Merchant identifier where the transaction is being performed.
          example: M117008616001
        altMerchantId:
          type: string
          description: Alternate Merchant identifier where the transaction is being performed.
          example: "23232"
        merchantTerminalId:
          type: string
          description: Merchant terminal identifier
        purchaseInfo:
          $ref: '#/components/schemas/PurchaseInfo'
        replayCount:
          type: number
          description: Indicates request retry attempt count.
        postDate:
          type: string
          description: Settlement date for the transaction. Format- MMDDYYYY
          format: date
        hostExtraInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/LoadFundsPurchase'
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
      description: Reload a Prepaid Account Requests

    MergeAccountsRequest:
      type: object
      properties:
        fdCustomerId:
          $ref: '#/components/schemas/FdCustomerId'
        externalCustomerId:
          $ref: '#/components/schemas/ExternalCustomerId'
        transaction:
          $ref: '#/components/schemas/MergeBalanceTransaction'
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
      description: Merge a Accounts Request

    PrepaidAggregateRequest:
      type: object
      properties:
        fdCustomerId:
          $ref: '#/components/schemas/FdCustomerId'
        membership:
          $ref: '#/components/schemas/Membership'
        externalCustomerId:
          $ref: '#/components/schemas/ExternalCustomerId'
        groupNames:
          minItems: 0
          type: array
          items:
            type: string
        transaction:
          $ref: '#/components/schemas/PrepaidPurchase'
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
      description: Prepaid Aggregate Request

    PrepaidAccountRequest:
      type: object
      properties:
        fdCustomerId:
          $ref: '#/components/schemas/FdCustomerId'
        membership:
          $ref: '#/components/schemas/Membership'
        externalCustomerId:
          $ref: '#/components/schemas/ExternalCustomerId'
        transaction:
          $ref: '#/components/schemas/PrepaidPurchase'
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
      description: Purchase a Prepaid Account Request

    PrepaidDeductRequest:
      type: object
      properties:
        fdCustomerId:
          $ref: '#/components/schemas/FdCustomerId'
        membership:
          $ref: '#/components/schemas/Membership'
        externalCustomerId:
          $ref: '#/components/schemas/ExternalCustomerId'
        transaction:
          $ref: '#/components/schemas/PrepaidDeduct'
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
      description: Deduct a Prepaid Account Request

    PrepaidMultiAccountRequest:
      type: object
      properties:
        fdCustomerId:
          $ref: '#/components/schemas/FdCustomerId'
        membership:
          $ref: '#/components/schemas/Membership'
        parentExternalId:
          type: string
          description: External transaction id reference
        merchantTransactionId:
          type: string
          description: Merchant transaction id
        merchantId:
          type: string
          description: Merchant identifier where the transaction is being performed.
          example: M117008616001
        altMerchantId:
          type: string
          description: Alternate Merchant identifier where the transaction is being performed.
          example: "23232"
        merchantTerminalId:
          type: string
          description: Merchant terminal identifier
        externalCustomerId:
          $ref: '#/components/schemas/ExternalCustomerId'
        purchaseInfo:
          $ref: '#/components/schemas/PurchaseInfo'
        replayCount:
          type: number
          description: Indicates request retry attempt count.
        postDate:
          type: string
          description: Settlement date for the transaction. Format- MMDDYYYY
          format: date
        hostExtraInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/PrepaidPurchase'
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
      description: Purchase Multiple Prepaid Account Request

    PrepaidSweepRequest:
      type: object
      properties:
        fdCustomerId:
          $ref: '#/components/schemas/FdCustomerId'
        membership:
          $ref: '#/components/schemas/Membership'
        externalCustomerId:
          $ref: '#/components/schemas/ExternalCustomerId'
        transaction:
          $ref: '#/components/schemas/PrepaidSweep'
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
      description: Sweep a Prepaid Account Request

    PrepaidVoidRequest:
      type: object
      properties:
        fdCustomerId:
          $ref: '#/components/schemas/FdCustomerId'
        membership:
          $ref: '#/components/schemas/Membership'
        externalCustomerId:
          $ref: '#/components/schemas/ExternalCustomerId'
        transaction:
          $ref: '#/components/schemas/PrepaidVoid'
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
      description: Purchase a Prepaid Account Request

    PrepaidMultiDeductRequest:
      type: object
      properties:
        fdCustomerId:
          $ref: '#/components/schemas/FdCustomerId'
        membership:
          $ref: '#/components/schemas/Membership'
        externalCustomerId:
          $ref: '#/components/schemas/ExternalCustomerId'
        parentExternalId:
          type: string
          description: External transaction id reference
        merchantTransactionId:
          type: string
          description: Merchant transaction id
        merchantId:
          type: string
          description: Merchant identifier where the transaction is being performed.
          example: M117008616001
        altMerchantId:
          type: string
          description: Alternate Merchant identifier where the transaction is being performed.
          example: "23232"
        merchantTerminalId:
          type: string
          description: Merchant terminal identifier
        purchaseInfo:
          $ref: '#/components/schemas/PurchaseInfo'
        replayCount:
          type: number
          description: Indicates request retry attempt count.
        postDate:
          type: string
          description: Settlement date for the transaction. Format- MMDDYYYY
          format: date
        hostExtraInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/PrepaidDeduct'
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
      description: Multiple Prepaid Deduct Request

    PrepaidMultiSweepRequest:
      type: object
      properties:
        fdCustomerId:
          $ref: '#/components/schemas/FdCustomerId'
        membership:
          $ref: '#/components/schemas/Membership'
        externalCustomerId:
          $ref: '#/components/schemas/ExternalCustomerId'
        parentExternalId:
          type: string
          description: External transaction id reference
        merchantTransactionId:
          type: string
          description: Merchant transaction id
        merchantId:
          type: string
          description: Merchant identifier where the transaction is being performed.
          example: M117008616001
        altMerchantId:
          type: string
          description: Alternate Merchant identifier where the transaction is being performed.
          example: "23232"
        merchantTerminalId:
          type: string
          description: Merchant terminal identifier
        purchaseInfo:
          $ref: '#/components/schemas/PurchaseInfo'
        replayCount:
          type: number
          description: Indicates request retry attempt count.
        postDate:
          type: string
          description: Settlement date for the transaction. Format- MMDDYYYY
          format: date
        hostExtraInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/PrepaidSweep'
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
      description: Multiple Prepaid Sweep Request

    PrepaidMultiVoidRequest:
      type: object
      properties:
        fdCustomerId:
          $ref: '#/components/schemas/FdCustomerId'
        membership:
          $ref: '#/components/schemas/Membership'
        externalCustomerId:
          $ref: '#/components/schemas/ExternalCustomerId'
        parentExternalId:
          type: string
          description: External transaction id reference
        merchantTransactionId:
          type: string
          description: Merchant transaction id
        purchaseInfo:
          $ref: '#/components/schemas/PurchaseInfo'
        replayCount:
          type: number
          description: Indicates request retry attempt count.
        operationType:
          $ref: '#/components/schemas/OperationType'
        postDate:
          type: string
          description: Settlement date for the transaction. Format- MMDDYYYY
          format: date
        hostExtraInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/PrepaidVoid'
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'
      description: Purchase Multiple Prepaid Void Request

    VoidRequest:
      type: object
      properties:
        fdCustomerId:
          $ref: '#/components/schemas/FdCustomerId'
        membership:
          $ref: '#/components/schemas/Membership'
        externalCustomerId:
          $ref: '#/components/schemas/ExternalCustomerId'
        deviceInfo:
          $ref: '#/components/schemas/DeviceInfo'

    #-------------------------------------
    # Resource Models
    #-------------------------------------
    ACH:
      type: object
      properties:
        accountNumber:
          type: string
          description: Unique number identifying the ACH account provided by Financial institution.
          example: "92658250156"
        routingNumber:
          type: string
          description: Number to identify the financial institution
          example: "999999999"
        secCode:
          type: string
          description: SEC Code is optional data, It is specifically required for ACH account which is ruled by NACHA compliance.
        cardNumber:
          type: string
          description: ACH Card number, can only be sent when vaulting an account.  This field will NOT be present in responses.
          example: "9111111111111111"
        cardType:
          $ref: '#/components/schemas/AchCardType'
        securityCode:
          type: string
          description: Code to validate the ACH account, like micro deposit or security code.
          example: "278356"
        alias:
          type: string
          description: Last four values of the cardNumber
          readOnly: true
          example: "1111"
        enrollmentStatus:
          $ref: '#/components/schemas/AchEnrollmentStatus'
        enrollmentSubStatuses:
          type: array
          items:
            $ref: '#/components/schemas/AchEnrollmentSubStatus'
        accountType:
          $ref: '#/components/schemas/AchAccountType'
        bankName:
          type: string
          description: Name of the bank associated with the ACH account
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        assetProvider:
          $ref: '#/components/schemas/AssetProvider'
      description: Information about an ACH account

    Address:
      type: object
      properties:
        type:
          type: string
          description: Canonical type values of "work", "home", and "other".
          example: work
        streetAddress:
          type: string
          description: The full street address component, which may include house number, street name, P.O. box, and multi-line extended street address information.
          example: 100 Universal City Plaza
        locality:
          type: string
          description: The city or locality component.
          example: Hollywood
        region:
          type: string
          description: The state or region component.
          example: CA
        postalCode:
          type: string
          description: The zip code or postal code component.
          example: "91608"
        country:
          type: string
          description: The country name component.  When specified, the value MUST be in ISO 3166-1 "alpha-2" code format; e.g., the United States and Sweden are "US" and "SE", respectively.
          example: US
        formatted:
          type: string
          description: The full mailing address, formatted for display or use with a mailing label.
          example: 100 Universal City Plaza, Hollywood, CA 91608 US
        primary:
          type: boolean
          description: Indicates if this is the default address for the associated resource. It only has meaning when used in a set or array of addresses.
          example: true
      description: A physical mailing address for this user.

    AmazonPay:
      type: object
      properties:
        token:
          type: string
          example: 292bb6b886fc4446894f878b7e32bd5e
        chargeId:
          type: string
          example: 73883992djj39939djj929992jj08838
        chargeReferenceId:
          type: string
          example: 8jdw838dhhskk9299299299ueuuue838
        credit:
          $ref: '#/components/schemas/Credit'

    AndroidPay:
      type: object
      properties:
        data:
          type: string
          example: 3CguW5ecfTzO...03d
        signature:
          type: string
          example: MIAGCSqGSIb......AAAA==
        decryptAlias:
          type: string
          description: field of the public key certificate.
          example: oslo.com.xxx.Prod_mer
        dPanLast4:
          type: string
          example: "9876"
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        header:
          type: object
          properties:
            ephemeralPublicKey:
              type: string
              example: MFkwEw...03d
            publicKeyHash:
              type: string
              example: +vbONw...IM=
        token:
          $ref: '#/components/schemas/ReferenceToken'
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'

    ApplePay:
      type: object
      properties:
        version:
          type: string
          example: EC_v1
        developerEmail:
          type: string
        signature:
          type: string
          example: MIAGCSqGSIb......AAAA==
        decryptAlias:
          type: string
          description: field of the public key certificate.
          example: oslo.com.xxx.Prod_mer
        data:
          type: string
          example: 3CguW5ecfTz...Yuhw=
        applicationData:
          type: string
          example: VEVTVA==
        dPanLast4:
          type: string
          example: "9876"
        bin:
          type: string
        eciIndicator:
          type: string
        xid:
          type: string
        cavv:
          type: string
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        panType:
          type: string
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        header:
          type: object
          properties:
            applicationDataHash:
              type: string
            ephemeralPublicKey:
              type: string
              example: MFkwEwYHKoZIzj0CIKoZIz.....NBQQ==
            publicKeyHash:
              type: string
              example: +vbONwRlVqJX0........
            transactionId:
              type: string
              example: 3827c5a02638.....34d50
        token:
          $ref: '#/components/schemas/ReferenceToken'
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'

    Authorization:
      type: object
      properties:
        authorizationId:
          type: string
          description: Unique identifier for the payment authorization.
          example: 8a34843d4f2acc91014f2dc1e85e0122
        transactionTime:
          type: string
          description: Transaction date time value.
          format: date-time
          readOnly: true
          example: 2017-03-21T08:15:30-05:00
      description: Information related to the authorization transaction on the source card.

    AggregateBalanceTransactionInfo:
      type: object
      properties:
        totalBalance:
          type: number
          description: sum of prepaid card in lower denomination of the currency.
        groupBalances:
          type: array
          items:
            $ref: '#/components/schemas/GroupPrepaidBalanceInfo'
      description: Prepaid balance transaction response.

    AssetProvider:
      type: object
      properties:
        providerName:
          type: string
          example: coinbase

    BalanceInfo:
      required:
      - currencyCode
      - currentBalance
      type: object
      properties:
        currentBalance:
          type: number
          description: The current balance of prepaid card in lower denomination of the currency.
        beginBalance:
          type: number
          description: The balance of prepaid card before a transaction in lower denomination of the currency.
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'
        currencyType:
          $ref: '#/components/schemas/CurrencyPairType'
      description: Details of balance in the prepaid card.
      example:
        currentBalance: 1100
        beginBalance: 1000

    Bancontact:
      type: object
      properties:
        returnUrl:
          type: string
        deepLink:
          type: string
        alias:
          type: string
          example: "9876"
        cardType:
          $ref: '#/components/schemas/CreditCardType'

    Credit:
      type: object
      properties:
        cardNumber:
          type: string
          description: Primary account number, can only be sent when vaulting an account. This field will NOT be present in responses.
          example: "4111111111111111"
        bin:
          type: string
        nameOnCard:
          type: string
          description: Name as printed on physical card or on virtual account
          example: John Smith
        alias:
          type: string
          description: Last four values of the cardNumber
          readOnly: true
          example: "1111"
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        cardSubType:
          type: string
          description: Merchant or brand specific information about the type of account
          example: ABCD
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        securityCode:
          type: string
          example: "444"
        sequenceNumber:
          type: string
          description: Applicable only for private-label accounts
          example: "01"
        token:
          $ref: '#/components/schemas/ReferenceToken'
        tokens:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/ReferenceToken'
      description: Information on a credit account

    DynamicDescriptors:
      type: object
      properties:
        merchantCategoryCode:
          type: string
          description: Merchant category code
        merchantName:
          type: string
          description: Merchant name
        merchantEmail:
          $ref: '#/components/schemas/Email'
        customerServiceNumber:
          $ref: '#/components/schemas/Phone'
        serviceEntitlementNumber:
          type: string
          description: Service entitlement number
        merchantAddress:
          $ref: '#/components/schemas/Address'

    EBT:
      type: object
      properties:
        cardNumber:
          type: string
          description: Primary account number, can only be sent when vaulting an account.  This field will NOT be present in responses.
        nameOnCard:
          type: string
          description: Name as printed on physical card or on virtual account
        alias:
          type: string
          description: Last four values of the cardNumber
          readOnly: true
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        bin:
          type: string
          description: BIN of EBT card
          readOnly: true
        pin:
          type: string
          description: PIN for EBT card
        pinCaptureId:
          type: string
          description: Session id used on client side SDK to capture the card pin
        transactionId:
          type: string
          description: The unique transaction ID
        balance:
          $ref: '#/components/schemas/EBTBalance'
        metadata:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
        token:
          $ref: '#/components/schemas/ReferenceToken'
      description: Electronic Benefits Transfer card information

    EBTBalance:
      type: object
      properties:
        cashBalance:
          type: number
        cashCurrencyCode:
          $ref: '#/components/schemas/ISO-4217'
        snapBalance:
          type: number
        snapCurrencyCode:
          $ref: '#/components/schemas/ISO-4217'

    Email:
      type: object
      properties:
        type:
          type: string
          description: The "type" sub-attribute is used to provide a classification meaningful to the (human) user.  The user interface should encourage the use of basic values of "work", "home", and "other" and MAY allow additional type values to be used at the discretion of the service client.
          example: work
        value:
          type: string
          description: The value SHOULD be specified according to RFC5321.
          example: bjensen@example.com
        primary:
          type: boolean
          description: Defines if this entry is to be used as the primary or default for the user.
          default: false
      description: Email address for the user.

    ExpiryDate:
      type: object
      properties:
        month:
          maxLength: 2
          minLength: 2
          pattern: '[0-9]{2,2}'
          type: string
          description: Month format 'MM'
          example: "09"
        year:
          maxLength: 2
          minLength: 2
          pattern: '[0-9]{2,2}'
          type: string
          description: Year format 'YY'
          example: "20"
        singleValue:
          maxLength: 6
          minLength: 4
          type: string
          description: Month and year together, 'MMYY' or 'MMYYYY'.  If the latter format, the string will be parsed and validated per the given format.  Any other format will be rejected.
      description: Contains account expiration data and needs to either send the values in individual fields OR as a singleValue.

    ExternalCustomerId:
      title: External Customer ID
      type: string
      description: External customer id.

    FdCustomerId:
      title: FD Customer ID
      type: string
      description: FD customer identifier tied to the vaulted accounts.
      example: cuid-0987613457398475

    FundingInfo:
      type: object
      properties:
        fundValue:
          type: number
          description: Requested fund amount for the gift card.
          example: 100.0
        approvedAmount:
          type: number
          description: Approved fund amount for the gift card.
          readOnly: true
          example: 100.0
        isFullDeduction:
          type: boolean
          description: Flag that indicates if the full amount needs to be cashed out
        isMerchantFunded:
          type: boolean
          description: Flag that indicates if the source of the payment is funded by merchant vs customer
        isPartialTransactionAllowed:
          type: boolean
          description: Flag that indicates if partial transaction is allowed or not
        merchantFundId:
          type: string
          description: Merchant account identifier which will be used for funding the prepaid card transactions.
          example: M11AC8616001
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'
        fundingSource:
          $ref: '#/components/schemas/FundingSource'
      description: Source of funding to purchase or reload the value of a prepaid account.

    FundingSource:
      type: object
      properties:
        saveToVault:
          type: boolean
          description: Flag to indicate if the destination account should be stored in the secure vault.
          example: false
          default: false
        type:
          $ref: '#/components/schemas/FundingSourceType'
        vaultedAccount:
          $ref: '#/components/schemas/VaultedAccount'
        credit:
          $ref: '#/components/schemas/Credit'
        prepaid:
          $ref: '#/components/schemas/Prepaid'
        applePay:
          $ref: '#/components/schemas/ApplePay'
        androidPay:
          $ref: '#/components/schemas/AndroidPay'
        samsungPay:
          $ref: '#/components/schemas/SamsungPay'
        paypal:
          $ref: '#/components/schemas/Paypal'
        token:
          $ref: '#/components/schemas/ReferenceToken'
        visaCheckout:
          $ref: '#/components/schemas/VisaCheckout'
        googlePay:
          $ref: '#/components/schemas/GooglePay'
        masterpass:
          $ref: '#/components/schemas/MasterPass'
        ach:
          $ref: '#/components/schemas/ACH'
        venmo:
          $ref: '#/components/schemas/Venmo'
        vipps:
          $ref: '#/components/schemas/Vipps'
        amazonPay:
          $ref: '#/components/schemas/AmazonPay'
        ideal:
          $ref: '#/components/schemas/Ideal'
        bancontact:
          $ref: '#/components/schemas/Bancontact'
        walmartPay:
          $ref: '#/components/schemas/WalmartPay'
        ebt:
          $ref: '#/components/schemas/EBT'
      description: Holds information about funding source for the payment transaction. Can hold only one above the provided funding sources.

    GooglePay:
      type: object
      properties:
        version:
          type: string
          description: Identifies encryption/signing scheme.
          example: EC_v1
        developerEmail:
          type: string
        signature:
          type: string
          description: Signature to verify Google initiated message.
          example: MIAGCSqGSIb......AAAA==
        data:
          type: string
          description: Data includes encryptedMessage, ephemeralPublicKey, tag.
          example: '{"encryptedMessage":"8nx...u003d","ephemeralPublicKey":"BGH...u003d","tag":"nvm...\u003d"}'
        dPanLast4:
          type: string
          example: "9876"
        bin:
          type: string
        eciIndicator:
          type: string
        xid:
          type: string
        cavv:
          type: string
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        panType:
          type: string
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        token:
          $ref: '#/components/schemas/ReferenceToken'
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'
      description: Google Payment specific information

    GroupPrepaidBalanceInfo:
      type: object
      properties:
        groupName:
          type: string
          description: Identifies encryption/signing scheme.
        groupBalance:
          type: number
          description: sum of prepaid card in lower denomination of the currency.
        balances:
          type: array
          items:
            $ref: '#/components/schemas/PrepaidBalanceInfo'
      description: Group prepaid balance information

    Ideal:
      type: object
      properties:
        returnUrl:
          type: string
        deepLink:
          type: string

    ISO-4217:
      type: object
      properties:
        code:
          type: string
          default: USD
        number:
          type: integer
        digits:
          type: integer
        currency:
          type: string
          default: US Dollar
      description: ISO 4217 currency format in which the balance is represented.
      example:
        code: USD
        number: 840
        digits: 2
        currency: US Dollar

    Link:
      required:
      - href
      - rel
      type: object
      properties:
        href:
          type: string
          description: URL to linked resource.
          format: uri
          example: https://api.example.com/v1/customers/cust-id-123456/accounts/acct-id-123456
        rel:
          type: string
          description: Defines the type of link relationship to current resource.
          example: linked.account
        method:
          type: string
          description: Defines the HTTP method for the given href.
          example: GET
          default: GET
        id:
          type: string
          description: Identifier to the resource.
          example: 415e5cf6bfdb11e8a355529269fb1459
      description: Model to communicate linked resources.

    LoadMultiFundsPurchase:
      type: object
      properties:
        parentTransactionId:
          type: string
          description: Unique identifier of multi load transaction.
          readOnly: true
          example: 485-27834-285903824-095
        merchantTransactionId:
          type: string
          description: Merchant transaction id
        createdTime:
          type: string
          description: Prepaid Card creation date time value.
          format: date-time
          readOnly: true
          example: 2017-03-21T08:15:30-05:00
        parentExternalId:
          type: string
          description: External transaction id reference
        purchaseInfo:
          $ref: '#/components/schemas/PurchaseInfo'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/LoadFundsPurchase'
      description: Information related to Fund load operation.

    LoadFundsPurchase:
      required:
      - destinationCard
      - fundingInfo
      type: object
      properties:
        transactionId:
          type: string
          description: Unique identifier for this purchasing transaction.
          readOnly: true
          example: 485-27834-285903824-095
        saveToVault:
          type: boolean
          description: Flag to indicate if the destination card should be vaulted to a secure repository for future use for the given customer.
          default: false
        dynamicDescriptors:
          $ref: '#/components/schemas/DynamicDescriptors'
        status:
          $ref: '#/components/schemas/PrepaidStatus'
        destinationCard:
          type: object
          properties:
            account:
              $ref: '#/components/schemas/Prepaid'
            vaultedAccount:
              $ref: '#/components/schemas/VaultedAccount'
            balanceInfo:
              $ref: '#/components/schemas/PrepaidBalance'
          description: Information related to the account receiving the funds.
        fundingInfo:
          $ref: '#/components/schemas/FundingInfo'
        purchaseInfo:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/PurchaseInfo'
        postDate:
          type: string
          description: Settlement date for the transaction. Format- MMDDYYYY
          format: date
        merchantId:
          type: string
          description: Merchant identifier where the transaction is being performed.
          example: M117008616001
        storeId:
          type: string
          description: Store identifier where the transaction is being performed.
          example: "123456"
        merchantTokenCode:
          type: string
          description: Merchant token code used for token generation
        merchantTerminalId:
          type: string
          description: Merchant terminal identifier
        externalId:
          type: string
          description: External transaction id reference
        merchantTransactionId:
          type: string
          description: Merchant transaction id
        supplements:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/Supplement'
        hostExtraInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
        threeDSecureInfo:
          $ref: '#/components/schemas/ThreeDSecure'
        errorInfo:
          $ref: '#/components/schemas/Error'
      description: Information related to Fund load operation.

    NVP:
      title: Name and Value pair.
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        valueAsList:
          minItems: 0
          type: array
          items:
            type: string

    MasterPass:
      type: object
      properties:
        transactionId:
          type: string
          description: Identifier corresponding to an account enrolled with MasterPass system.
          example: "1234732704291071701"
        credit:
          $ref: '#/components/schemas/Credit'
      description: MasterPass information

    Membership:
      type: object
      properties:
        membershipType:
          type: string
        membershipId:
          type: string
        membershipProgramId:
          type: string
        membershipStatus:
          type: string
        membershipExpiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        accountNumber:
          type: string
        securityCode:
          type: string
        merchantId:
          type: string
          description: Merchant identifier for which the request has been initiated.
          example: M117008616001
        altMerchantId:
          type: string
          description: Alternate Merchant identifier for which the request has been initiated.
        merchantTerminalId:
          type: string
          description: Merchant terminal identifier
        verifyAccount:
          type: boolean
        additionalInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
      description: Membership information for the user.

    MergeBalanceTransaction:
      type: object
      properties:
        transactionId:
          type: string
          description: Unique identifier for this purchasing transaction.
          readOnly: true
          example: 485-27834-285903824-095
        status:
          $ref: '#/components/schemas/PrepaidStatus'
        activateVirtualCard:
          type: boolean
          description: Indicates whether uCom needs to activate a destination account
          example: true
        dynamicDescriptors:
          $ref: '#/components/schemas/DynamicDescriptors'
        purchaseInfo:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/PurchaseInfo'
        source:
          type: object
          properties:
            account:
              $ref: '#/components/schemas/Prepaid'
            vaultedAccount:
              $ref: '#/components/schemas/VaultedAccount'
            authorization:
              $ref: '#/components/schemas/Authorization'
          description: Information related to the Source account.
        destination:
          type: object
          properties:
            account:
              $ref: '#/components/schemas/Prepaid'
            vaultedAccount:
              $ref: '#/components/schemas/VaultedAccount'
            balanceInfo:
              $ref: '#/components/schemas/PrepaidBalance'
          description: Information related to the Destination account.
        supplements:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/Supplement'
        hostExtraInfo:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/NVP'
      description: Information related to balance merge operation

    Order:
      required:
      - orderId
      type: object
      properties:
        orderId:
          type: string
          description: Client provided unique identifier for the order related to the requested authorization
          example: Order001
        altOrderId:
          type: string
          description: Alternate order id
        orderType:
          type: string
          description: Type of the order
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Email'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        phoneNumbers:
          type: array
          items:
            $ref: '#/components/schemas/Phone'
      description: Information about the order details

    OfferStatus:
      type: object
      properties:
        code:
          type: string
          description: Indicates offer status code, NOT_ACTIVATED | ACTIVATED | REDEEMED | DECLINED | CANCELLED | FAILED
        statusInfo:
          minItems: 0
          uniqueItems: true
          type: array
          description: Details about what to display, images, messaging, etc.
          items:
            $ref: '#/components/schemas/NVP'
      description: Maintain the status of stackable promotions

    PageLink:
      type: object
      properties:
        firstPage:
          type: boolean
          description: Indicates if the list contains first page data
        lastPage:
          type: boolean
          description: Indicates if the list contains last page data
          example: false
        currentPage:
          type: integer
          description: Current page number
          example: 1
        currentPageRecords:
          type: integer
          description: Number of records in current page
          example: 25
        totalPages:
          type: integer
          example: 2
        totalRecords:
          type: integer
          example: 27
        sortOrder:
          type: string
          example: asc
          default: asc
          enum:
          - asc
          - desc
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
      description: Page link information.

    Paypal:
      type: object
      properties:
        payerId:
          type: string
          description: Paypal generated Unique identifier for a Paypal account.
          example: LPLWNMTBWMFAY
        nonce:
          type: string
          description: Paypal generated nonce.
          example: ab12-124C-ab12-124C-ab12-124C
        credit:
          $ref: '#/components/schemas/Credit'
      description: Information about a Paypal account.
    Phone:
      type: object
      properties:
        value:
          type: string
          description: The value SHOULD be specified according to the format defined in RFC3966, e.g., 'tel:+1-201-555-0123'.
          example: 555-555-5555
        type:
          type: string
          description: Often has typical values of "work","billing", "home", "mobile", "fax", "pager", and "other" and MAY allow more types to be defined by the service client.
          example: billing 
        extension:
          type: string
          description: Defines the extension of the phone number.
          example: "2145"
        primary:
          type: boolean
          description: Defines if this entry is to be used as the primary or default for the user.
          default: false
      description: Phone number for the user.
      
    POSItem:
      type: object
      properties:
        itemDescription:
          type: string
          example: Standard Wash (or) Unleaded Petrol
        itemPrice:
          type: number
          format: double
          example: 7.5
        unitOfMeasurement:
          type: string
          example: each
        unitsSold:
          type: number
          format: double
          example: 1.0
        totalItemSaleAmount:
          type: number
          format: double
          example: 7.5
        originalItemPrice:
          type: number
          format: double
          example: 7.5
        originalTotalSaleAmount:
          type: number
          format: double
          example: 7.5
        posCodeFormat:
          type: string
          example: plu
        posCode:
          type: string
          example: "102"
        posCodeModifier:
          type: string
          example: "1"
        productCode:
          type: string
          example: "102"
        tax:
          type: array
          items:
            $ref: '#/components/schemas/TaxDetails'
        type:
          $ref: '#/components/schemas/POSItemType'
        serviceLevelCode:
          $ref: '#/components/schemas/ServiceLevelCode'
        priceAdjustments:
          type: array
          items:
            $ref: '#/components/schemas/PriceAdjustment'
        washCodes:
          type: array
          items:
            $ref: '#/components/schemas/WashCode'
        priceTier:
          type: string
      description: Structure to support passing POS sale info as part of the sale request.

    Prepaid:
      type: object
      properties:
        cardNumber:
          type: string
          description: Prepaid card number.
          example: "6759649826438453"
        cardSubType:
          type: string
          description: Merchant or brand specific information about the type of account.Issuer/group information.
          example: Merchant Brand
        securityCode:
          type: string
          description: Security code of prepaid card
          example: "345"
        alias:
          type: string
          readOnly: true
          example: "8453"
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        merchantId:
          type: string
          description: Merchant identifier for prepaid transaction.
          example: M117008616001
        altMerchantId:
          type: string
          description: Alternate Merchant identifier for prepaid transaction.
          example: "23232"
        merchantTerminalId:
          type: string
          description: Merchant terminal identifier
        promotionCode:
          type: string
          description: Promotion code for prepaid account activation.
        isEANRequired:
          type: boolean
          example: true
        balance:
          $ref: '#/components/schemas/PrepaidBalance'
        ebtBalance:
          $ref: '#/components/schemas/EBTBalance'
        vaultedAccount:
          $ref: '#/components/schemas/VaultedAccount'
        token:
          $ref: '#/components/schemas/ReferenceToken'
      description: Prepaid (a.k.a. gift) account information

    PrepaidBalance:
      required:
      - currencyCode
      - currentBalance
      type: object
      properties:
        currentBalance:
          type: number
          description: The current balance of prepaid card in lower denomination of the currency.
          example: 1000.0
        beginBalance:
          type: number
          description: The balance of prepaid card before a transaction in lower denomination of the currency.
          example: 1100.0
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'
        currencyType:
          $ref: '#/components/schemas/CurrencyPairType'
      description: Details of balance in the prepaid card.

    PrepaidBalanceInfo:
      type: object
      properties:
        prepaid:
          $ref: '#/components/schemas/Prepaid'
        balanceStatus:
          $ref: '#/components/schemas/BalanceStatus'
        hostExtraInfo:
          minItems: 0
          uniqueItems: true
          type: array
          description: Key value pairs providing additional details from host on the balance retrieval. Key 'host.account.status' will provide current account status from the host. Key 'host.transaction.status' will provide the transaction result as success or failure. Key 'host.transaction.error' will provide error message from Host if transaction status is failure
          items:
            $ref: '#/components/schemas/NVP'

    PrepaidBalanceTransactionInfo:
      type: object
      properties:
        requestId:
          type: string
          description: Unique identifier of request used to retrieve balance.
          readOnly: true
          example: 485-27834-285903824-095
        requestStatus:
          $ref: '#/components/schemas/RequestStatus'
        createdDateTime:
          type: string
          description: Date and time of resource creation.
          format: date-time
          readOnly: true
          example: 2016-04-16T16:06:05Z
        lastUpdatedDateTime:
          type: string
          description: Last updated Date and time of resource.
          format: date-time
          readOnly: true
          example: 2016-04-16T16:06:05Z
        totalBalance:
          type: number
          description: sum of prepaid card in lower denomination of the currency.
        balances:
          type: array
          items:
            $ref: '#/components/schemas/PrepaidBalanceInfo'
      description: Prepaid balance transaction response.

    PrepaidDeduct:
      required:
      - fundingInfo
      type: object
      properties:
        transactionId:
          type: string
          description: Unique identifier for this deduct transaction.
          example: 485-27834-285903824-095
        dynamicDescriptors:
          $ref: '#/components/schemas/DynamicDescriptors'
        status:
          $ref: '#/components/schemas/PrepaidStatus'
        account:
          $ref: '#/components/schemas/Prepaid'
        fundingInfo:
          $ref: '#/components/schemas/FundingInfo'
        merchantId:
          type: string
          description: Merchant identifier where the transaction is being performed.
          example: M117008616001
        storeId:
          type: string
          description: Store identifier where the transaction is being performed.
          example: "123456"
        externalId:
          type: string
          description: External transaction id reference
        merchantTransactionId:
          type: string
          description: Merchant transaction id
        postDate:
          type: string
          description: Settlement date for the transaction. Format- MMDDYYYY
          format: date
        purchaseInfo:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/PurchaseInfo'
        supplements:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/Supplement'
        hostExtraInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
        threeDSecureInfo:
          $ref: '#/components/schemas/ThreeDSecure'
        errorInfo:
          $ref: '#/components/schemas/Error'
      description: Details about deducting a prepaid (gift) card.

    PrepaidMultiPurchase:
      type: object
      properties:
        parentTransactionId:
          type: string
          description: Unique identifier of multi transaction.
          readOnly: true
          example: 485-27834-285903824-095
        merchantTransactionId:
          type: string
          description: Merchant transaction id
        createdTime:
          type: string
          description: Prepaid Card creation date time value.
          format: date-time
          readOnly: true
          example: 2017-03-21T08:15:30-05:00
        parentExternalId:
          type: string
          description: External transaction id reference
        purchaseInfo:
          $ref: '#/components/schemas/PurchaseInfo'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/PrepaidPurchase'
      description: Multi prepaid transaction details.

    PrepaidPurchase:
      required:
      - fundingInfo
      type: object
      properties:
        transactionId:
          type: string
          description: Unique identifier for this purchasing transaction.
          readOnly: true
          example: 485-27834-285903824-095
        saveToVault:
          type: boolean
          description: Flag to indicate if the account should be stored in the secure vault.
          default: true
        dynamicDescriptors:
          $ref: '#/components/schemas/DynamicDescriptors'
        status:
          $ref: '#/components/schemas/PrepaidStatus'
        account:
          $ref: '#/components/schemas/Prepaid'
        merchantId:
          type: string
          description: Merchant identifier where the transaction is being performed.
          example: M117008616001
        storeId:
          type: string
          description: Store identifier where the transaction is being performed.
          example: "123456"
        merchantTokenCode:
          type: string
          description: Merchant token code used for token generation
        merchantTerminalId:
          type: string
          description: Merchant terminal identifier
        externalId:
          type: string
          description: External transaction id reference
        merchantTransactionId:
          type: string
          description: Merchant transaction id
        createdTime:
          type: string
          description: Prepaid Card creation date time value.
          format: date-time
          readOnly: true
          example: 2017-03-21T08:15:30-05:00
        fundingInfo:
          $ref: '#/components/schemas/FundingInfo'
        postDate:
          type: string
          description: Settlement date for the transaction. Format- MMDDYYYY
          format: date
        purchaseInfo:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/PurchaseInfo'
        _links:
          minItems: 0
          uniqueItems: true
          type: array
          description: Link to the account for future reference.
          readOnly: true
          items:
            $ref: '#/components/schemas/Link'
        supplements:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/Supplement'
        hostExtraInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
        threeDSecureInfo:
          $ref: '#/components/schemas/ThreeDSecure'
        errorInfo:
          $ref: '#/components/schemas/Error'
      description: Details about purchasing a prepaid (gift) card.

    PrepaidSweep:
      required:
      - fundingInfo
      type: object
      properties:
        transactionId:
          type: string
          description: Unique identifier for this sweep transaction.
          example: 485-27834-285903824-095
        dynamicDescriptors:
          $ref: '#/components/schemas/DynamicDescriptors'
        status:
          $ref: '#/components/schemas/PrepaidStatus'
        account:
          $ref: '#/components/schemas/Prepaid'
        fundingInfo:
          $ref: '#/components/schemas/FundingInfo'
        merchantId:
          type: string
          description: Merchant identifier where the transaction is being performed.
          example: M117008616001
        storeId:
          type: string
          description: Store identifier where the transaction is being performed.
          example: "123456"
        externalId:
          type: string
          description: External transaction id reference
        merchantTransactionId:
          type: string
          description: Merchant transaction id
        postDate:
          type: string
          description: Settlement date for the transaction. Format- MMDDYYYY
          format: date
        purchaseInfo:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/PurchaseInfo'
        supplements:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/Supplement'
        hostExtraInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
        threeDSecureInfo:
          $ref: '#/components/schemas/ThreeDSecure'
        errorInfo:
          $ref: '#/components/schemas/Error'
      description: Details about sweeping a prepaid (gift) card.

    PrepaidTransaction:
      type: object
      properties:
        amount:
          type: number
          description: Transactional amount in lower denomination of the currency.
          example: 100.0
        currencyCode:
          $ref: '#/components/schemas/ISO-4217'
        info:
          type: string
          description: Informational description about the transaction.
          example: Balance Merge
        transactionTime:
          type: string
          description: Transaction date time value.
          format: date-time
          readOnly: true
          example: 2017-03-21T08:15:30-05:00
        altMerchantId:
          type: string
          description: Alternate MID information
      description: Information related to a transaction on a Prepaid Card.

    PrepaidTxnSearchResult:
      type: object
      properties:
        pages:
          $ref: '#/components/schemas/PageLink'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/PrepaidTransaction'
      description: This object contains site records for lat lag based request.

    PrepaidVoid:
      required:
      - fundingInfo
      type: object
      properties:
        transactionId:
          type: string
          description: Unique identifier for this void transaction.
          example: 485-27834-285903824-095
        dynamicDescriptors:
          $ref: '#/components/schemas/DynamicDescriptors'
        status:
          $ref: '#/components/schemas/PrepaidStatus'
        account:
          $ref: '#/components/schemas/Prepaid'
        fundingInfo:
          $ref: '#/components/schemas/FundingInfo'
        operationType:
          $ref: '#/components/schemas/OperationType'
        merchantId:
          type: string
          description: Merchant identifier where the transaction is being performed.
          example: M117008616001
        storeId:
          type: string
          description: Store identifier where the transaction is being performed.
          example: "123456"
        externalId:
          type: string
          description: External transaction id reference
        merchantTransactionId:
          type: string
          description: Merchant transaction id
        postDate:
          type: string
          description: Settlement date for the transaction. Format- MMDDYYYY
          format: date
        purchaseInfo:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/PurchaseInfo'
        supplements:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/Supplement'
        hostExtraInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
        threeDSecureInfo:
          $ref: '#/components/schemas/ThreeDSecure'
        errorInfo:
          $ref: '#/components/schemas/Error'
      description: Details about voiding a prepaid (gift) card.

    PrepaidMultiDeduct:
      type: object
      properties:
        parentTransactionId:
          type: string
          description: Unique identifier of multi transaction.
          readOnly: true
          example: 485-27834-285903824-095
        merchantTransactionId:
          type: string
          description: Merchant transaction id
        createdTime:
          type: string
          description: Prepaid void creation date time value.
          format: date-time
          readOnly: true
          example: 2017-03-21T08:15:30-05:00
        parentExternalId:
          type: string
          description: External transaction id reference
        purchaseInfo:
          $ref: '#/components/schemas/PurchaseInfo'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/PrepaidDeduct'
      description: Multi prepaid deduct transaction details.

    PrepaidMultiSweep:
      type: object
      properties:
        parentTransactionId:
          type: string
          description: Unique identifier of multi transaction.
          readOnly: true
          example: 485-27834-285903824-095
        merchantTransactionId:
          type: string
          description: Merchant transaction id
        createdTime:
          type: string
          description: Prepaid void creation date time value.
          format: date-time
          readOnly: true
          example: 2017-03-21T08:15:30-05:00
        parentExternalId:
          type: string
          description: External transaction id reference
        purchaseInfo:
          $ref: '#/components/schemas/PurchaseInfo'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/PrepaidSweep'
      description: Multi prepaid sweep transaction details.

    PrepaidMultiVoid:
      type: object
      properties:
        parentTransactionId:
          type: string
          description: Unique identifier of multi transaction.
          readOnly: true
          example: 485-27834-285903824-095
        merchantTransactionId:
          type: string
          description: Merchant transaction id
        createdTime:
          type: string
          description: Prepaid void creation date time value.
          format: date-time
          readOnly: true
          example: 2017-03-21T08:15:30-05:00
        parentExternalId:
          type: string
          description: External transaction id reference
        purchaseInfo:
          $ref: '#/components/schemas/PurchaseInfo'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/PrepaidVoid'
      description: Multi prepaid void transaction details.

    PriceAdjustment:
      type: object
      properties:
        adjustmentId:
          type: string
          example: discount prepay
        productCode:
          type: string
          example: "941"
        programID:
          type: string
          example: P66
        reason:
          type: string
          example: loyaltyOffer
        amount:
          type: number
          format: double
          example: 0.1
        percentage:
          type: number
          format: float
          example: 10.0
        itemPrice:
          type: number
          format: double
          example: 7.5
        unitOfMeasurement:
          type: string
          example: each
        unitsSold:
          type: number
          format: double
          example: 1.0
        rebateLabel:
          type: string
          example: HostDiscount
        maxQuantity:
          type: number
          format: double
          example: 7.5
        offerStatus:
          $ref: '#/components/schemas/OfferStatus'
      description: Structure to support providing price adjustment for sale item.

    PurchaseInfo:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the resource.
        name:
          type: string
          description: Common name for the resource.
        order:
          $ref: '#/components/schemas/Order'
        items:
          type: array
          description: Item(s) for sale at the resource.  Common examples are the car wash packages for sale.
          items:
            $ref: '#/components/schemas/POSItem'
      description: Information about Resources associated with the Transaction.  The common example is the car wash system.

    ReferenceToken:
      type: object
      properties:
        tokenId:
          type: string
          description: Actual token value
          example: 292bb6b886fc4446894f878b7e32bd5e
        tokenProvider:
          type: string
          description: Indicates what system is the originator of the token
          example: TRANS_ARMOR or NETWORK_TOKEN or THIRD_PARTY_NETWORK_TOKEN
        cryptogram:
          type: string
          description: 28 or 56 characters for Visa / Mastercard. 4 characters for Discover / Amex. Required for CIT. Not required for MIT.
          example: 3CguW5ecfTz...Yuhw=
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
      description: Surrogate value used to represent a handle to an account without sharing PCI/PII data to look it up.

    TaxDetails:
      type: object
      properties:
        code:
          type: string
          example: TX01
        description:
          type: string
          example: Sales Tax
        amount:
          type: string
          example: "7.50"
        rate:
          type: string
          example: "13.5"
      description: Tax details.

    ThreeDSecure:
      type: object
      properties:
        transactionId:
          type: string
          description: Transaction id generated on the server
          example: 292bb6b886fc4446894f878b7e32bd5e
        transactionStatus:
          type: string
          description: Transactions status of 3DS server
          example: C
        transactionStatusReason:
          type: string
          description: Reason for the transaction status
        challengeResponse:
          type: string
          example: ewogIC
        challengeIndicator:
          type: string
          example: '01 = No preference 02 = No challenge requested 03 = Challenge requested: 3DS Requestor Preference 04 = Challenge requested: Mandate'
        dsTransactionId:
          type: string
          example: 292bb6b886fc4446894f878b7e32bd5e
        acsTransactionId:
          type: string
          example: 292bb6b886fc4446894f878b7e32bd5e
        serverTransactionId:
          type: string
          example: 292bb6b886fc4446894f878b7e32bd5e
        acsReferenceNumber:
          type: string
          example: 292bb6b886fc4446894f878b7e32bd5e
        acsSignedContent:
          type: string
          example: 292bb6b88....6fc4446894f878b7e32bd5e
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        challengeRequest:
          type: string
          example: ewogICAiYW.......MjJjMGVjIgp9
        acsUrl:
          type: string
          example: https://test.modirum.com/dstests/ACSEmu2
        iframeContent:
          type: string
          example: <iframe></iframe>
        termUrl:
          type: string
          example: https://mydomain/3dstest?transactionId=292bb6b886fc4446894f878b7e32bd5e
        isThreeDSMethodCompleted:
          type: boolean
          example: true
        isAuthenticationCompleted:
          type: boolean
          example: true
        cavv:
          type: string
          description: Card authentication verification value
        threeDSVersion:
          type: string
        expiryDateTime:
          type: string
          description: 3DS challenge transaction expiry date time.
          format: date-time
          readOnly: true
          example: 2020-01-01T16:06:05Z
        eci:
          type: string
          description: Electronic Commerce Indicator value
      description: Details of ThreeDSecure transaction used to process the challenge flow

    SamsungPay:
      type: object
      properties:
        version:
          type: string
          example: EC_v1
        developerEmail:
          type: string
        data:
          type: string
          example: 3CguW5ecfTzO...03d
        signature:
          type: string
          example: MIAGCSqGSIb......AAAA==
        decryptAlias:
          type: string
          description: field of the public key certificate.
          example: oslo.com.xxx.Prod_mer
        dPanLast4:
          type: string
          example: "9876"
        bin:
          type: string
        eciIndicator:
          type: string
        xid:
          type: string
        cavv:
          type: string
        expiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        panType:
          type: string
        cardType:
          $ref: '#/components/schemas/CreditCardType'
        header:
          type: object
          properties:
            ephemeralPublicKey:
              type: string
              example: MFkwEw...03d
            publicKeyHash:
              type: string
              example: +vbONw...IM=
        token:
          $ref: '#/components/schemas/ReferenceToken'
        billingAddress:
          $ref: '#/components/schemas/Address'
        billingPhone:
          $ref: '#/components/schemas/Phone'

    Supplement:
      type: object
      properties:
        supplementType:
          type: string
        supplementInfo:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/NVP'
      description: Supplement data

    VaultedAccount:
      type: object
      properties:
        fdAccountId:
          type: string
          description: Unique identifier for a customer account vaulted with uCom
        securityCode:
          type: string
          description: Card Verification value.
        status:
          $ref: '#/components/schemas/AccountStatus'
        type:
          $ref: '#/components/schemas/AccountType'
      description: FD Account information
      example:
        fdAccountId: muid-3d4f2ac...c91014f2dc1

    Venmo:
      type: object
      properties:
        nonce:
          type: string
          description: Venmo generated nonce.
          example: ab12-124C-ab12-124C-ab12-124C
      description: Information about a Venmo account.

    Vipps:
      required:
      - paymentId
      type: object
      properties:
        paymentId:
          type: string
          description: The payment_id of Vipps. Used to correlate with the webhook of an open order.
          example: ab12-124C-ab12-124C-ab12-124C
        credit:
          $ref: '#/components/schemas/Credit'
      description: Information about a Vipps account. 'credit' is a read-only property.

    VisaCheckout:
      type: object
      properties:
        callId:
          type: string
          description: Identifier corresponding to an account enrolled with Visa Checkout system.
          example: "1234732704291071701"
        credit:
          $ref: '#/components/schemas/Credit'
      description: Visa Checkout information

    WashCode:
      type: object
      properties:
        code:
          type: string
          description: Wash code generated by the POS system.
        description:
          type: string
          description: Wash code description generated by the POS system.
        expiration:
          type: string
          description: Expiration date for the purchased wash code.
          format: date-time
        message:
          type: string
          description: Field to carry message from site system for display to customer.
      description: Purchased wash information.

    WalmartPay:
      type: object
      properties:
        credit:
          $ref: '#/components/schemas/Credit'
        token:
          $ref: '#/components/schemas/ReferenceToken'

    #-------------------------------------
    # Common Models
    #-------------------------------------
    DeviceInfo:
      required:
      - id
      - kind
      type: object
      properties:
        id:
          type: string
          description: Unique Id for the device. Value should not contain line feeds, carriage returns, tabs, leading or trailing spaces, or multiple spaces.
          example: 537edec8-d33e-4ee8-93a7-b9f61876950c
        kind:
          type: string
          description: Possible values are mobile, wearable, automobile, embedded,desktop, other.
          example: mobile
        details:
          title: deviceData
          minItems: 0
          uniqueItems: true
          type: array
          description: Device data information from multiple providers.
          items:
            type: object
            properties:
              provider:
                type: string
                description: Identifies the provider of the data and is often used when decrypting data on the server.
                example: InAuth
              dataCapture:
                type: object
                properties:
                  rawData:
                    type: string
                    description: Device capture - raw data blob.
                    example: aaaaaXREUVZGRlFY...aMV
                  dataEventId:
                    type: string
                    description: Event identifier used map state on the server.
                    example: BB8E4E92...Fz1E063113
                  captureTime:
                    type: string
                    description: Device data capture time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
                    format: date-time
                    example: 2016-04-16T16:06:05Z
                description: Device data captured as a bundle and transmitted as an encrypted and/or specifically formatted string.
              dataStatic:
                type: object
                properties:
                  os:
                    type: string
                    description: Device OS name
                    example: Android 5.1.1 Lollipop
                  osVersion:
                    type: string
                    description: Device OS version
                    example: 5.1.1 Lollipop
                  model:
                    type: string
                    description: Device model
                    example: XT1540
                  type:
                    type: string
                    description: Device type
                    example: Moto G
                description: Device static details
              dataDynamic:
                type: object
                properties:
                  latitude:
                    type: string
                    description: Device position - latitude at the time of the data event.
                    example: 13.0827 N
                  longitude:
                    type: string
                    description: Device position - longitude at the time of the data event.
                    example: 80.2707 E
                  ipAddress:
                    type: string
                    description: IP address
                    example: 172.27.37.221
                  captureTime:
                    type: string
                    description: Device data capture time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
                    format: date-time
                    example: 2016-04-16T16:06:05Z
                description: Device location details
              dataApplication:
                type: object
                properties:
                  version:
                    type: string
                    description: Mobile application version.
                    format: sting
                    example: 1.0.0
                  name:
                    type: string
                    description: Mobile application name.
                    format: sting
                    example: application-name
                  country:
                    type: string
                    description: Mobile application store country.
                    format: sting
                    example: US
                description: Mobile application specific data
            description: Collection of device data
        additionalInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
      description: Request origin device details

    Error:
      type: object
      properties:
        code:
          type: string
          description: Uniquely identifies an error condition. Client applications need to read and handle errors based on this.
        message:
          type: string
          description: A generic description of the error condition.
        category:
          type: string
          description: The resource associated with the error condition.
        developerInfo:
          type: object
          properties:
            developerMessage:
              type: string
              description: An elaborative description of the error description.
            moreInfo:
              type: string
              description: Link to the error in Developer page.
            fieldError:
              type: array
              description: Detailed information about message format errors.
              items:
                type: object
                properties:
                  field:
                    type: string
                    description: The property or attribute associated with the error
                  message:
                    type: string
                    description: Information specific to a property or attribute.
          description: Information that needs to be understood by the client developers and should not be interpreted for application processing.
        hostExtraInfo:
          minItems: 0
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NVP'
        threeDSecureInfo:
          $ref: '#/components/schemas/ThreeDSecure'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
      description: Model for error messaging

    #-------------------------------------
    # ENUM Models
    #-------------------------------------
    AccountStatus:
      type: string
      description: Indicates the status of an account.
      enum:
      - ACTIVE
      - INACTIVE
      - TERMINATED
      - ISSUER_TERMINATED
      - WALLET_TERMINATED
      - PENDING

    AccountType:
      type: string
      description: Type of Account vaulted
      enum:
      - CREDIT
      - PREPAID
      - ACH
      - LOYALTY
      - PAYPAL
      - MASTERPASS
      - VENMO
      - VAULTED_ACCOUNT

    AchEnrollmentStatus:
      type: string
      description: Indicates ACH enrollment status
      enum:
      - ACTIVE
      - PENDING
      - PENDING_LINKED_ACCOUNT

    AchEnrollmentSubStatus:
      type: string
      description: Indicates ACH enrollment pending status
      enum:
      - PENDING_BANK_VALIDATION
      - PENDING_PIN_VALIDATION
      - PENDING_EMAIL_VALIDATION
      - PENDING_PHONE_VALIDATION
      - PENDING_SOFT_BLOCK
      - PENDING_HARD_BLOCK

    BalanceStatus:
      type: string
      description: Indicates the status of the balance transaction of a given account. 'INPROGRESS' - Balance retrieval is still in progress 'COMPLETED' - Balance is available 'ERROR' - Balance retrieval failed. System error 'UNAVAILABLE' - Balance is not available. Check Host extra info for additional details
      enum:
      - INPROGRESS
      - COMPLETED
      - ERROR
      - UNAVAILABLE

    CurrencyPairType:
      type: string
      description: Describes the type of currency where BASE represents the currency from Host and TRANSACTION represents the one requested.
      enum:
      - BASE
      - TRANSACTION

    CreditCardType:
      title: Credit Card Type
      type: string
      description: Indicates the type of credit account association
      enum:
      - AMEX
      - DISCOVER
      - MASTERCARD
      - PLCC
      - VISA
      - JCB
      - DINERS
      - OTHER

    AchCardType:
      type: string
      description: Indicates the type of ACH card association
      enum:
      - CONNECTPAY

    AchAccountType:
      type: string
      description: ACH account type
      enum:
      - CHECKING
      - SAVINGS

    FundingSourceType:
      type: string
      description: Describes the type of Funding source
      enum:
      - VAULTED_ACCOUNT
      - CREDIT
      - PREPAID
      - APPLE_PAY
      - PAYPAL
      - TOKEN
      - NONCE
      - VCO
      - VENMO
      - LOYALTY
      - AMAZON_PAY
      - VIPPS
      - FLEET
      - BANCONTACT
      - IDEAL
      - WALMART_PAY
      - EBT

    POSItemType:
      type: string
      description: Indicates the type of item
      enum:
      - CARWASH
      - FUEL
      - OTHER

    PrepaidStatus:
      title: Prepaid Status
      type: string
      description: Indicates the status of an prepaid operation.
      enum:
      - CHALLENGED
      - APPROVED
      - FAILED
      - DECLINED

    OperationType:
      type: string
      description: Indicates the operation type of transaction of a given account. 'PURCHASEVOID' - Void a purchase transaction 'RELOADVOID' - Void a reload transaction 'DEDUCTVOID' - Void a deduct transaction 'SWEEPVOID' - Void a sweep transaction
      enum:
      - PURCHASEVOID
      - RELOADVOID
      - DEDUCTVOID
      - SWEEPVOID

    RequestStatus:
      type: string
      description: Indicates the status of the overall request. 'INPROGRESS' - Balance retrieval is still in progress for one or more accounts 'COMPLETED' - Balance retrieval is completed for all accounts
      enum:
      - INPROGRESS
      - COMPLETED

    ServiceLevelCode:
      type: string
      description: Indicates service level code.
      default: S
      enum:
      - S
      - F
      - N
      - X

    UpdateActionType:
      type: string
      description: Indicates the action intended as part of patch operation.
      enum:
      - RESUME_TRANSACTION
      - CANCEL_TRANSACTION

  #-------------------------------------
  # Responses
  #-------------------------------------
  responses:
    AggregateBalanceResponse:
      description: Prepaid balance response based on customer id
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AggregateBalanceTransactionInfo'

    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    BalanceResponse:
      description: Prepaid balance response based on request id
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PrepaidBalanceTransactionInfo'

    Conflict:
      description: Conflict - The requested operation conflicts with the current state of the identified resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Created:
      description: Resource created
      headers:
        Location:
          description: Location of newly created resource.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Prepaid'

    NoContent:
      description: The request succeeded but there�s really nothing to show.
      content: {}

    NotFound:
      description: Not Found - The requested resource doesn't exist.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    OK:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Prepaid'

    ServerError:
      description: An unexpected server error occurred.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    TooEarly:
      description: Request is too early to process.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Unauthorized:
      description: Unauthorized
      content: {}

  #-------------------------------------
  # Parameter Models
  #-------------------------------------
  parameters:
    AcceptLanguageParam:
      name: Accept-Language
      in: header
      description: The Accept-Language header contains information about the language preference of a user. This HTTP header is useful to multilingual sites for deciding the best language to serve to the client. i.e en-US,fr-CA
      schema:
        type: string

    ApiKeyParam:
      name: Api-Key
      in: header
      description: An API key is a string value passed by a client app to the API proxies.The key uniquely identifies the client app.
      required: true
      schema:
        type: string

    AuthorizationParam:
      name: Authorization
      in: header
      description: Authorization information for the request. Format- `HMAC {hmacToken}`
      required: true
      schema:
        type: string

    ClientTokenParam:
      name: Client-Token
      in: header
      description: Used to pass the original client OAuth token information given in a client-credentials flow.  This field is only used when the server is making the request and needs to link the transaction to a specific client.  Format- `Bearer {access_token}`
      schema:
        type: string

    ClientRequestIdParam:
      name: Client-Request-Id
      in: header
      description: Contains a unique ID generated by the client that can be used for enforcing idempotency on POST actions. POSTs are inherently non-idempotent and submitting the exact same request multiple times would create duplicate resources. Note:- Omitting this header increases the risk of duplicate transactions, which for payments could cost the client issues like double-billing.
      required: true
      schema:
        type: string

    ClientRequestIdQueryParam:
      name: clientRequestId
      in: query
      description: Id used in the previous transaction.
      schema:
        type: string

    EndDateParam:
      name: endDate
      in: query
      description: Date up to which transactions are to be retrieved. Format YYYYMMDD
      schema:
        type: string
        format: date-time

    LocationParam:
      name: Location
      in: header
      description: Indicates the target of a redirection i.e /v1/prepaid/balances/{requestId}
      schema:
        type: string

    FdTransactionIdParam:
      name: fdTransactionId
      in: path
      description: Unique identifier provided for a purchase/sale/merge transaction.
      required: true
      schema:
        type: string

    FdParentTransactionIdParam:
      name: fdParentTransactionId
      in: path
      description: Unique identifier provided for a parent transaction.
      required: true
      schema:
        type: string

    FdRefundIdParam:
      name: fdRefundId
      in: path
      description: Unique identifier provided for a refund.
      required: true
      schema:
        type: string

    PageNumberParam:
      name: pageNo
      in: query
      description: Page number
      schema:
        type: integer

    PageSizeParam:
      name: pageSize
      in: query
      description: Max number of records per page. Supported values - 5, 10, 15, 20, 25 ..50
      allowEmptyValue: false
      schema:
        type: integer

    RequestIdParam:
      name: requestId
      in: path
      description: Unique identifier for the request.
      required: true
      schema:
        type: string

    SubMerchantIdParam:
      name: Sub-Merchant-Id
      in: header
      description: Sub Merchant Id contains information about the merchant identifier
      schema:
        type: string

    StartDateParam:
      name: startDate
      in: query
      description: Date from which transactions are to be retrieved. Format YYYYMMDD
      schema:
        type: string
        format: date-time

    TimestampParam:
      name: Timestamp
      in: header
      description: Epoch timestamp in the request initiating system
      required: true
      schema:
        type: string
  examples:
    VaultedCardBalanceRequest:
      value:
        fdCustomerId: ab946a62a5d845b5bb9ff710fcbaf07f
        transaction:
          account:
            vaultedAccount:
              fdAccountId: 8a7f8d908631951201863c5ccce201bc
    VaultedCardBalanceResponse:
      value:
        cardNumber: '7777323952676090'
        cardSubType: Test
        alias: '6090'
        expiryDate:
          month: '01'
          year: '25'
        balance:
          currentBalance: 500.01
          beginBalance: 500.01
          currencyCode:
            code: USD
            number: 840
            currency: US Dollar
          currencyType: BASE

    AggregateBalanceMerchantFundedRequest:
      value:
        fdCustomerId: ab946a62a5d845b5bb9ff710fcbaf07f
        transaction:
          account:
            merchantId: '97483900003'
            altMerchantId: '0001'
    AggregateBalanceMerchantFundedResponse:
      value:
        totalBalance: 500.01
        groupBalances:
        - groupBalance: 500.01
          balances:
          - prepaid:
              cardNumber: '7777323952676090'
              cardSubType: Test
              alias: '6090'
              expiryDate:
                month: '01'
                year: '25'
              balance:
                currentBalance: 0
                beginBalance: 0
                currencyCode:
                  code: USD
                  number: 840
                  currency: US Dollar
                currencyType: BASE
              vaultedAccount:
                fdAccountId: 8a7f8d908631951201863c5ffbb701bd
          - prepaid:
              cardNumber: '7777323952686981'
              cardSubType: Test
              alias: '6981'
              expiryDate:
                month: '01'
                year: '25'
              balance:
                currentBalance: 500.01
                beginBalance: 500.01
                currencyCode:
                  code: USD
                  number: 840
                  currency: US Dollar
                currencyType: BASE
              vaultedAccount:
                fdAccountId: 8a7f83868631781801863c8b82ec0202
          - prepaid:
              cardNumber: '7777323952676090'
              cardSubType: Test
              alias: '6090'
              expiryDate:
                month: '01'
                year: '25'
              balance:
                currentBalance: 0
                beginBalance: 0
                currencyCode:
                  code: USD
                  number: 840
                  currency: US Dollar
                currencyType: BASE
              vaultedAccount:
                fdAccountId: 8a7f8d908631951201863c5ccce201bc




    PlainCardBalanceRequest:
      value:
        transaction:
          account:
            cardNumber: '7076105002996016'
    PlainCardBalanceResponse:
      value:
        cardNumber: '7777323952676090'
        alias: '6090'
        expiryDate:
          month: '01'
          year: '25'
        balance:
          currentBalance: 500
          beginBalance: 500
          currencyCode:
            code: USD
            number: 840
            currency: US Dollar
          currencyType: BASE

    MerchantFundedPurchaseRequest:
      value:
        fdCustomerId: ab946a62a5d845b5bb9ff710fcbaf07f
        transaction:
          saveToVault: true
          account:
            merchantId: '97483900003'
            altMerchantId: '0001'
            cardSubType: Test
            promotionCode: '66961'
          purchaseInfo:
          - order:
              orderId: order002
          fundingInfo:
            fundValue: 0.01
            isMerchantFunded: true
            currencyCode:
              code: USD
              number: 840
    MerchantFundedPurchaseResponse:
      value:
        orderId: order002
        transactionId: 173aac48434044a0bf05c0e810c767f8
        saveToVault: true
        account:
          merchantId: '97483900003'
          altMerchantId: '0001'
          promotionCode: '66961'
          cardNumber: '7777323952676090'
          cardSubType: Test
          alias: '6090'
          expiryDate:
            month: '01'
            year: '25'
          balance:
            currentBalance: 0.01
            beginBalance: 0
            currencyCode:
              code: USD
              number: 840
              currency: US Dollar
            currencyType: BASE
          vaultedAccount:
            fdAccountId: 8a7f8d908631951201863c5ccce201bc
        createdTime: '2023-02-10T17:25:58.804Z'
        fundingInfo:
          isMerchantFunded: true


    CreditCardPurchaseRequest:
      value:
        fdCustomerId: 8e3de3f97aea46a090142e6a991a224c
        transaction:
          orderId: '3434343'
          saveToVault: true
          fundingInfo:
            fundValue: 25
            currencyCode:
              code: USD
              number: 840
              digits: 2
              currency: US Dollar
            fundingSource:
              credit:
                cardNumber: ENC_[eTY6DF55+ZKJkGglXzVhHZFUJ5i/scEGD3LCu/C3tQjPeWorOjYQ21WUMuatC2X52fZ8/pjGZnkZXnp0tDpOuI7A8dHjNTYNBXIILFI9m7VPw433mYCqg+tnexX4YvsKWQRwHcxqHbuBW+oIwG+VN6ZE8elYnmKWDrjeTilTj+crwG+cXHZhsWLJwrOVowfr5cDiassynvJgOu8QSxaxXr1lUav/58umELR780PiStEfk8ml2pIbvQwsAocELkQKTSZXDYZrWf5ILwvXA0JbFst9Aka+YCFehdLlWfdnsXFOHmAy99cANRaU82MO7fXLAiiIlfBL1viVVkfrGEI/mg==]
                cardType: VISA
                nameOnCard: test
                expiryDate:
                  month: ENC_[QA5mD9fpy4/eKqo3guHIurhX75A06kDkL8cTdgrnO4R3pcq+kqS+FYunIgkVYGKsmxicuSA7GceIr6vBcQB3CzxkJeiqluZkVIQwr5kZLzwo4V0wHWMMfrsc+qGBei6XQhYynAmayzstHqc5KPfU81EhWJGfHiux0FIV1nc0KtyAXufV5p2R0PLUMMplcz6R1924xgtKy4/ZmoBEewtz0eGDxQFRo//foo6XQchREqdeIbwBDqUs/t9KbbGXUddSnfSHvBSpVE73AbhfcXaF/mky+1nllKDB6CsmRFmdXE0iB5r5AZnT/kza7Q/bS3wk8Oe3zCGR5s2E+q90+zYzZg==]
                  year: ENC_[HJ16/3IlPxYN4k/xy/W+9p+1LjgEEDdwVPlpgc+tGFVrg3PF7sxS1o5AoRRkUAdvL8MjC3zYdQ9UBmNNGUT7HbSVXZ71GqeNGku5EEanyxvHpHo+BH7/qGH2McFvnmWB+igxMw92PuvLD3V1w4nnDzQ1UbP9rLiu5Ss7fnGEslokDOGnU3RMPYGEZHkKD25KUHhDEaylkVBQspkaewVwmdOsMwib95yQrcuM6E5gu+dkHlWtkOtnuCSPqAY59C5vVW9+SoPr4iOHeUiCVkqaxLg+vACrEYcIzmxLdABSDRiP7V7NGFH4VzCaNnJPw2gp1np8qyxUV1OBUJvmBgT7Xg==]
                securityCode: ENC_[bX9m3XXfdhJkH69VsJViAz4HBZu3y8lr9f4/bbvo4zNJvltERfyCG2uGz/xfEqUFMYYhaT8LGCvDf2ytoIJdD4JQsCCYimNCfGZg7HvgZ0Ty/i/rCvI5bqHANcLVFfcaH60z4ALu4xo9JaqA1ZfiKd5RrXwMfMuslUIPB4WRP2bKV/Sg31gGrAo1Ckecwhp2TujYo3ZtJupj+tZfBiIinrwuK4erGx+PoQjHjAvPYSm2e3wyQBoLuJUlBrQVSsLTTV3fyGOwdKtqa8fgtnKuxXdK7FeDkvQ0RkHVc3cQM2fQVbYoBC9Di+9zJbCrIJPgvgeGVGvVGeybzpgDhMvUiA==]
    CreditCardPurchaseResponse:
      value:
        orderId: Order9641141
        transactionId: e88d2e8ca74943ec92ed5396e8dedcde
        saveToVault: false
        account:
          cardNumber: '7777280826989134'
          securityCode: '77340651'
          alias: '9134'
          expiryDate:
            month: '01'
            year: '25'
          balance:
            currentBalance: 15.25
            beginBalance: 0
            currencyCode:
              code: USD
              number: 840
              currency: US Dollar
            currencyType: BASE
        createdTime: '2023-01-11T11:53:29.979Z'
        fundingInfo:
          approvedAmount: 15.25
          fundingSource:
            type: CREDIT
            saveToVault: false
            credit:
              nameOnCard: John Smith
              alias: '0005'
              cardType: VISA
              billingAddress:
                streetAddress: 100 Universal City Plaza
                postalCode: '20220'
              expiryDate:
                month: '12'
                year: '24'
              token:
                tokenId: '2895841960550005'
                tokenProvider: TRANS_ARMOR
        hostExtraInfo:
        - name: APPROVAL_NUMBER
          value: '26982 '
        - name: SEQUENCE_NUMBER
          value: '621204'
        - name: HOST_RESPONSE_CODE
          value: '4'
        - name: HOST_RESPONSE_MESSAGE
          value: APPROVED  26982
        - name: HOST_AVS_CODE
          value: AVS+Y
        - name: HOST_CVV_CODE
          value: M
        - name: TRANSACTION_DATETIME
          value: 2023-01-11T05:53
        - name: NETWORK_TRANSACTION_ID
          value: '205260111115330'

    VaultedCardPurchaseRequest:
      value:
        fdCustomerId: 7b4bb73b7dc040259eff4afcf05c1a56
        transaction:
          orderId: Order2467828
          storeId: Test
          saveToVault: true
          fundingInfo:
            fundValue: 15.25
            currencyCode:
              code: USD
              number: 840
              digits: 2
              currency: US Dollar
            fundingSource:
              vaultedAccount:
                fdAccountId: 8a7f01e0859f29aa0185a038f7480011
        deviceInfo:
          id: 537edec8-d33e-4ee8-93a7-b9f61876950cs
          kind: mobile
          details:
          - provider: ThreatMetrix
            dataCapture:
              rawData: aaaaaXREUVZGRlFY...aMV
              dataEventId: 243c6c28672b051eb81f950f184a2adb
              captureTime: '2016-04-16T16:06:05Z'
        publicKeyRequired: true
    VaultedCardPurchaseResponse:
      value:
        orderId: Order2467828
        transactionId: 646d1da5822e4f9e9986063d03dfa9b4
        saveToVault: true
        account:
          cardNumber: '7777347468914102'
          securityCode: '9126'
          alias: '4102'
          expiryDate:
            month: '01'
            year: '25'
          balance:
            currentBalance: 15.25
            beginBalance: 0
            currencyCode:
              code: USD
              number: 840
              currency: US Dollar
            currencyType: BASE
          vaultedAccount:
            fdAccountId: 8a7fc8ec859f29a30185a03907c1000e
        createdTime: '2023-01-11T09:46:08.617Z'
        fundingInfo:
          approvedAmount: 15.25
          fundingSource:
            type: VAULTED_ACCOUNT
            vaultedAccount:
              fdAccountId: 8a7f01e0859f29aa0185a038f7480011
            credit:
              nameOnCard: John Smith
              alias: '0026'
              cardType: VISA
              billingAddress:
                streetAddress: Y1307 Broad Hollow Road
                postalCode: '20220'
              expiryDate:
                month: '12'
                year: '25'
              token:
                tokenId: '9412173864130026'
                tokenProvider: TRANS_ARMOR
        hostExtraInfo:
        - name: APPROVAL_NUMBER
          value: '23633 '
        - name: SEQUENCE_NUMBER
          value: '378045'
        - name: TRANSACTION_DATETIME
          value: 2023-01-11T04:46
        - name: NETWORK_TRANSACTION_ID
          value: '012000111094609'

    ApplePayPurchaseRequest:
      value:
        fdCustomerId: ce8d722d25374dfbbc88d73609296438
        transaction:
          saveToVault: false
          orderId: Order5812033
          merchantId: MO17312456001
          fundingInfo:
            fundValue: 15.25
            currencyCode:
              code: USD
              number: 840
              digits: 2
              currency: US Dollar
            fundingSource:
              applePay:
                version: EC_v1
                decryptAlias: merchant.com.testdrivein.sandbox
                data: b7L6ZT6S7INP+W1RwVcOZkgaEf6lqVoj2F8VJPjC2Wl8JmWb8JBZHFuuiINykXRiooU988M9L+rn0yeKeEdCQGJ6X8b0qpQeoz4H/kg72J/V3IxTqxq1P2LrdzYJO5XE4+W5NSf4rf162+Jc9ft7fxKYM81uBUM1E0AaLj27RZ4mYxnOAeUTVvkZdTAyDrNyGexOAoRPAVQkjZPMp2V4+z0OORQEiGJPW6Zp6ukBlpN8D2MK527JFjiG3uNPO3dBp1HI4Qr2V48sn9d/jqDVQlnxCNHrwNCZM9a7tMkO01BMvsAuu0dbv4Lsw7vuq1IvmperVwFavNPP6qq4oTGPkQIAYLy3sxkoipk5S+QWHwnqfc9pDdcjVZ8XoIeKFbRTHtHyudWQEb2KJT0YbO8NEYj4IO4UA4xB4/jCh3GVV13ojH+xtsxxzSd1vowAbX2oZcYQvGzVOzMny+1eTATL0dfSnpefUtsCtHlnzVM=
                signature: MIAGCSqGSIb3DQEHAqCAMIACAQExDzANBglghkgBZQMEAgEFADCABgkqhkiG9w0BBwEAAKCAMIIB0zCCAXkCAQEwCQYHKoZIzj0EATB2MQswCQYDVQQGEwJVUzELMAkGA1UECAwCTkoxFDASBgNVBAcMC0plcnNleSBDaXR5MRMwEQYDVQQKDApGaXJzdCBEYXRhMRIwEAYDVQQLDAlGaXJzdCBBUEkxGzAZBgNVBAMMEmQxZHZ0bDEwMDAuMWRjLmNvbTAeFw0xOTA3MjUxNjI3NDlaFw0zOTA3MjAxNjI3NDlaMHYxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJOSjEUMBIGA1UEBwwLSmVyc2V5IENpdHkxEzARBgNVBAoMCkZpcnN0IERhdGExEjAQBgNVBAsMCUZpcnN0IEFQSTEbMBkGA1UEAwwSZDFkdnRsMTAwMC4xZGMuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAErnHhPM18HFbOomJMUiLiPL7nrJuWvfPy0Gg3xsX3m8q0oWhTs1QcQDTT+TR3yh4sDRPqXnsTUwcvbrCOzdUEeTAJBgcqhkjOPQQBA0kAMEYCIQCXW2kjA36LdnEqc0qHb82FIYShdEk3hgPGxZDf6PfXygIhANrrpo/SY2YorozC73ZuQDtsGK3PHTdQZja5AgdEXy0yAAAxggFSMIIBTgIBATB7MHYxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJOSjEUMBIGA1UEBwwLSmVyc2V5IENpdHkxEzARBgNVBAoMCkZpcnN0IERhdGExEjAQBgNVBAsMCUZpcnN0IEFQSTEbMBkGA1UEAwwSZDFkdnRsMTAwMC4xZGMuY29tAgEBMA0GCWCGSAFlAwQCAQUAoGkwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMjAwOTIyMTAwNTE4WjAvBgkqhkiG9w0BCQQxIgQgpqCaPXF0IRAZSKe9rw2+N+iXbC+gi3GmO/xzwUjbUkEwCgYIKoZIzj0EAwIERjBEAiB2NclnayPRSrifg3fv6yvqxg6iYZcahFoBtRmOY3vfOQIgW8SLmMIGFxvXDOAAjPAGnmSf/9NjG+ncGZ+vNS7i4SMAAAAAAAA=
                applicationData: VEVTVA==
                header:
                  ephemeralPublicKey: MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEwZLvUUo3BkjjH3ugF30BS9mqj81FvnuCddM3O718/wmOJygi9uSSjhwDNrXPRt3uuMYypCvtcFA0RATA0YwQgA==
                  publicKeyHash: 5kjTKPpV0GosrBda8lkjscYwdFcdd7tGp53TZbzhbjQ=
                  transactionId: '31323334353637'
                billingAddress:
                  type: work
                  streetAddress: 200 Universal City Plaza
                  locality: Hollywood
                  region: CA
                  postalCode: '20220'
                  country: US
                  formatted: |-
                    100 Universal City Plaza
                    Hollywood, CA 91608 USA
                  primary: true

    ApplePayPurchaseResponse:
      value:
        orderId: Order5812033
        transactionId: eb171bd3691847a880ca21f5777ef7c8
        saveToVault: false
        account:
          cardNumber: '7777115035932645'
          alias: '2645'
          expiryDate:
            month: '01'
            year: '00'
          balance:
            currentBalance: 15.25
            beginBalance: 0
            currencyCode:
              code: USD
              number: 840
              currency: US Dollar
            currencyType: BASE
        createdTime: '2023-01-12T05:46:01.156Z'
        fundingInfo:
          approvedAmount: 15.25
          fundingSource:
            type: APPLE_PAY
            applePay:
              token:
                tokenId: '2865430100440004'
                tokenProvider: TRANS_ARMOR
                expiryDate:
                  month: '12'
                  year: '24'
              dPanLast4: '0004'
              cardType: VISA
            credit:
              token:
                tokenId: '2865430100440004'
                tokenProvider: TRANS_ARMOR
                expiryDate:
                  month: '12'
                  year: '24'
        hostExtraInfo:
        - name: APPROVAL_NUMBER
          value: ET106464
    GooglePayPurchaseRequest:
      value:
        fdCustomerId: 'null'
        transaction:
          saveToVault: false
          orderId: Order5411937
          storeId: TEST
          fundingInfo:
            fundValue: 15.25
            currencyCode:
              code: USD
              number: 840
              digits: 2
              currency: US Dollar
            fundingSource:
              type: GOOGLE_PAY
              googlePay:
                data: '{"encryptedMessage":"2+F/ADEwap8GfsWVs9cr3Wm3exE1TvqDrKQ/Cr6n1BOSxkiT3NQ4TOHOxHzKt5o7RY3mHlhc+PuMKu135//tySW7kdsq4Y9P3U37CcBlRpJWN4KSFcxwMDz8nUTqbzt+vCSXStyfiEpFIMW0OfnwSTmShHizxgP/7vI3YkTyz3GQsf+KDm2UbKLmuFhGZAT4dfHkV4r4M+F3C79g4F+4LArZHvyYbLqcbSHs1t0lTeTsleKQghVhWnYJOJCy4T4DYwP8wgSTbnactdENef+Rd+loQKhn7uS8W56fjOKbh1i5rZVOuL+g98WEznDUUoNZV2lX5f0oN7sAx+/3/sHYvVkoYNwP+YtC6iPzZPjeQ3aThXJ/uXaepgv5JGcPbTiQzYWAyw0jUIQkSzC88AfGK67R8N5a/E/U7CZ6bFjus0Eui/L1Bq5wMvNWfewFmOxC2GACUkrts3wBFoo3HVvtTKmzRVKEHIONSG2XthAP7twC0SZe8Cd/8pYfrkQTWggknIub1MWQhZ9ZUbXirX4ECnwTa6nOn06G/S+PsVjfiPqScA\u003d\u003d","ephemeralPublicKey":"BGWgj7RjGJe3y+PerBzSN6U2ztNA+tQHU8KLRn/3985Q8LdCBgtMsoqoTlxGSczXaBEWGqkKu9836HQ1EBNJ1g0\u003d","tag":"RDcrFHi/XkzGcBuGOvxtFhFhnqSfGiHabCB2tLk5mvg\u003d"}'
                signature: MEQCIF6g7ClWEnTPyHWZAuc4DyYOwMx6K2d3woehkPIhOlXqAiAwpwz7FxW9LR4Pm8RmVczV6ycM1QjrM5wbONXpsdK4yQ==
                applicationData: VEVTVA==
                version: ECv1
                billingAddress:
                  type: work
                  streetAddress: 200 Universal City Plaza
                  locality: Hollywood
                  region: CA
                  postalCode: '20220'
                  country: US
                  formatted: |-
                    100 Universal City Plaza
                    Hollywood, CA 91608 USA
                  primary: true

    GooglePayPurchaseResponse:
      value:
        orderId: Order5411937
        transactionId: 1967e160f7204de0a7c00244dbb50660
        saveToVault: false
        account:
          cardNumber: '7777280826637131'
          securityCode: '24264475'
          alias: '7131'
          expiryDate:
            month: '01'
            year: '25'
          balance:
            currentBalance: 15.25
            beginBalance: 0
            currencyCode:
              code: USD
              number: 840
              currency: US Dollar
            currencyType: BASE
        createdTime: '2023-01-11T10:03:46.362Z'
        fundingInfo:
          approvedAmount: 15.25
          fundingSource:
            type: GOOGLE_PAY
            credit:
              token:
                tokenId: '1349182419097840'
                tokenProvider: TRANS_ARMOR
                expiryDate:
                  month: '12'
                  year: '28'
            googlePay:
              dPanLast4: '7840'
              cardType: MASTERCARD
              token:
                tokenId: '1349182419097840'
                tokenProvider: TRANS_ARMOR
                expiryDate:
                  month: '12'
                  year: '28'
        hostExtraInfo:
        - name: APPROVAL_NUMBER
          value: '136083'
        - name: SEQUENCE_NUMBER
          value: '328701'
        - name: TRANSACTION_DATETIME
          value: 2023-01-11T04:03
    SamsungPayPurchaseRequest:
      value:
        fdCustomerId: 5e82308296bb41e3adc583e223f6a0fb
        transaction:
          saveToVault: false
          orderId: Order4763851
          merchantId: MO17312456001
          fundingInfo:
            fundValue: 15.25
            currencyCode:
              code: USD
              number: 840
              digits: 2
              currency: US Dollar
            fundingSource:
              samsungPay:
                version: EC_v1
                decryptAlias: merchant.com.test.sandbox
                data: eyJhbGciOiJSU0ExXzUiLCJraWQiOiJTZzdHc2dTdGhTS3luTjBRSXRHYlNWOVBoTUJjVEdvanp4MFB0U3kyTnlNPSIsInR5cGUiOiJKT1NFIiwiY2hhbm5lbFNlY3VyaXR5Q29udGV4dCI6IlJTQV9QS0kiLCJlbmMiOiJBMTI4R0NNIn0.S46_CJmqo33afnT7S_PfgOEmLsGtheNi-hIen7KCGj3kJ3hPwqp7EEbOucEi-7JxSc50HVljdHn53rw1_WvwCBEjoisVniN6S0Fe7ZoO2bnuhN3kJErcrYj4k_0nrvg6gQmG530eJQ3Wg_4Kz8NItW6FQRmj0CmeEP6_tw-lNTMXBj8d1PZyYDwZz-54h2o1Os8RMsm3tigudcsBXPwvsMobPgU1NKJhzLecI_9qFvlOYRYdI-1POIkqfJy1aXKLrjumGFMYlPGso148_C7pXzW6pXUybu-mPZtjQolv79BWNSX6IJmkssQRX9Z3aucLq-PGtIl3YmlZlXHt99wXrw.UgRrlF-hRdajlfkA.J1lnY-QHOXUf_IyBssLI7x7NhKU0z1MsGrY818KHSz9wr3j4H2PZgQjXsiedTeIN0yZXS4NfvdjIDsXBAk8z2VIPfk4cGO_PRTbJubjeIfEAkORPLEnwUbcZLRMYLW35LI0JSexilFJ2jcvAn5SoavFE.
                signature: ''
                applicationData: VEVTVA==
                header:
                  ephemeralPublicKey: ''
                  publicKeyHash: Sg7GsgSthSKynN0QItGbSV9PhMBcTGojzx0PtSy2NyM=
                  transactionId: '31323334353637'
                billingAddress:
                  type: work
                  streetAddress: 200 Universal City Plaza
                  locality: Hollywood
                  region: CA
                  postalCode: '20220'
                  country: US
                  formatted: |-
                    100 Universal City Plaza
                    Hollywood, CA 91608 USA
                  primary: true
    SamsungPayPurchaseResponse:
      value:
        orderId: Order4763851
        transactionId: 1d806ece848c4736a7b0365e57b66d9d
        saveToVault: false
        account:
          cardNumber: '7777115035974754'
          alias: '4754'
          expiryDate:
            month: '01'
            year: '00'
          balance:
            currentBalance: 15.25
            beginBalance: 0
            currencyCode:
              code: USD
              number: 840
              currency: US Dollar
            currencyType: BASE
        createdTime: '2023-01-12T05:48:34.897Z'
        fundingInfo:
          approvedAmount: 15.25
          fundingSource:
            type: SAMSUNG_PAY
            credit:
              token:
                tokenId: '177558346240175'
                tokenProvider: TRANS_ARMOR
                expiryDate:
                  month: '12'
                  year: '25'
            samsungPay:
              token:
                tokenId: '177558346240175'
                tokenProvider: TRANS_ARMOR
                expiryDate:
                  month: '12'
                  year: '25'
              cardType: AMEX
              dPanLast4: '0175'
        hostExtraInfo:
        - name: APPROVAL_NUMBER
          value: ET175047

    PLCCPurchaseRequest:
      value:
        transaction:
          purchaseInfo:
          - order:
              orderId: Michelscott0fefdef13
          account:
            merchantId: '97065200008'
            altMerchantId: '0001'
            cardSubType: test
            promotionCode: '57051'
          saveToVault: false
          fundingInfo:
            fundValue: 2
            currencyCode:
              code: USD
              number: 840
              digits: 2
              currency: US Dollar
            fundingSource:
              credit:
                cardNumber: Lr4lSlV1O9mUc9yHbt9Jlzude8PbUPXzDZ7D5jpTI+iYKtD+YAQZOS3Cf6Xoq5BHeKiIqOOZawuv8B+5Q6XBctasxDp4OxbtvOgneTZCD3bKzJ9wRSkdN+oEugJWglkiY0BmL7XOpXK/Gn9bRuG1r6HZHHjToUtzFdw83l2xexucGdQsd4x/VURPxFKC3L8YzziOECMM/oUgoVQzBVo+TxbKZechY/QZcxS5Mq6XHmGcnqhkx0kjJxS92MLzk+mPtGC/7fWenPm+bRRcFM7h6bBQ3c9K+qlFFm75T3ZPFCxczJcmFPyqwg5DkKBXiFjOM5GBMozFnj9mA9sey/8Ihw==
                nameOnCard: John Smith
                cardType: PLCC
                billingAddress:
                  type: work
                  streetAddress: 100 Universal City Plaza
                  locality: Hollywood
                  region: CA
                  postalCode: '91608'
                  country: US
                  primary: true
                expiryDate:
                  month: t82eKlJ9vXxHBvGpyJrQ0YQafT7N84DWb2oHgtA7Cz189u1tyc/I/VF77r0tGPicIhTlE+E/7MPxzcujtW9DH+hrsEXxFv8IOdkvxltF+SbE3aTO865gb453+2TE4nY4xlDGTRTb1ZJwau5FwFyEJCS0+DLqASRnjEZDvTOWhipfEPCgRl7ZMtqQ3n/TZdUIfAcXnzngIDp9HH4RNx78WmcJp+/brS23tx7SoY5/+Kh9f9sSvRUsFr30vhbs4XfG3JX0mnDy5xIuxuj/myegaz2gtrEADsiInqETAKdb+dQayKux+5frB+UTZTbOXK2cOjBLy5mQXG4kGaCq6+KmEQ==
                  year: kmTUcU4XCW8wBN1xEHsAED/m4udZVEGphMvB9f4MERr91YpbAB9NTNds0CzdG8mbP4/EyqHoqrxI0xMtVRgxubPQxZktBfMA9SauHZ/17ZizxHytUusR3xOatvnqnwnnBrinVcFc2BNXKHrxM/mEpWm1X25c5TRQQTljd6UMhacHRDSRU9Y1sH92+9+5gJmfOjGewAlBnPy9ReMNsLMnD8Wz7tWx4J75uFR8beO6OYhu92IamlZCp0DjYZM+PdW/BHedd43rD8nrgoZu/fCI6b8ylqVdYIf4L9fjA8/CvCC5CQta06Y9is8HCxQEj2O2q3ttgvFsU79F2hSXAdH++w==

    PLCCPurchaseResponse:
      value:
        purchaseInfo:
        - order:
            orderId: Michelscott0fefdef13
        transactionId: 7eb5b3cf58ad4b1b91e3ae094313fe55
        saveToVault: false
        account:
          cardNumber: '7777135606281969'
          alias: '1969'
          merchantId: '97065200008'
          altMerchantId: '0001'
          cardSubType: test
          promotionCode: '57051'
          expiryDate:
            month: '01'
            year: '25'
          balance:
            currentBalance: 2
            beginBalance: 0
            currencyCode:
              code: USD
              number: 840
              currency: US Dollar
            currencyType: BASE
        createdTime: '2018-08-21T09:36:26.343Z'
        fundingInfo:
          fundingSource:
            saveToVault: false
            type: PLCC
            credit:
              nameOnCard: John Smith
              alias: '0004'
              expiryDate:
                month: '06'
                year: '20'
              token:
                tokenId: '8620900353210004'
                tokenProvider: TRANS_ARMOR
        hostExtraInfo:
        - name: APPROVAL_NUMBER
          value: '495284'
        - name: SEQUENCE_NUMBER
          value: '2201536612'

    CreditCardReloadRequest:
      value:
        transaction:
          orderId: Order5718423
          storeId: Test
          destinationCard:
            account:
              cardNumber: '7777280826989134'
              securityCode: '77340651'
          fundingInfo:
            fundValue: 15.25
            currencyCode:
              code: USD
              number: 840
              digits: 2
              currency: US Dollar
            fundingSource:
              saveToVault: false
              credit:
                cardNumber: bSamSKzwa/HAsn/UygLxnG9BPLfUENdEEmBRNW/tD2W9lqmzBamJ+t0yZwvfgFRYDsWbeSD+Em2DNzxIY1IBLh6bFvx8n43PFYrzXXlyCNSnHDfMT3JRjRdtFkLpxAL35gnhXPi92WHDnQU80KTQaW7DKjnh7nNQI+xNN103vT7MCPnfLsvBsIYaLPWLKiDxbc2v1wDs4zTsH0HhxtgRpxWvAv6Z10Cfw1G68J1vJQvM6E9QJoc8FePGy0ZlSLcEz6+eC05ZID09z49/7OaANHHzxxd/PjggG3FyVjxLa/PRX31TIbUlRGlVDxXs085DL86YDYll/C8s+L1QFHENRw==
                nameOnCard: John Smith
                cardType: VISA
                billingAddress:
                  type: work
                  streetAddress: 100 Universal City Plaza
                  locality: Hollywood
                  region: CA
                  postalCode: '20220'
                  country: US
                  formatted: |-
                    100 Universal City Plaza
                    Hollywood, CA 91608 USA
                  primary: true
                expiryDate:
                  month: A+Or4owI848GCVSQhuL/PjPZouBgO+sKvh2Xv64VA9sAF4cjYXj6Sdat17H64rnM8stB7SN4el01kHi7jBe2u+1+B4r77JZ1QWH9HZ7tqJXVSn4xNc3H2ULLE0kv+DBsYHzp0yy5+gDJBScMRGeee9bP3R5GrF/1KUZ6zMKanIoQw19Ml5r3Rw8e/7Tx7x67DTrG75XBvH+GgoSfRUH9TcmD2+ed1FemV/5bl/ZpPKATWlvwkevhveoWGN9/Iz1CoRGtkbBBjhXZuhz10Iwxd0M56+ZncRW0DantLNmB/8YxyKThqRP+YwTrV3qZcndoDDH0o36yt2rFSDlMgHP0Qg==
                  year: sGJzceG1b7hOrz4dT/9Kyaw0mt2LJ7O+Wia9ZvMBPrsv7fijhLlM1OthrbZtRO05YAwJ6pojnqdozW5wAaNZ+QxIGeyvHCCYstQV+Ld+taD+0v2U1rIovXW1qc3cx+YGPyyla7GO4WrXXxZRG9jneJCrWmcW8XgTgKVL/T7zDOYTgTUVg6hCiBpbZXsuYmPe3dQovOXGzPFNS80N1DInWyReHp9WWbAqdDoIALl0RH0f4boRfSvk5bIvrcbg8ILA3RXxkclqWGjdQgRjHhtTyFrYL4gHj/r5OR8RCYeUhyucgPTuny8EPbRmjHJ76Xw6MAfrMumFDU4OTyD4LlgdRQ==
                securityCode: wt0qakmwW9jAoQJTFqu0MFmoOoYhGza/6HVRWcf77cxe6VUu0q2ysNVlXSGNgEK0ktLwjY7MlwuLruNDjt3fPAtYMryDu+DKPEE+8poIsmss7wFu5+CTJmA+loHwnM1ZDlrqoBD6Ywg1WUA1MORYT2sVEU2Hm39ERByz7JJ+x8SHSSFkLmND1z2VZa1KL5Iwdo4o9zec60/iMxv7tiwOpUdLutya+nW7ClcT4SqCCtJByako+WG5Sb8wAN98lvkpxXkSrOAH8TOTLbiS3I6o12Xk04470AAQgohR10Vb/8FbDv55JUBfO2EiLn+Yy87ZBpG9HRXN7b1sQv21hsly9A==
                sequenceNumber: '01'
    CreditCardReloadResponse:
      value:
        orderId: Order5718423
        transactionId: 9d68cc732d9c42709049c623e8b9f74f
        saveToVault: false
        destinationCard:
          account:
            cardNumber: '7777280826989134'
          balanceInfo:
            currentBalance: 30.5
            beginBalance: 15.25
            currencyCode:
              code: USD
              number: 840
              currency: US Dollar
            currencyType: BASE
        createdTime: '2023-01-11T11:53:41.902Z'
        fundingInfo:
          approvedAmount: 15.25
          fundingSource:
            type: CREDIT
            saveToVault: false
            credit:
              nameOnCard: John Smith
              alias: '0005'
              cardType: VISA
              billingAddress:
                streetAddress: 100 Universal City Plaza
                postalCode: '20220'
              expiryDate:
                month: '12'
                year: '24'
              token:
                tokenId: '2895841960550005'
                tokenProvider: TRANS_ARMOR
        hostExtraInfo:
        - name: APPROVAL_NUMBER
          value: '26982 '
        - name: SEQUENCE_NUMBER
          value: '025600'
        - name: HOST_RESPONSE_CODE
          value: '4'
        - name: HOST_RESPONSE_MESSAGE
          value: APPROVED  26982
        - name: HOST_AVS_CODE
          value: AVS+Y
        - name: HOST_CVV_CODE
          value: M
        - name: TRANSACTION_DATETIME
          value: 2023-01-11T05:53
        - name: NETWORK_TRANSACTION_ID
          value: '205260111115342'

    MerchantFundedReloadRequest:
      value:
        fdCustomerId: ab946a62a5d845b5bb9ff710fcbaf07f
        transaction:
          destinationCard:
            account:
              merchantId: '97483900003'
              altMerchantId: '0001'
              vaultedAccount:
                fdAccountId: 8a7f8d908631951201863c5ffbb701bd
          purchaseInfo:
          - order:
              orderId: order005
          fundingInfo:
            fundValue: 500
            isMerchantFunded: true
            currencyCode:
              code: USD
              number: 840
    MerchantFundedReloadResponse:
      value:
        orderId: order005
        transactionId: ae17fc7b8d18444899c877e04423eab9
        saveToVault: false
        destinationCard:
          vaultedAccount:
            fdAccountId: 8a7f8d908631951201863c5ffbb701bd
          account:
            merchantId: '97483900003'
            altMerchantId: '0001'
            cardNumber: '7777323952676090'
            cardSubType: Test
            alias: '6090'
            expiryDate:
              month: '01'
              year: '25'
          balanceInfo:
            currentBalance: 500.01
            beginBalance: 0.01
            currencyCode:
              code: USD
              number: 840
              currency: US Dollar
            currencyType: BASE
        createdTime: '2023-02-10T17:30:40.969Z'
        fundingInfo:
          isMerchantFunded: true

    ApplePayReloadRequest:
      value:
        fdCustomerId: ce8d722d25374dfbbc88d73609296438
        transaction:
          saveToVault: false
          orderId: Order1996975
          merchantId: MO17312456001
          destinationCard:
            account:
              cardNumber: '7777115035932645'
              securityCode: ' '
          fundingInfo:
            fundValue: 15.25
            currencyCode:
              code: USD
              number: 840
              digits: 2
              currency: US Dollar
            fundingSource:
              applePay:
                version: EC_v1
                decryptAlias: merchant.com.testdrivein.sandbox
                data: b7L6ZT6S7INP+W1RwVcOZkgaEf6lqVoj2F8VJPjC2Wl8JmWb8JBZHFuuiINykXRiooU988M9L+rn0yeKeEdCQGJ6X8b0qpQeoz4H/kg72J/V3IxTqxq1P2LrdzYJO5XE4+W5NSf4rf162+Jc9ft7fxKYM81uBUM1E0AaLj27RZ4mYxnOAeUTVvkZdTAyDrNyGexOAoRPAVQkjZPMp2V4+z0OORQEiGJPW6Zp6ukBlpN8D2MK527JFjiG3uNPO3dBp1HI4Qr2V48sn9d/jqDVQlnxCNHrwNCZM9a7tMkO01BMvsAuu0dbv4Lsw7vuq1IvmperVwFavNPP6qq4oTGPkQIAYLy3sxkoipk5S+QWHwnqfc9pDdcjVZ8XoIeKFbRTHtHyudWQEb2KJT0YbO8NEYj4IO4UA4xB4/jCh3GVV13ojH+xtsxxzSd1vowAbX2oZcYQvGzVOzMny+1eTATL0dfSnpefUtsCtHlnzVM=
                signature: MIAGCSqGSIb3DQEHAqCAMIACAQExDzANBglghkgBZQMEAgEFADCABgkqhkiG9w0BBwEAAKCAMIIB0zCCAXkCAQEwCQYHKoZIzj0EATB2MQswCQYDVQQGEwJVUzELMAkGA1UECAwCTkoxFDASBgNVBAcMC0plcnNleSBDaXR5MRMwEQYDVQQKDApGaXJzdCBEYXRhMRIwEAYDVQQLDAlGaXJzdCBBUEkxGzAZBgNVBAMMEmQxZHZ0bDEwMDAuMWRjLmNvbTAeFw0xOTA3MjUxNjI3NDlaFw0zOTA3MjAxNjI3NDlaMHYxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJOSjEUMBIGA1UEBwwLSmVyc2V5IENpdHkxEzARBgNVBAoMCkZpcnN0IERhdGExEjAQBgNVBAsMCUZpcnN0IEFQSTEbMBkGA1UEAwwSZDFkdnRsMTAwMC4xZGMuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAErnHhPM18HFbOomJMUiLiPL7nrJuWvfPy0Gg3xsX3m8q0oWhTs1QcQDTT+TR3yh4sDRPqXnsTUwcvbrCOzdUEeTAJBgcqhkjOPQQBA0kAMEYCIQCXW2kjA36LdnEqc0qHb82FIYShdEk3hgPGxZDf6PfXygIhANrrpo/SY2YorozC73ZuQDtsGK3PHTdQZja5AgdEXy0yAAAxggFSMIIBTgIBATB7MHYxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJOSjEUMBIGA1UEBwwLSmVyc2V5IENpdHkxEzARBgNVBAoMCkZpcnN0IERhdGExEjAQBgNVBAsMCUZpcnN0IEFQSTEbMBkGA1UEAwwSZDFkdnRsMTAwMC4xZGMuY29tAgEBMA0GCWCGSAFlAwQCAQUAoGkwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMjAwOTIyMTAwNTE4WjAvBgkqhkiG9w0BCQQxIgQgpqCaPXF0IRAZSKe9rw2+N+iXbC+gi3GmO/xzwUjbUkEwCgYIKoZIzj0EAwIERjBEAiB2NclnayPRSrifg3fv6yvqxg6iYZcahFoBtRmOY3vfOQIgW8SLmMIGFxvXDOAAjPAGnmSf/9NjG+ncGZ+vNS7i4SMAAAAAAAA=
                applicationData: VEVTVA==
                header:
                  ephemeralPublicKey: MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEwZLvUUo3BkjjH3ugF30BS9mqj81FvnuCddM3O718/wmOJygi9uSSjhwDNrXPRt3uuMYypCvtcFA0RATA0YwQgA==
                  publicKeyHash: 5kjTKPpV0GosrBda8lkjscYwdFcdd7tGp53TZbzhbjQ=
                  transactionId: '31323334353637'
                billingAddress:
                  type: work
                  streetAddress: 200 Universal City Plaza
                  locality: Hollywood
                  region: CA
                  postalCode: '20220'
                  country: US
                  formatted: |-
                    100 Universal City Plaza
                    Hollywood, CA 91608 USA
                  primary: true
    ApplePayReloadResponse:
      value:
        orderId: Order1996975
        transactionId: dfd7d89359184d9cb092ecca8ae11fcd
        saveToVault: false
        destinationCard:
          account:
            cardNumber: '7777115035932645'
          balanceInfo:
            currentBalance: 30.5
            beginBalance: 15.25
            currencyCode:
              code: USD
              number: 840
              currency: US Dollar
            currencyType: BASE
        createdTime: '2023-01-12T05:46:25.427Z'
        fundingInfo:
          approvedAmount: 15.25
          fundingSource:
            type: APPLE_PAY
            applePay:
              token:
                tokenId: '1263934295620004'
                tokenProvider: TRANS_ARMOR
                expiryDate:
                  month: '12'
                  year: '24'
              dPanLast4: '0004'
              cardType: VISA
            credit:
              token:
                tokenId: '1263934295620004'
                tokenProvider: TRANS_ARMOR
                expiryDate:
                  month: '12'
                  year: '24'
        hostExtraInfo:
        - name: APPROVAL_NUMBER
          value: ET197801
    GooglePayReloadRequest:
      value:
        fdCustomerId: 'null'
        transaction:
          saveToVault: false
          orderId: Order6357194
          storeId: Test
          destinationCard:
            account:
              cardNumber: '7777280826626715'
              securityCode: '12148586'
          fundingInfo:
            fundValue: 15.25
            currencyCode:
              code: USD
              number: 840
              digits: 2
              currency: US Dollar
            fundingSource:
              type: GOOGLE_PAY
              googlePay:
                data: '{"encryptedMessage":"OR7EanFhzs+BVBQjceLPp4+MMDBV3f35IntKnbY6wJncrK1i/YdRzxTx0RRPH94PZmTBqibado9raFK3zMQcCErU9DqchRJGtGjJK0eaUU7+slpGRZx2DmmedGCGv6snJNMaAyI7RJJ7M7wVX9bN+/UHhZ7Fj/AxVcM/Xq+FIgYsl3kbC1fVNMb8W9hf+15Gf3JCgrNkYY330+w5bS3logUxo7DwBw99wtDtVu8rmOJSF870pWt1vg+XlovfZXVRdshPJ9ZEScOJUvkDcy1Wy8IcpMT1dB2O7iAIBy/ztSbQDHU9TaRYCV2o0vbxC1H9pjC8vD+wQk7OxP6mO8rLWJtAVcEsy42QIO+mi5Hb0sm6PgxhJOhbrLcvlIg2iZUjMAG//WTZ7okKLEmigIjoJe77mySignS2HD8mavEe3RQqcYC2jYs9DzFnjW7WKvBkJMfCrFpiHBBihYOCKF1CGWvdnitq74OVctuuHnKpjOx6gsq3q6joDaOUgGVgYk7BZi4jd7dykZDA+MPlEz53Aj4XdqZTHHTO+syleARQ6W0FHFp3iCwMPilvko2E205KzdvrJK14aZN3","ephemeralPublicKey":"BP1xX8UPbCcXD/0c9VcOpfFlxdpAPkVoCGlGR2yzmoJADKZ+mJWxtpbeCr3tAqwv0xEWkY+mDWUF8TS+x9HyBWQ\u003d","tag":"R/KBSo2wuEb+N8SvQ1X1rrTsDK06BeqPiBP7n3zIpbI\u003d"}'
                signature: MEQCIF4nOt5aDUPOUgymPFQr9tZzFYJZaiiBsuRsgYUTJ8a1AiA/lLE4pBL5p/FSqHUYgYLN217+DBT5p/A3Heat1twgnw==
                applicationData: VEVTVA==
                version: ECv1
                billingAddress:
                  type: work
                  streetAddress: 200 Universal City Plaza
                  locality: Hollywood
                  region: CA
                  postalCode: '20220'
                  country: US
                  formatted: |-
                    100 Universal City Plaza
                    Hollywood, CA 91608 USA
                  primary: true
    GooglePayReloadResponse:
      value:
        orderId: Order6357194
        transactionId: bb0249284c0946989c6121cb102dc8ea
        saveToVault: false
        destinationCard:
          account:
            cardNumber: '7777280826626715'
          balanceInfo:
            currentBalance: 30.5
            beginBalance: 15.25
            currencyCode:
              code: USD
              number: 840
              currency: US Dollar
            currencyType: BASE
        createdTime: '2023-01-11T10:03:54.769Z'
        fundingInfo:
          approvedAmount: 15.25
          fundingSource:
            type: GOOGLE_PAY
            credit:
              token:
                tokenId: '9440028900173478'
                tokenProvider: TRANS_ARMOR
                expiryDate:
                  month: '12'
                  year: '28'
            googlePay:
              dPanLast4: '3478'
              cardType: VISA
              token:
                tokenId: '9440028900173478'
                tokenProvider: TRANS_ARMOR
                expiryDate:
                  month: '12'
                  year: '28'
        hostExtraInfo:
        - name: APPROVAL_NUMBER
          value: '23635 '
        - name: SEQUENCE_NUMBER
          value: '278840'
        - name: TRANSACTION_DATETIME
          value: 2023-01-11T04:03
    SamsungPayReloadRequest:
      value:
        fdCustomerId: 5e82308296bb41e3adc583e223f6a0fb
        transaction:
          saveToVault: false
          orderId: Order1078948
          merchantId: MO17312456001
          destinationCard:
            account:
              cardNumber: '7777115035974754'
              securityCode: ' '
          fundingInfo:
            fundValue: 15.25
            currencyCode:
              code: USD
              number: 840
              digits: 2
              currency: US Dollar
            fundingSource:
              samsungPay:
                version: EC_v1
                decryptAlias: merchant.com.test.sandbox
                data: eyJhbGciOiJSU0ExXzUiLCJraWQiOiJTZzdHc2dTdGhTS3luTjBRSXRHYlNWOVBoTUJjVEdvanp4MFB0U3kyTnlNPSIsInR5cGUiOiJKT1NFIiwiY2hhbm5lbFNlY3VyaXR5Q29udGV4dCI6IlJTQV9QS0kiLCJlbmMiOiJBMTI4R0NNIn0.S46_CJmqo33afnT7S_PfgOEmLsGtheNi-hIen7KCGj3kJ3hPwqp7EEbOucEi-7JxSc50HVljdHn53rw1_WvwCBEjoisVniN6S0Fe7ZoO2bnuhN3kJErcrYj4k_0nrvg6gQmG530eJQ3Wg_4Kz8NItW6FQRmj0CmeEP6_tw-lNTMXBj8d1PZyYDwZz-54h2o1Os8RMsm3tigudcsBXPwvsMobPgU1NKJhzLecI_9qFvlOYRYdI-1POIkqfJy1aXKLrjumGFMYlPGso148_C7pXzW6pXUybu-mPZtjQolv79BWNSX6IJmkssQRX9Z3aucLq-PGtIl3YmlZlXHt99wXrw.UgRrlF-hRdajlfkA.J1lnY-QHOXUf_IyBssLI7x7NhKU0z1MsGrY818KHSz9wr3j4H2PZgQjXsiedTeIN0yZXS4NfvdjIDsXBAk8z2VIPfk4cGO_PRTbJubjeIfEAkORPLEnwUbcZLRMYLW35LI0JSexilFJ2jcvAn5SoavFE.
                signature: ''
                applicationData: VEVTVA==
                header:
                  ephemeralPublicKey: ''
                  publicKeyHash: Sg7GsgSthSKynN0QItGbSV9PhMBcTGojzx0PtSy2NyM=
                  transactionId: '31323334353637'
                billingAddress:
                  type: work
                  streetAddress: 200 Universal City Plaza
                  locality: Hollywood
                  region: CA
                  postalCode: '20220'
                  country: US
                  formatted: |-
                    100 Universal City Plaza
                    Hollywood, CA 91608 USA
                  primary: true
    SamsungPayReloadResponse:
      value:
        orderId: Order1078948
        transactionId: 61613955dbb64e518b2f2b52604b01a8
        saveToVault: false
        destinationCard:
          account:
            cardNumber: '7777115035974754'
          balanceInfo:
            currentBalance: 30.5
            beginBalance: 15.25
            currencyCode:
              code: USD
              number: 840
              currency: US Dollar
            currencyType: BASE
        createdTime: '2023-01-12T05:48:56.182Z'
        fundingInfo:
          approvedAmount: 15.25
          fundingSource:
            type: SAMSUNG_PAY
            credit:
              token:
                tokenId: '096807876860175'
                tokenProvider: TRANS_ARMOR
                expiryDate:
                  month: '12'
                  year: '25'
            samsungPay:
              token:
                tokenId: '096807876860175'
                tokenProvider: TRANS_ARMOR
                expiryDate:
                  month: '12'
                  year: '25'
              cardType: AMEX
              dPanLast4: '0175'
        hostExtraInfo:
        - name: APPROVAL_NUMBER
          value: ET143234

    VaultedAccountsBalanceMergeRequest:
      value:
        fdCustomerId: ab946a62a5d845b5bb9ff710fcbaf07f
        transaction:
          source:
            vaultedAccount:
              fdAccountId: 8a7f8d908631951201863c5ccce201bc
          destination:
            vaultedAccount:
              fdAccountId: 8a7f83868631781801863c8b82ec0202

    VaultedAccountsBalanceMergeResponse:
      value:
        transactionId: 134418156e4547f59a1921a997691b45
        source:
          account:
            cardNumber: '7777323952676090'
            alias: '6090'
            expiryDate:
              month: '01'
              year: '25'
          vaultedAccount:
            fdAccountId: 8a7f8d908631951201863c5ccce201bc
        destination:
          account:
            cardNumber: '7777323952686981'
            alias: '6981'
            expiryDate:
              month: '01'
              year: '25'
            balance:
              currentBalance: 500.01
              beginBalance: 0.01
              currencyCode:
                code: USD
                number: 840
                currency: US Dollar
              currencyType: BASE
          vaultedAccount:
            fdAccountId: 8a7f83868631781801863c8b82ec0202

    VaultedCardTransactionHistoryRequest:
      value:
        fdCustomerId: ab946a62a5d845b5bb9ff710fcbaf07f
        transaction:
          account:
            vaultedAccount:
              fdAccountId: 8a7f83868631781801863c8b82ec0202

    VaultedCardTransactionHistoryResponse:
      value:
        pages:
          firstPage: true
          lastPage: true
          currentPage: 1
          currentPageRecords: 2
          totalPages: 1
          totalRecords: 2
          sortOrder: desc
        transactions:
        - amount: 500
          currencyCode:
            code: USD
            number: 840
          info: Balance Merge
          transactionTime: '2023-02-10T18:18:00.000Z'
          altMerchantId: '000009870001'
        - amount: 0.01
          currencyCode:
            code: USD
            number: 840
          info: Activate Virtual Card
          transactionTime: '2023-02-10T18:17:00.000Z'
          altMerchantId: '000000010001'


    PlainCardTransactionHistoryRequest:
      value:
        transaction:
          account:
            cardNumber: '7777323952686981'
            merchantId: '97483900003'
            altMerchantId: '001'

    PlainCardTransactionHistoryResponse:
      value:
        pages:
          firstPage: true
          lastPage: true
          currentPage: 1
          currentPageRecords: 2
          totalPages: 1
          totalRecords: 2
          sortOrder: desc
        transactions:
        - amount: 500
          currencyCode:
            code: USD
            number: 840
          info: Balance Merge
          transactionTime: '2023-02-10T18:18:00.000Z'
          altMerchantId: '000009870001'
        - amount: 0.01
          currencyCode:
            code: USD
            number: 840
          info: Activate Virtual Card
          transactionTime: '2023-02-10T18:17:00.000Z'
          altMerchantId: '000000010001'

    ReloadVoidResponse:
      value:
        cardNumber: '7777323952676090'
        cardSubType: Test
        alias: '6090'
        expiryDate:
          month: '01'
          year: '25'
        balance:
          currentBalance: 0
          beginBalance: 500
          currencyCode:
            code: USD
            number: 840
            currency: US Dollar
          currencyType: BASE
    PurchaseVoidResponse:
      value:
        cardNumber: '7777347468914102'
        alias: '4102'
        expiryDate:
          month: '01'
          year: '25'
        balance:
          currentBalance: 0
          beginBalance: 15.25
          currencyCode:
            code: USD
            number: 840
            currency: US Dollar
          currencyType: BASE
        hostExtraInfo:
        - name: APPROVAL_NUMBER
          value: '23633 '
        - name: SEQUENCE_NUMBER
          value: '170674'
        - name: NETWORK_TRANSACTION_ID
          value: '012000111094717'

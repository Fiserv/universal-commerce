#-------------------------------------
# Document Change Log
# 0.2.2
#     - New V2 endpoints for multi transaction use cases
# 0.2.1
#     - Added Walmart pay as fundingSource
#     - Added SEC code for ACH
#     - Added EBT as funding source
#     - Added Merchant id as header field
#     - Added asset provider field in the ACH
# 0.2.0
#     - Added dynamic descriptors API model in Refund and Void
#     - Added 'OTHER' CreditCardType
#     - Added fields in ThreeDSecure object
#     - Added Price tier in POSItem
#     - Added Alternate merchant id
#     - Added PAN type and BIN
#     - Added Expiry Date to InApp entities
#     - Added new API for charge details
#     - Added Developer Email in ApplePay/GooglePay/SamsungPay objects
#     - Added ECIIndicator in ApplePay/GooglePay/SamsungPay objects
#     - Added local payment methods for Ideal and Bancontact
#     - Added exemptionCode
# 0.1.9
#     - Updated PriceAdjustment to add maxQuantity
#     - Added AmountSplitInfo and DeliveryService API Models
#     - Added GET endpoints for Sale/Auth/Capture/Refund based on client request id
#     - Added FAILED payment status
#     - Added OfferStatus in the PriceAdjustments
#     - Added washcodes under POSItem
#     - Added purchase info in Refund and Void entity
#     - Added dynamic descriptors API model
#     - Added external customer id
# 0.1.8
#     - Added QRCodeId for STAC payment
#     - Added 3ds web support
#     - Added account type for ACH
# 0.1.7
#     - Added 3ds challenge transaction expiry date time in ThreeDSecure
#     - Added credit in Paypal object
#     - Added enrollment status and bank name in the ACH object
#     - Added Vipps as a funding source.
#     - Added Fleet as a funding source.
#     - Added NVP in the Void API
#     - Updated PriceAdjustment as list under POSItem
# 0.1.6
#     - Added new api to support refund on authorization.
#     - Added secirityCode in valuted Account
#     - Added VAULTED_ACCOUNT as AccountType
#     - Added Accept-Language header field
# 0.1.5
#     - Added Link in the Error object.
#     - Added retailer partner id for marketplace
#     - Added Amazon Pay funding source
#     - acsSignedContent and CardType in threeDSecureInfo object
#     - Added billing phonenumber and Order object
#     - Moved OrderId to Order object
# 0.1.4
#     - Added ServiceLevelCode under POSItem
#     - Added ACH under funding source.
#     - Added Venmo under funding source.
#     - Added PATCH operation on auth and sale transactions
#     - Added ThreeDSecure object under Auth and Sale transactions
#     - Added PriceAdjustment under POSItem
# 0.1.3
#     - Adding NVP with valueAsList
#     - Added 'billingAddress' element in 'AndroidPay', 'ApplePay', 'GooglePay' and 'SamsungPay'
#     - update in DeviceInfo.
# 0.1.2
#     - No change.
# 0.1.1
#     - Added 'cardType' attribute in 'ApplePay'
#     - Added 'cardType', 'dPanLast4' attribute in 'AndroidPay', 'GooglePay' and 'SamsungPay'
#     - Added 'hostExtraInfo' in 'Error'
#     - Added 'id' attribute to Link
# 0.1.0
#   - Added 'googlePay' as 'fundingSource'
#   - Added client-token in the header field
# 0.0.9
#    - Introduced 'industrySpecificInfo' element in Authorization and Capture object
#    - Introduced 'ach' entity in FundingSource object
#    - Added 'cardSubType' attribute inside Credit object
#    - Added 'nonce' attribute in Paypal object
#    - FulePurchaseInfo added
# 0.0.8
#    - No change.
# 0.0.7
#   - Updated ReferenceToken to have more accurate attribute names, removed use value
#   - Cleaned up examples in the models
#   - Added 'type' attribute to 'FundingSource' object.
#   - Added 'createdDateTime' and 'lastUpdatedDateTime' attributes to 'Authorization', 'Capture', 'Sale' and 'Refund' objects.
# 0.0.6
#   - Changed PaymentToken to same Token object used in Account services and not specific to payments, renamed to ReferenceToken
#   - Added a @token to the Authorization, Credit, Prepaid and Sale models whereby a token generated or retrieved during the process can be returned to the client.
#   - Removed ActionType enum
# 0.0.5
#   - Updated endpoints to call void directly, moved Action model to be VoidRequest
#   - authorizations
#     - Removed authorizationType, globalReceiptId and networkAuthId from Authorization object
#     - Replaced PATCH with POST actions for void operation
#   - captures
#     - Removed fdAuthorizationId, orderId, merchantId, storeId from Capture object.
#     - Added refund attribute to Capture object.
#   - refunds
#     - Removed fdAuthorizationId, fdCaptureId from Refund object.
#   - sales
#     - Added new apis for Sale transactions.
#   - Misc
#       - removed settlementDateTime, localTransactionDateTime from Authorization
#       - changed localTransactionDateTime to just transactionDateTime elsewhere
#       - added hostExtraInfo to Auth, Capture, Sale, & Refund models
# 0.0.4
#     - No change.
# 0.0.3
#     - No change.
# 0.0.2
#     - Added 'osVersion' attribute to 'DeviceInfo' object.
# 0.0.1
#     - Initial Version
#-------------------------------------
swagger: '2.0'
info:
  version: 0.2.2
  title: uCom Payment Services
  description: Use these services to initiate AUTH/CAPTURE/SALE transactions using a payment account. This message supports transactions for enrolled and non-enrolled funding accounts including accounts enrolled with external payment systems like Apple Pay, Android Pay, Samsung Pay, and Visa Checkout.
tags:
  - name: authorization
  - name: capture
  - name: refund
  - name: sale
host: int.api.firstdata.com
basePath: /ucom
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1/payments/auths:
    post:
      tags:
        - authorization
      summary: Create a payment authorization
      description: Must include a funding source, authorization type and requested amount greater than 0.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdParam'
        - $ref: '#/parameters/RetailerPartnerIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/AuthRequest'
      responses:
        201:
          $ref: '#/responses/AuthorizationCreated'
        202:
          $ref: '#/responses/AuthorizationPartiallyCreated'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/ServerError'
    get:
      tags:
        - authorization
      summary: Get a specific payment authorization
      description: Fetch details of a payment authorization
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/RetailerPartnerIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/ClientRequestIdQueryParam'
        - $ref: '#/parameters/SubMerchantIdParam'
      responses:
        200:
          $ref: '#/responses/AuthorizationOK'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'

  /v1/payments/auths/{fdAuthorizationId}:
    patch:
      tags:
        - authorization
      summary: Patch a specific payment authorization
      description: Proceed the transaction with action type
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/FdAuthorizationIdParam'
        - $ref: '#/parameters/RetailerPartnerIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            type: object
            properties:
              action:
                $ref: '#/definitions/UpdateActionType'
              threeDSecureInfo:
                $ref: '#/definitions/ThreeDSecure'
      responses:
        200:
          $ref: '#/responses/AuthorizationOK'
        204:
          $ref: '#/responses/NoContent'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'

    get:
      tags:
        - authorization
      summary: Get a specific payment authorization
      description: Fetch details of a payment authorization
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/FdAuthorizationIdParam'
        - $ref: '#/parameters/RetailerPartnerIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
      responses:
        200:
          $ref: '#/responses/AuthorizationOK'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'

  /v1/payments/auths/{fdAuthorizationId}/void:
    post:
      tags:
        - authorization
      summary: Execute an action on a payment authorization.
      description: Used to void the payment authorization.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdParam'
        - $ref: '#/parameters/FdAuthorizationIdParam'
        - $ref: '#/parameters/RetailerPartnerIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/VoidRequest'
      responses:
        200:
          $ref: '#/responses/AuthorizationOK'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'

  /v1/payments/auths/{fdAuthorizationId}/captures:
    post:
      tags:
        - authorization
      summary: Execute capture on a payment authorization.
      description: Capture aka fulfill a previous authorization.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdParam'
        - $ref: '#/parameters/FdAuthorizationIdParam'
        - $ref: '#/parameters/RetailerPartnerIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          schema:
            $ref: '#/definitions/CaptureRequest'
      responses:
        201:
          $ref: '#/responses/CaptureCreated'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/ServerError'

  /v1/payments/auths/{fdAuthorizationId}/refunds:
    post:
      tags:
        - authorization
      summary: Execute a refund on a payment authorization.
      description: Execute a refund on a payment authorization .
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdParam'
        - $ref: '#/parameters/FdAuthorizationIdParam'
        - $ref: '#/parameters/RetailerPartnerIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          schema:
            $ref: '#/definitions/RefundRequest'
      responses:
        201:
          $ref: '#/responses/RefundCreated'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/ServerError'

  /v1/payments/captures:
    get:
      tags:
        - capture
      summary: Get payment capture details.
      description: Fetch captured payment details with a capture id.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/RetailerPartnerIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/ClientRequestIdQueryParam'
        - $ref: '#/parameters/SubMerchantIdParam'
      responses:
        200:
          $ref: '#/responses/CaptureCreated'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/BadRequest'

  /v1/payments/captures/{fdCaptureId}:
    get:
      tags:
        - capture
      summary: Get payment capture details.
      description: Fetch captured payment details with a capture id.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/FdCaptureIdParam'
        - $ref: '#/parameters/RetailerPartnerIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
      responses:
        200:
          $ref: '#/responses/CaptureCreated'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/BadRequest'

  /v1/payments/captures/{fdCaptureId}/void:
    post:
      tags:
        - capture
      summary: Execute an action on a payment capture
      description: Used to void the capture.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdParam'
        - $ref: '#/parameters/FdCaptureIdParam'
        - $ref: '#/parameters/RetailerPartnerIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          schema:
            $ref: '#/definitions/VoidRequest'
      responses:
        200:
          $ref: '#/responses/CaptureOK'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'

  /v1/payments/captures/{fdCaptureId}/refunds:
    post:
      tags:
        - capture
      summary: Execute a refund on a payment capture.
      description: Refund a capture .
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdParam'
        - $ref: '#/parameters/FdCaptureIdParam'
        - $ref: '#/parameters/RetailerPartnerIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          schema:
            $ref: '#/definitions/RefundRequest'
      responses:
        201:
          $ref: '#/responses/RefundCreated'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/ServerError'

  /v1/payments/sales:
    post:
      tags:
        - sale
      summary: Create a payment sale transaction.
      description: Must include a funding source and requested amount greater than 0.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdParam'
        - $ref: '#/parameters/RetailerPartnerIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/SaleRequest'
      responses:
        201:
          $ref: '#/responses/SaleCreated'
        202:
          $ref: '#/responses/SalePartiallyCreated'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/ServerError'

    get:
      tags:
        - sale
      summary: Get a specific sale transaction.
      description: Fetch a Sale detail object
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/RetailerPartnerIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/ClientRequestIdQueryParam'
        - $ref: '#/parameters/SubMerchantIdParam'
      responses:
        200:
          $ref: '#/responses/SaleOK'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'

  /v1/payments/sales/{fdSaleId}:
    patch:
      tags:
        - sale
      summary: Patch a specific sale transaction.
      description: Proceed sale transaction with specific action type
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/FdSaleIdParam'
        - $ref: '#/parameters/RetailerPartnerIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            type: object
            properties:
              action:
                $ref: '#/definitions/UpdateActionType'
              threeDSecureInfo:
                $ref: '#/definitions/ThreeDSecure'
      responses:
        200:
          $ref: '#/responses/SaleOK'
        204:
          $ref: '#/responses/NoContent'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'

    get:
      tags:
        - sale
      summary: Get a specific sale transaction.
      description: Fetch a Sale detail object
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/FdSaleIdParam'
        - $ref: '#/parameters/RetailerPartnerIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
      responses:
        200:
          $ref: '#/responses/SaleOK'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'

  /v1/payments/sales/{fdSaleId}/void:
    post:
      tags:
        - sale
      summary: Execute an action on a specific sale transaction.
      description: Used to cancel/void a sale transaction.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/FdSaleIdParam'
        - $ref: '#/parameters/RetailerPartnerIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/VoidRequest'
      responses:
        200:
          $ref: '#/responses/SaleOK'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'

  /v1/payments/sales/{fdSaleId}/refunds:
    post:
      tags:
        - sale
      summary: Execute a refund on a payment capture.
      description: Refund a 'sale' transaction.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdParam'
        - $ref: '#/parameters/FdSaleIdParam'
        - $ref: '#/parameters/RetailerPartnerIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          schema:
            $ref: '#/definitions/RefundRequest'
      responses:
        201:
          $ref: '#/responses/RefundCreated'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/ServerError'

  /v2/payments/multi-sales:
    post:
      tags:
        - sale
      summary: Create multiple payment sale transactions.
      description: Must include a funding source and requested amount greater than 0 for each payment sale
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdParam'
        - $ref: '#/parameters/RetailerPartnerIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/MultiSaleRequest'
      responses:
        201:
          description: Sale created
          schema:
            $ref: '#/definitions/MultiSale'
        207:
          description: Multiple status
          schema:
            $ref: '#/definitions/MultiSale'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          $ref: '#/responses/Conflict'
        425:
          $ref: '#/responses/TooEarly'
        500:
          $ref: '#/responses/ServerError'


  /v2/payments/multi-sales/{fdParentTransactionId}/refunds:
    post:
      tags:
        - sale
      summary: Execute a refund for multi sale transactions.
      description: Refund a 'multi-sale' transaction.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdParam'
        - $ref: '#/parameters/FdParentTransactionIdParam'
        - $ref: '#/parameters/RetailerPartnerIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          schema:
            $ref: '#/definitions/MultiRefundRequest'
      responses:
        201:
          description: Refund transaction response
          schema:
            $ref: '#/definitions/MultiRefund'
        207:
          description: Partial Refund transaction response
          schema:
            $ref: '#/definitions/MultiRefund'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/ServerError'


  /v2/payments/multi-sales/{fdParentTransactionId}/void:
    post:
      tags:
        - sale
      summary: Execute void for multi sale transactions.
      description: Void a 'multi-sale' transaction.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/FdParentTransactionIdParam'
        - $ref: '#/parameters/ClientRequestIdParam'
        - $ref: '#/parameters/RetailerPartnerIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/MultiVoidRequest'
      responses:
        200:
          description: Void transaction response
          schema:
            $ref: '#/definitions/MultiVoid'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'


  /v1/payments/refunds:
    get:
      tags:
        - refund
      summary: Get refund transaction details
      description: Fetch the refund transaction details with the refund id.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/RetailerPartnerIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/ClientRequestIdQueryParam'
        - $ref: '#/parameters/SubMerchantIdParam'
      responses:
        200:
          $ref: '#/responses/RefundOK'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/BadRequest'

  /v1/payments/refunds/{fdRefundId}:
    get:
      tags:
        - refund
      summary: Get refund transaction details
      description: Fetch the refund transaction details with the refund id.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/FdRefundIdParam'
        - $ref: '#/parameters/RetailerPartnerIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
      responses:
        200:
          $ref: '#/responses/RefundOK'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/BadRequest'

  /v1/payments/refunds/{fdRefundId}/void:
    post:
      tags:
      - refund
      summary: Execute an action on payment refund.
      description: Used to cancel the refund.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdParam'
        - $ref: '#/parameters/FdRefundIdParam'
        - $ref: '#/parameters/RetailerPartnerIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          schema:
            $ref: '#/definitions/VoidRequest'
      responses:
        200:
          $ref: '#/responses/RefundOK'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'


  /v2/payments/multi-refunds:
    post:
      tags:
        - refund
      summary: Execute a refund for multi transactions.
      description: Refund a multi transaction.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdParam'
        - $ref: '#/parameters/RetailerPartnerIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          schema:
            $ref: '#/definitions/MultiRefundRequest'
      responses:
        201:
          description: Refund transaction response
          schema:
            $ref: '#/definitions/MultiRefund'
        207:
          description: Partial Refund transaction response
          schema:
            $ref: '#/definitions/MultiRefund'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          $ref: '#/responses/Conflict'
        500:
          $ref: '#/responses/ServerError'

  /v2/payments/multi-refunds/{fdParentTransactionId}/void:
    post:
      tags:
      - refund
      summary: Execute an action on multi payment refund.
      description: Used to cancel the refunds.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdParam'
        - $ref: '#/parameters/FdParentTransactionIdParam'
        - $ref: '#/parameters/RetailerPartnerIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          schema:
            $ref: '#/definitions/MultiVoidRequest'
      responses:
        200:
          description: Refund transaction response
          schema:
            $ref: '#/definitions/MultiVoid'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'

  /v1/payments/charges:
    post:
      tags:
      - charge
      summary:  Payment charge details.
      description: Used to get the details about fee charges.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdParam'
        - $ref: '#/parameters/RetailerPartnerIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          schema:
            $ref: '#/definitions/ChargeRequest'
      responses:
        200:
          $ref: '#/responses/ChargeOK'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'


  /v2/payments/void:
    get:
      tags:
        - void
      summary: Execute void for sale transaction.
      description: Void a transaction.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdQueryParam'
        - $ref: '#/parameters/RetailerPartnerIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
      responses:
        200:
          description: Void transaction response
          schema:
            $ref: '#/definitions/Void'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'
    post:
      tags:
        - void
      summary: Execute void for sale transaction.
      description: Void a transaction.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdParam'
        - $ref: '#/parameters/RetailerPartnerIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/VoidRequest'
      responses:
        200:
          description: Void transaction response
          schema:
            $ref: '#/definitions/Void'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'

  /v2/payments/multi-void:
    post:
      tags:
        - void
      summary: Execute void for multi sale transactions.
      description: Void a multiple transactions.
      parameters:
        - $ref: '#/parameters/ApiKeyParam'
        - $ref: '#/parameters/TimestampParam'
        - $ref: '#/parameters/AuthorizationParam'
        - $ref: '#/parameters/ClientTokenParam'
        - $ref: '#/parameters/ClientRequestIdParam'
        - $ref: '#/parameters/RetailerPartnerIdParam'
        - $ref: '#/parameters/AcceptLanguageParam'
        - $ref: '#/parameters/SubMerchantIdParam'
        - name: payload
          in: body
          required: true
          schema:
            $ref: '#/definitions/MultiVoidRequest'
      responses:
        200:
          description: Void transaction response
          schema:
            $ref: '#/definitions/MultiVoid'
        400:
          $ref: '#/responses/BadRequest'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/ServerError'

definitions:
#-------------------------------------
# Operational Models
#-------------------------------------
  AuthRequest:
    title: Authorization Request
    type: object
    properties:
      fdCustomerId:
        $ref: '#/definitions/FdCustomerId'
      externalCustomerId:
        $ref: '#/definitions/ExternalCustomerId'
      authorization:
        $ref: '#/definitions/Authorization'
      deviceInfo:
        $ref: '#/definitions/DeviceInfo'

  CaptureRequest:
    title: Capture Request
    type: object
    properties:
      fdCustomerId:
        $ref: '#/definitions/FdCustomerId'
      externalCustomerId:
        $ref: '#/definitions/ExternalCustomerId'
      capture:
        $ref: '#/definitions/Capture'
      deviceInfo:
        $ref: '#/definitions/DeviceInfo'

  ChargeRequest:
    type: object
    properties:
      stateCode:
        type: string
        description: state code value.
      fundingSource:
        $ref: '#/definitions/FundingSource'
      deviceInfo:
        $ref: '#/definitions/DeviceInfo'

  MultiSaleRequest:
    type: object
    properties:
      fdCustomerId:
        $ref: '#/definitions/FdCustomerId'
      externalCustomerId:
        $ref: '#/definitions/ExternalCustomerId'
      parentExternalId:
        type: string
        description: External transaction id reference
      merchantTransactionId:
        type: string
        description: Merchant transaction id
      postDate:
        description: Settlement date for the transaction. Format- MMDDYYYY
        type: string
        format: date
        example: "08232019"
      hostExtraInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
      isPartialPaymentAllowed:
        description: Flag that indicates if partial transaction is allowed or not
        type: boolean
      isPartialSuccessAllowed:
        description: Flag that indicates if partial success is allowed or not
        type: boolean
      purchaseInfo:
        $ref: '#/definitions/PurchaseInfo'
      replayCount:
        description: Indicates request retry attempt count.
        type: number
      sales:
        type: array
        items:
          $ref: '#/definitions/Sale'
      deviceInfo:
        $ref: '#/definitions/DeviceInfo'

  MultiRefundRequest:
    type: object
    properties:
      fdCustomerId:
        $ref: '#/definitions/FdCustomerId'
      externalCustomerId:
        $ref: '#/definitions/ExternalCustomerId'
      parentExternalId:
        type: string
        description: External transaction id reference
      isPartialSuccessAllowed:
        description: Flag that indicates if partial success is allowed or not
        type: boolean
      purchaseInfo:
        $ref: '#/definitions/PurchaseInfo'
      replayCount:
        description: Indicates request retry attempt count.
        type: number
      merchantTransactionId:
        type: string
        description: Merchant transaction id
      postDate:
        description: Settlement date for the transaction. Format- MMDDYYYY
        type: string
        format: date
        example: "08232019"
      hostExtraInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
      refunds:
        type: array
        items:
          $ref: '#/definitions/Refund'
      deviceInfo:
        $ref: '#/definitions/DeviceInfo'

  MultiVoidRequest:
    type: object
    properties:
      fdCustomerId:
        $ref: '#/definitions/FdCustomerId'
      externalCustomerId:
        $ref: '#/definitions/ExternalCustomerId'
      parentExternalId:
        type: string
        description: External transaction id reference
      purchaseInfo:
        $ref: '#/definitions/PurchaseInfo'
      replayCount:
        description: Indicates request retry attempt count.
        type: number
      clientRequestId:
        type: string
        description: Client request id that was used in the sale/refund/void
      operationType:
        $ref: '#/definitions/OperationType'
      merchantTransactionId:
        type: string
        description: Merchant transaction id
      postDate:
        description: Settlement date for the transaction. Format- MMDDYYYY
        type: string
        format: date
        example: "08232019"
      hostExtraInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
      voids:
        type: array
        items:
          $ref: '#/definitions/Void'
      deviceInfo:
        $ref: '#/definitions/DeviceInfo'

  RefundRequest:
    title: Refund Request
    type: object
    properties:
      fdCustomerId:
        $ref: '#/definitions/FdCustomerId'
      externalCustomerId:
        $ref: '#/definitions/ExternalCustomerId'
      refund:
        $ref: '#/definitions/Refund'
      deviceInfo:
        $ref: '#/definitions/DeviceInfo'

  SaleRequest:
    type: object
    properties:
      fdCustomerId:
        $ref: '#/definitions/FdCustomerId'
      externalCustomerId:
        $ref: '#/definitions/ExternalCustomerId'
      sale:
        $ref: '#/definitions/Sale'
      deviceInfo:
        $ref: '#/definitions/DeviceInfo'

  VoidRequest:
    type: object
    properties:
      fdCustomerId:
        $ref: '#/definitions/FdCustomerId'
      externalCustomerId:
        $ref: '#/definitions/ExternalCustomerId'
      deviceInfo:
        $ref: '#/definitions/DeviceInfo'
      void:
        $ref: '#/definitions/Void'


#-------------------------------------
# Resource Models
#-------------------------------------
  ACH:
    description: Information about an ACH account
    type: object
    properties:
      accountNumber:
        type: string
        description: Unique number identifying the ACH account provided by Financial institution.
        example: '92658250156'
      routingNumber:
        type: string
        description: Number to identify the financial institution
        example: '999999999'
      secCode:
        type: string
        description: SEC Code is optional data, It is specifically required for ACH account which is ruled by NACHA compliance.
      cardNumber:
        description: ACH Card number, can only be sent when vaulting an account.  This field will NOT be present in responses.
        type: string
        example: "9111111111111111"
      cardType:
        $ref: '#/definitions/AchCardType'
      securityCode:
        type: string
        description: Code to validate the ACH account, like micro deposit or security code.
        example: '278356'
      alias:
        description: Last four values of the cardNumber
        type: string
        readOnly: true
        example: "1111"
      enrollmentStatus:
        $ref: '#/definitions/AchEnrollmentStatus'
      enrollmentSubStatuses:
        type: array
        items:
          $ref: '#/definitions/AchEnrollmentSubStatus'
      accountType:
        $ref: '#/definitions/AchAccountType'
      bankName:
        type: string
        description: Name of the bank associated with the ACH account
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      assetProvider:
        $ref: '#/definitions/AssetProvider'

  Address:
    description: A physical mailing address for this user.
    type: object
    properties:
      type:
        description: Canonical type values of "work", "home", "billing" and "other".
        type: string
      streetAddress:
        description: The full street address component, which may include house number, street name, P.O. box, and multi-line extended street address information.
        type: string
      locality:
        description: The city or locality component.
        type: string
      region:
        description: The state or region component.
        type: string
      postalCode:
        description: The zip code or postal code component.
        type: string
      country:
        description: The country name component.  When specified, the value MUST be in ISO 3166-1 "alpha-2" code format; e.g., the United States and Sweden are "US" and "SE", respectively.
        type: string
      formatted:
        description: The full mailing address, formatted for display or use with a mailing label.
        type: string
      primary:
        description: Indicates if this is the default address for the associated resource. It only has meaning when used in a set or array of addresses.
        type: boolean
    example:
      type: "work"
      streetAddress: "100 Universal City Plaza"
      locality: "Hollywood"
      region: "CA"
      postalCode: "91608"
      country: "US"
      formatted: "100 Universal City Plaza\nHollywood, CA 91608 US"
      primary: true

  AndroidPay:
    type: object
    properties:
      data:
        type: string
        example: "3CguW5ecfTzO...03d"
      signature:
        type: string
        example: "MIAGCSqGSIb......AAAA=="
      decryptAlias:
        description: field of the public key certificate.
        type: string
        example: "oslo.com.xxx.Prod_mer"
      dPanLast4:
        type: string
        example: "9876"
      cardType:
        $ref: '#/definitions/CreditCardType'
        example: "VISA"
      header:
        type: object
        properties:
          ephemeralPublicKey:
            type: string
            example: "MFkwEw...03d"
          publicKeyHash:
            type: string
            example: "+vbONw...IM="
      token:
        $ref: '#/definitions/ReferenceToken'
      billingAddress:
        $ref: '#/definitions/Address'
      billingPhone:
        $ref: '#/definitions/Phone'

  AmazonPay:
    type: object
    properties:
      token:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      chargeId:
        type: string
        example: "73883992djj39939djj929992jj08838"
      chargeReferenceId:
        type: string
        example: "8jdw838dhhskk9299299299ueuuue838"
      credit:
        $ref: '#/definitions/Credit'

  ApplePay:
    type: object
    properties:
      version:
        type: string
        example: "EC_v1"
      developerEmail:
        type: string
      signature:
        type: string
        example: "MIAGCSqGSIb......AAAA=="
      decryptAlias:
        description: field of the public key certificate.
        type: string
        example: "oslo.com.xxx.Prod_mer"
      data:
        type: string
        example: "3CguW5ecfTz...Yuhw="
      applicationData:
        type: string
        example: "VEVTVA=="
      dPanLast4:
        type: string
        example: "9876"
      bin:
        type: string
      eciIndicator:
        type: string
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      panType:
        type: string
      cardType:
        $ref: '#/definitions/CreditCardType'
        example: "VISA"
      header:
        type: object
        properties:
          applicationDataHash:
            type: string
          ephemeralPublicKey:
            type: string
            example: "MFkwEwYHKoZIzj0CIKoZIz.....NBQQ=="
          publicKeyHash:
            type: string
            example: "+vbONwRlVqJX0........"
          transactionId:
            type: string
            example: "3827c5a02638.....34d50"
      token:
        $ref: '#/definitions/ReferenceToken'
      billingAddress:
        $ref: '#/definitions/Address'
      billingPhone:
        $ref: '#/definitions/Phone'

  ApprovedAmount:
    title: Approved Amount
    description: Amount authorized according to the request type [auth, capture, refund, etc] in lower denomination.  The value is read-only on payment requests.  For a void, the value is required.
    type: number
    format: double
    minimum: 0
    exclusiveMinimum: true
    example: "500.00"

  Authorization:
    description: Authorization information - can only be ONE of the funding source among account, credit, prepaid, ApplePay.
    type: object
    required:
      - requestedAmount
    properties:
      fdAuthorizationId:
        description: Unique Identifier provided by payment platform for a payment authorization transaction.
        type: string
        readOnly: true
        example: "8a34144657d0aa6e0157d3808ed000f2"
      authStatus:
        $ref: '#/definitions/PaymentStatus'
      transactionSubtype:
        description: Indicates subtype of a given transaction for EBT, ie EBTCASH or EBTSNAP
        type: string
      merchantId:
        description: Merchant identifier where the transaction is being performed.
        type: string
        example: "M117008616001"
      altMerchantId:
        description: Alternate Merchant identifier where the transaction is being performed.
        type: string
        example: "23232"
      merchantTokenCode:
        description: Merchant token code used for token generation
        type: string
      merchantTerminalId:
        description: Merchant terminal identifier
        type: string
      storeId:
        description: Store identifier where the transaction is being performed.
        type: string
        example: "123456"
      outdoorSale:
        description: Flag to indicate if the transaction is made outside the store.
        type: boolean
        default: false
        example: true
      exemptionCode:
        description: Exemption code for 3DS transaction
        type: string
      transactionOrigin:
        $ref: '#/definitions/TransactionOrigin'
      requestedAmount:
        $ref: '#/definitions/RequestedAmount'
      approvedAmount:
        $ref: '#/definitions/ApprovedAmount'
      currencyCode:
        $ref: '#/definitions/ISO-4217'
      dynamicDescriptors:
        $ref: '#/definitions/DynamicDescriptors'
      partialPaymentAllowed:
        description: Flag that indicates if partial transaction is allowed or not
        type: boolean
      fundingSource:
        $ref: '#/definitions/FundingSource'
      purchaseInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/PurchaseInfo'
      amountSplitInfo:
        $ref: '#/definitions/AmountSplitInfo'
      industrySpecificInfo:
          description: Industry specific details like petro for example.
          type: object
          properties:
            fuelPurchaseInfo:
              $ref: '#/definitions/FuelPurchaseInfo'
      qrCodeId:
        type: string
        description: Unique Identifier provided by payment platform for a given funding source.
      stacId:
        type: string
        description: Unique Identifier provided by payment platform for a given funding source.
      transactionDateTime:
        description: Date and time of the transaction.
        type: string
        readOnly: true
        format: date-time
        example: "2016-04-16T16:06:05Z"
      createdDateTime:
        description: Date and time of resource creation.
        type: string
        readOnly: true
        format: date-time
        example: "2016-04-16T16:06:05Z"
      lastUpdatedDateTime:
        description: Last updated Date and time of resource.
        type: string
        readOnly: true
        format: date-time
        example: "2016-04-16T16:06:05Z"
      hostExtraInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
      threeDSecureInfo:
          $ref: '#/definitions/ThreeDSecure'
      fleetData:
        $ref: '#/definitions/FleetData'
      _links:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/Link'
        uniqueItems: true
      captures:
        description: Array of captures associated with the payment authorization.
        type: array
        items:
          $ref: '#/definitions/Capture'
        readOnly: true

  AmountSplitInfo:
    description: Amount split up based on service selected at the time of transaction
    type: object
    properties:
      orderAmount:
        type: number
        format: double
        minimum: 0
        exclusiveMinimum: true
      deliveryServiceFee:
        type: number
        format: double
        minimum: 0
        exclusiveMinimum: true
      driverTip:
        type: number
        format: double
        minimum: 0
        exclusiveMinimum: true
      taxAmount:
        type: number
        format: double
        minimum: 0
        exclusiveMinimum: true
      vatAmount:
        type: number
        format: double
        minimum: 0
        exclusiveMinimum: true
      corporateFee:
        type: number
        format: double
        minimum: 0
        exclusiveMinimum: true

  AssetProvider:
    type: object
    properties:
      providerName:
        type: string
        example: "coinbase"

  Bancontact:
    type: object
    properties:
      returnUrl:
        type: string
      deepLink:
        type: string
      alias:
        type: string
        example: "9876"
      cardType:
        $ref: '#/definitions/CreditCardType'
        example: "VISA"

  Capture:
    description: Information related to make a capture on a previous authorization. When requested amount not provided the full authorized amount will be applied for capture.
    type: object
    properties:
      fdCaptureId:
        description: Unique identifier provided for a payment capture.
        type: string
        readOnly: true
        example: "cap4144657d0aa6e0157d3808ed000f2"
      status:
        $ref: '#/definitions/PaymentStatus'
      requestedAmount:
        $ref: '#/definitions/RequestedAmount'
      approvedAmount:
        $ref: '#/definitions/ApprovedAmount'
      currencyCode:
        $ref: '#/definitions/ISO-4217'
      dynamicDescriptors:
        $ref: '#/definitions/DynamicDescriptors'
      transactionSubtype:
        description: Indicates subtype of a given transaction for EBT, ie EBTCASH or EBTSNAP
        type: string
      captureCount:
        description: Specifies the current capture count among the required ones. Required only for multi capture transactions.
        type: integer
        format: int32
        example: 1
      captureTotalCount:
        description: Specifies the total captures that are intended to be processed in the authorization. Required only for multi capture transactions.
        type: integer
        format: int32
        example: 2
      amountSplitInfo:
        $ref: '#/definitions/AmountSplitInfo'
      purchaseInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/PurchaseInfo'
      industrySpecificInfo:
          description: Industry specific details like petro for example.
          type: object
          properties:
            fuelPurchaseInfo:
              $ref: '#/definitions/FuelPurchaseInfo'
      transactionDateTime:
        description: Date and time of the transaction.
        type: string
        readOnly: true
        format: date-time
        example: "2016-04-16T16:06:05Z"
      createdDateTime:
        description: Date and time of resource creation.
        type: string
        readOnly: true
        format: date-time
        example: "2016-04-16T16:06:05Z"
      lastUpdatedDateTime:
        description: Last updated Date and time of resource.
        type: string
        readOnly: true
        format: date-time
        example: "2016-04-16T16:06:05Z"
      hostExtraInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
      refunds:
        description: Array of refunds associated with the payment capture.
        type: array
        items:
          $ref: '#/definitions/Refund'
        readOnly: true

  Credit:
    description: Information on a credit account
    type: object
    properties:
      cardNumber:
        description: Primary account number, can only be sent when vaulting an account.  This field will NOT be present in responses.
        type: string
        example: "4111111111111111"
      bin:
        type: string
      nameOnCard:
        description: Name as printed on physical card or on virtual account
        type: string
        example: "John Smith"
      alias:
        description: Last four values of the cardNumber
        type: string
        readOnly: true
        example: "1111"
      cardType:
        $ref: '#/definitions/CreditCardType'
      cardSubType:
        description: Merchant or brand specific information about the type of account
        type: string
        example: "ABCD"
      billingAddress:
        $ref: '#/definitions/Address'
      billingPhone:
        $ref: '#/definitions/Phone'
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      securityCode:
        type: string
        example: "444"
      sequenceNumber:
        description: Applicable only for private-label accounts
        type: string
        example: "01"
      token:
        $ref: '#/definitions/ReferenceToken'

  Charge:
    description: Transaction charge details
    type: object
    properties:
      verbiage:
        type: string
      returnCheckFee:
        type: string
      returnCheckNote:
        type: string


  DeliveryService:
    description: Delivery service information
    type: object
    properties:
      deliveryMethod:
        description: Delivery method of address provided in the address section, NOT_AVAILABLE, DIRECT_DELIVERY, CUSTOMER_PICKUP, COMMERCIAL_SHIPPING, OTHER
        type: string
      indicator:
        type: boolean
      providerName:
        type: string
      providerId:
        type: string

  DynamicDescriptors:
    properties:
      merchantCategoryCode:
        type: string
        description: 'Merchant category code'
      merchantName:
        type: string
        description: 'Merchant name'
      merchantEmail:
        $ref: '#/definitions/Email'
      customerServiceNumber:
        $ref: '#/definitions/Phone'
      serviceEntitlementNumber:
        type: string
        description: 'Service entitlement number'
      merchantAddress:
        $ref: '#/definitions/Address'

  EBT:
    description: Electronic Benefits Transfer card information
    type: object
    properties:
      cardNumber:
        description: Primary account number, can only be sent when vaulting an account.  This field will NOT be present in responses.
        type: string
      nameOnCard:
        description: Name as printed on physical card or on virtual account
        type: string
      alias:
        description: Last four values of the cardNumber
        type: string
        readOnly: true
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      bin:
        description: BIN of EBT card
        type: string
        readOnly: true
      pin:
        description: PIN for EBT card
        type: string
      pinCaptureId:
        description: Session id used on client side SDK to capture the card pin
        type: string
      transactionId:
        description: The unique transaction ID
        type: string
      balance:
        $ref: '#/definitions/EBTBalance'
      metadata:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
      token:
        $ref: '#/definitions/ReferenceToken'

  EBTBalance:
    type: object
    properties:
      cashBalance:
        type: number
      cashCurrencyCode:
        $ref: '#/definitions/ISO-4217'
      snapBalance:
        type: number
      snapCurrencyCode:
        $ref: '#/definitions/ISO-4217'
    readOnly: true

  Email:
    description: Email address for the user.
    type: object
    properties:
      type:
        description: The "type" sub-attribute is used to provide a classification meaningful to the (human) user.  The user interface should encourage the use of basic values of "work", "home", and "other" and MAY allow additional type values to be used at the discretion of the service client.
        type: string
      value:
        description: The value SHOULD be specified according to RFC5321.
        type: string
      primary:
        description:
          Defines if this entry is to be used as the primary or default for the
          user.
        type: boolean
        default: false
    example:
      value: bjensen@example.com
      type: work
      primary: true

  ExpiryDate:
    description: Contains account expiration data and needs to either send the values in individual fields OR as a singleValue.
    type: object
    properties:
      month:
        type: string
        description: Month format 'MM'
        pattern: "[0-9]{2,2}"
        minLength: 2
        maxLength: 2
        example: "09"
      year:
        type: string
        description: Year format 'YY'
        pattern: "[0-9]{2,2}"
        minLength: 2
        maxLength: 2
        example: "20"
      singleValue:
        type: string
        description: Month and year together, 'MMYY' or 'MMYYYY'.  If the latter format, the string will be parsed and validated per the given format.  Any other format will be rejected.
        minLength: 4
        maxLength: 6

  ExternalCustomerId:
    title: External Customer ID
    description: External customer id.
    type: string

  FdCustomerId:
    title: FD Customer ID
    description: FD customer identifier tied to the vaulted accounts.
    type: string
    example: cuid-0987613457398475

  Fleet:
    description: Information on a Fleet account
    type: object
    properties:
      cardNumber:
        description: Primary account number, can only be sent when vaulting an account.  This field will NOT be present in responses.
        type: string
      nameOnCard:
        description: Name as printed on physical card or on virtual account
        type: string
      alias:
        description: Card alias
        type: string
        readOnly: true
      cardType:
        $ref: '#/definitions/FleetCardType'
      billingAddress:
        $ref: '#/definitions/Address'
      billingPhone:
        $ref: '#/definitions/Phone'
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      securityCode:
        type: string
      sequenceNumber:
        description: Sequence number of the card.
        type: string
      token:
        $ref: '#/definitions/ReferenceToken'

  FleetData:
    description: The Fleet Data Segment for all fleet card transaction requests.
    type: object
    properties:
      odometer:
        description: Identifies the vehicle’s odometer reading keyed in by the customer or clerk.
        type: string
        maxLength: 8
      vehicleNumber:
        description: Identifies the Vehicle Number.
        type: string
        maxLength: 10
      jobNumber:
        description: Identifies the Job Number.
        type: string
        maxLength: 10
      driverIdNumber:
        description: Identifies the unencrypted Driver Number or Identification Number.
        type: string
        maxLength: 10
      fleetEmployeeNumber:
        description: Identifies the Fleet Employee Number.
        type: string
        maxLength: 10
      licenseNumber:
        description: Identifies the License # of the fleet card user.
        type: string
        maxLength: 10
      jobId:
        description: Identifies the Job ID.
        type: string
        maxLength: 12
      departmentNumber:
        description: Identifies the Department #.
        type: string
        maxLength: 12
      customerData:
        description: Identifies the Customer Data.
        type: string
        maxLength: 12
      userId:
        description: Identifies the User ID.
        type: string
        maxLength: 12
      vehicleId:
        description: Identifies the Vehicle ID#.
        type: string
        maxLength: 8
      fleetTag:
        type: array
        items:
          $ref: '#/definitions/FleetTagType'

  FuelPurchaseInfo:
    description: Fuel purchase information.
    type: object
    required:
      - pumpNumber
    properties:
      pumpNumber:
        type: number
        description: Pump number from which fueling is requested.
      serviceLevelCode:
          $ref: '#/definitions/ServiceLevelCode'
      items:
        type: array
        items:
          $ref: '#/definitions/POSItem'
    example:
      pumpNumber: '17'
      serviceLevelCode: 'S'
      items:
        - POSCode: '432'
          itemDescription: Unleaded
          itemPrice: '2.03'
          unitOfMeasurement: gallonUS

  FundingSource:
    description: Holds information about funding source for the payment transaction. Can hold only one above the provided funding sources.
    type: object
    properties:
      saveToVault:
        description: Flag to indicate if the provided payment method should be vaulted to a secure repository for future use for the given customer.
        type: boolean
        default: false
        example: false
      type:
        $ref: '#/definitions/FundingSourceType'
      vaultedAccount:
        $ref: '#/definitions/VaultedAccount'
      credit:
        $ref: '#/definitions/Credit'
      prepaid:
        $ref: '#/definitions/Prepaid'
      fleet:
        $ref: '#/definitions/Fleet'
      applePay:
        $ref: '#/definitions/ApplePay'
      androidPay:
        $ref: '#/definitions/AndroidPay'
      samsungPay:
        $ref: '#/definitions/SamsungPay'
      paypal:
        $ref: '#/definitions/Paypal'
      token:
        $ref: '#/definitions/ReferenceToken'
      visaCheckout:
        $ref: '#/definitions/VisaCheckout'
      googlePay:
        $ref: '#/definitions/GooglePay'
      masterpass:
        $ref: '#/definitions/MasterPass'
      ach:
        $ref: '#/definitions/ACH'
      venmo:
        $ref: '#/definitions/Venmo'
      vipps:
        $ref: '#/definitions/Vipps'
      amazonPay:
        $ref: '#/definitions/AmazonPay'
      ideal:
        $ref: '#/definitions/Ideal'
      bancontact:
        $ref: '#/definitions/Bancontact'
      walmartPay:
        $ref : '#/definitions/WalmartPay'
      ebt:
        $ref: '#/definitions/EBT'

  GooglePay:
    description: Google Payment specific information
    type: object
    properties:
      version:
        description: Identifies encryption/signing scheme.
        type: string
        example: "EC_v1"
      developerEmail:
        type: string
      signature:
        description: Signature to verify Google initiated message.
        type: string
        example: "MIAGCSqGSIb......AAAA=="
      data:
        description: Data includes encryptedMessage, ephemeralPublicKey, tag.
        type: string
        example: "{\"encryptedMessage\":\"8nx...u003d\",\"ephemeralPublicKey\":\"BGH...u003d\",\"tag\":\"nvm...\\u003d\"}"
      dPanLast4:
        type: string
        example: "9876"
      bin:
        type: string
      eciIndicator:
        type: string
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      panType:
        type: string
      cardType:
        $ref: '#/definitions/CreditCardType'
        example: "VISA"
      token:
        $ref: '#/definitions/ReferenceToken'
      billingAddress:
        $ref: '#/definitions/Address'
      billingPhone:
        $ref: '#/definitions/Phone'

  Ideal:
    type: object
    properties:
      returnUrl:
        type: string
      deepLink:
        type: string

  ISO-4217:
    description: Holds currency information
    type: object
    properties:
      code:
        type: string
        default: "USD"
        example: "USD"
      number:
        type: integer
        default: 840
        example: 840
      digits:
        type: integer
        default: 2
        example: 2
      currency:
        type: string
        default: "US Dollar"
        example: "US Dollar"

  MasterPass:
     description: MasterPass information
     type: object
     properties:
       transactionId:
         description: Identifier corresponding to an account enrolled with MasterPass system.
         type: string
         example: "1234732704291071701"
       credit:
         $ref: '#/definitions/Credit'

  MultiSale:
    description: Multiple sale transaction details.
    type: object
    properties:
        parentTransactionId:
          description: Unique identifier of multi transaction.
          type: string
          readOnly: true
          example: "485-27834-285903824-095"
        merchantTransactionId:
          type: string
          description: Merchant transaction id
        createdTime:
          description: Multi sale creation date time value.
          type: string
          format: date-time
          readOnly: true
          example: "2017-03-21T08:15:30-05:00"
        parentExternalId:
          type: string
          description: External transaction id reference
        purchaseInfo:
          $ref: '#/definitions/PurchaseInfo'
        sales:
          type: array
          items:
            $ref: '#/definitions/Sale'

  MultiRefund:
    description: Multiple refund transaction details.
    type: object
    properties:
        parentTransactionId:
          description: Unique identifier of multi transaction.
          type: string
          readOnly: true
          example: "485-27834-285903824-095"
        merchantTransactionId:
          type: string
          description: Merchant transaction id
        createdTime:
          description: Multi refund creation date time value.
          type: string
          format: date-time
          readOnly: true
          example: "2017-03-21T08:15:30-05:00"
        parentExternalId:
          type: string
          description: External transaction id reference
        purchaseInfo:
          $ref: '#/definitions/PurchaseInfo'
        refunds:
          type: array
          items:
            $ref: '#/definitions/Refund'

  MultiVoid:
    description: Multiple void transaction details.
    type: object
    properties:
        parentTransactionId:
          description: Unique identifier of multi transaction.
          type: string
          readOnly: true
          example: "485-27834-285903824-095"
        merchantTransactionId:
          type: string
          description: Merchant transaction id
        createdTime:
          description: Multi void creation date time value.
          type: string
          format: date-time
          readOnly: true
          example: "2017-03-21T08:15:30-05:00"
        parentExternalId:
          type: string
          description: External transaction id reference
        purchaseInfo:
          $ref: '#/definitions/PurchaseInfo'
        voids:
          type: array
          items:
            $ref: '#/definitions/Void'

  MultiRefundVoid:
    description: Multiple void transaction details.
    type: object
    properties:
        parentTransactionId:
          description: Unique identifier of multi transaction.
          type: string
          readOnly: true
          example: "485-27834-285903824-095"
        merchantTransactionId:
          type: string
          description: Merchant transaction id
        createdTime:
          description: Multi void creation date time value.
          type: string
          format: date-time
          readOnly: true
          example: "2017-03-21T08:15:30-05:00"
        parentExternalId:
          type: string
          description: External transaction id reference
        purchaseInfo:
          $ref: '#/definitions/PurchaseInfo'
        refunds:
          type: array
          items:
            $ref: '#/definitions/Refund'

  NVP:
    title: Name and Value pair.
    type: object
    properties:
      name:
        type: string
      value:
        type: string
      valueAsList:
        type: array
        minItems: 0
        items:
          type: string

  Order:
    description: Information about the order details
    type: object
    required:
      - orderId
    properties:
      orderId:
        description: Client provided unique identifier for the order related to the requested authorization
        type: string
        example: "Order001"
      altOrderId:
        type: string
        description: Alternate order id
      orderType:
        type: string
        description: Type of the order
      shipmentIndicator:
        type: string
        description: Indicates order with Single or Multiple shipments
      emails:
        type: array
        items:
          $ref: '#/definitions/Email'
      addresses:
        type: array
        items:
          $ref: '#/definitions/Address'
      phoneNumbers:
        type: array
        items:
          $ref: '#/definitions/Phone'
      deliveryService:
        $ref: '#/definitions/DeliveryService'

  OfferStatus:
    description: Maintain the status of stackable promotions
    type: object
    properties:
      code:
        description: Indicates offer status code, NOT_ACTIVATED | ACTIVATED | REDEEMED | DECLINED | CANCELLED | FAILED
        type: string
      statusInfo:
        description: Details about what to display, images, messaging, etc.
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true

  Paypal:
    description: Information about a Paypal account.
    type: object
    properties:
      payerId:
        type: string
        description: Paypal generated Unique identfier for a Paypal account.
        example: "LPLWNMTBWMFAY"
      nonce:
        type: string
        description: Paypal generated nonce.
        example: "ab12-124C-ab12-124C-ab12-124C"
      token:
        $ref: '#/definitions/ReferenceToken'
      credit:
        $ref: '#/definitions/Credit'

  Phone:
    description: Phone number for the user.
    type: object
    properties:
      value:
        description: The value SHOULD be specified according to the format defined in RFC3966, e.g., 'tel:+1-201-555-0123'.
        type: string
      type:
        description: Often has typical values of "work","billing", "home", "mobile", "fax", "pager", and "other" and MAY allow more types to be defined by the service client.
        type: string
      extension:
        description: Defines the extension of the phone number.
        type: string
      primary:
        description: Defines if this entry is to be used as the primary or default for the user.
        type: boolean
        default: false
    example:
      value: 555-555-5555
      type: billing
      extension: "2145"

  POSItem:
    description: Structure to support passing POS sale info as part of the sale request.
    type: object
    properties:
      itemDescription:
        type: string
        example: Standard Wash (or) Unleaded Petrol
      itemPrice:
        type: number
        format: double
        example: 7.5
      unitOfMeasurement:
        type: string
        example: each
      unitsSold:
        type: number
        format: double
        example: 1
      totalItemSaleAmount:
        type: number
        format: double
        example: 7.5
      originalItemPrice:
        type: number
        format: double
        example: 7.50
      originalTotalSaleAmount:
        type: number
        format: double
        example: 7.50
      posCodeFormat:
        type: string
        example: plu
      posCode:
        type: string
        example: '102'
      posCodeModifier:
        type: string
        example: '1'
      productCode:
        type: string
        example: "102"
      tax:
        type: array
        items:
          $ref: '#/definitions/TaxDetails'
      type:
          $ref: '#/definitions/POSItemType'
      serviceLevelCode:
          $ref: '#/definitions/ServiceLevelCode'
      priceAdjustments:
        type: array
        items:
          $ref: '#/definitions/PriceAdjustment'
      washCodes:
        type: array
        items:
          $ref: '#/definitions/WashCode'
      priceTier:
        type: string

  POSItemType:
    description: Indicates the type of item
    type: string
    enum:
      - CARWASH
      - FUEL

  Prepaid:
    description: Prepaid (a.k.a. gift) account information
    type: object
    properties:
      cardNumber:
        description: Prepaid card number.
        type: string
        example: "6759649826438453"
      cardSubType:
        description: Merchant or brand specific information about the type of account.Issuer/group information.
        type: string
        example: "Merchant Brand"
      securityCode:
        description: Security code of prepaid card
        type: string
        example: "345"
      promotionCode:
        description: Promotion code for prepaid account activation.
        type: string
      alias:
        type: string
        readOnly: true
        example: "8453"
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      balance:
        $ref: '#/definitions/PrepaidBalance'
      token:
        $ref: '#/definitions/ReferenceToken'

  PrepaidBalance:
    description: Details of balance in the prepaid card.
    required:
      - currentBalance
      - currencyCode
    properties:
      currentBalance:
        description: The current balance of prepaid card in lower denomination of the currency.
        type: number
      beginBalance:
        description: The balance of prepaid card before a transaction in lower denomination of the currency.
        type: number
      currencyCode:
        $ref: '#/definitions/ISO-4217'
      currencyType:
        $ref: '#/definitions/CurrencyPairType'
    readOnly: true
    example:
      currentBalance: 1100
      beginBalance: 1000
      currencyCode: 840
      currencyType: "BASE"

  PriceAdjustment:
    description: Structure to support providing price adjustment for sale item.
    type: object
    properties:
      adjustmentId:
        type: string
        example: "discount prepay"
      productCode:
        type: string
        example: "941"
      programID:
        type: string
        example: "P66"
      reason:
        type: string
        example: "loyaltyOffer"
      amount:
        type: number
        format: double
        example: 0.1
      percentage:
        type: number
        format: float
        example: 10
      itemPrice:
        type: number
        format: double
        example: 7.50
      unitOfMeasurement:
        type: string
        example: "each"
      unitsSold:
        type: number
        format: double
        example: 1
      rebateLabel:
        type: string
        example: "HostDiscount"
      maxQuantity:
        type: number
        format: double
        example: 7.50
      offerStatus:
        $ref: '#/definitions/OfferStatus'

  PurchaseInfo:
    description: Information about Resources associated with the Transaction.  The common example is the car wash system.
    type: object
    properties:
      id:
        description: Unique identifier for the resource at the site. If a site has multiple car wash systems, this would be used to identify each separately.
        type: string
        example: car_wash_1
      name:
        description: Common name for the resource as specified at the site.
        type: string
        example: Automatic Car Wash
      order:
        $ref: '#/definitions/Order'
      items:
        description: Item(s) for sale at the resource.  Common examples are the car wash packages for sale.
        type: array
        items:
          $ref: '#/definitions/POSItem'

  Refund:
    description: Information related to a refund. Requested amount to refund in lower denomination. When not provided either the authorized amount in fdAuthorizationId or captured amount in fdCaptureId will be used.
    type: object
    properties:
      fdRefundId:
        description: Unique identifier provided for a refund.
        type: string
        readOnly: true
        example: 9a34144657d0aa6e0157d3808ed000f2
      fdTransactionId:
        description: Unique identifier for sale/capture.
        type: string
        example: 9a34144657d0aa6e0157d3808ed000f2
      externalId:
        type: string
        description: External transaction id reference
      merchantId:
        description: Merchant identifier where the transaction is being performed.
        type: string
        example: "M117008616001"
      altMerchantId:
        description: Alternate Merchant identifier where the transaction is being performed.
        type: string
        example: "23232"
      storeId:
        description: Store identifier where the transaction is being performed.
        type: string
        example: "123456"
      merchantTokenCode:
        description: Merchant token code used for token generation
        type: string
      merchantTerminalId:
        description: Merchant terminal identifier
        type: string
      merchantTransactionId:
        type: string
        description: Merchant transaction id
      status:
        $ref: '#/definitions/PaymentStatus'
      requestedAmount:
        $ref: '#/definitions/RequestedAmount'
      approvedAmount:
        $ref: '#/definitions/ApprovedAmount'
      currencyCode:
        $ref: '#/definitions/ISO-4217'
      amountSplitInfo:
        $ref: '#/definitions/AmountSplitInfo'
      fundingSource:
        $ref: '#/definitions/FundingSource'
      dynamicDescriptors:
        $ref: '#/definitions/DynamicDescriptors'
      purchaseInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/PurchaseInfo'
      postDate:
        description: Settlement date for the transaction. Format- MMDDYYYY
        type: string
        format: date
        example: "08232019"
      transactionDateTime:
        description: Date and time of the transaction.
        type: string
        readOnly: true
        format: date-time
        example: "2016-04-16T16:06:05Z"
      createdDateTime:
        description: Date and time of resource creation.
        type: string
        readOnly: true
        format: date-time
        example: "2016-04-16T16:06:05Z"
      lastUpdatedDateTime:
        description: Last updated Date and time of resource.
        type: string
        readOnly: true
        format: date-time
        example: "2016-04-16T16:06:05Z"
      hostExtraInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true

  RequestedAmount:
    title: Requested Amount
    description: Requested amount for the given request type [auth, capture, refund, etc] in lower denomination.
    type: number
    format: double
    minimum: 0
    exclusiveMinimum: true
    example: '500.00'

  ReferenceToken:
    description: Surrogate value used to represent a handle to an account without sharing PCI/PII data to look it up.
    type: object
    properties:
      tokenId:
        description: Actual token value
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      tokenProvider:
        description: Indicates what system is the originator of the token
        type: string
        example: "TRANS_ARMOR"
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      tokenType:
        $ref: '#/definitions/ReferenceTokenType'

  TaxDetails:
    description: Tax details.
    type: object
    properties:
      code:
        type: string
        example: TX01
      description:
        type: string
        example: Sales Tax
      amount:
        type: string
        example: '7.50'
      rate:
          type: string
          example: '13.5'

  ThreeDSecure:
    description: Details of ThreeDSecure transaction used to process the challege flow
    type: object
    properties:
      transactionId:
        description: Transaction id generated on the server
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      transactionStatus:
        type: string
        description: Transactions status of 3DS server
        example: "C"
      transactionStatusReason:
        type: string
        description: Reason for the transaction status
      challengeResponse:
        type: string
        example: "ewogIC"
      challengeIndicator:
        type: string
        example: "01 = No preference
                  02 = No challenge requested
                  03 = Challenge requested: 3DS Requestor Preference
                  04 = Challenge requested: Mandate"
      dsTransactionId:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      acsTransactionId:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      serverTransactionId:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      acsReferenceNumber:
        type: string
        example: "292bb6b886fc4446894f878b7e32bd5e"
      acsSignedContent:
        type: string
        example: "292bb6b88....6fc4446894f878b7e32bd5e"
      cardType:
        $ref: '#/definitions/CreditCardType'
      challengeRequest:
        type: string
        example: "ewogICAiYW.......MjJjMGVjIgp9"
      acsUrl:
        type: string
        example: "https://test.modirum.com/dstests/ACSEmu2"
      iframeContent:
        type: string
        example: "<iframe></iframe>"
      termUrl:
        type: string
        example: "https://mydomain/3dstest?transactionId=292bb6b886fc4446894f878b7e32bd5e"
      isThreeDSMethodCompleted:
        type: boolean
        example: true
      isAuthenticationCompleted:
        type: boolean
        example: true
      cavv:
        type: string
        description: Card authenticaion verificaiton value
      threeDSVersion:
        type: string
      expiryDateTime:
        description: 3DS challenge transaction expiry date time.
        type: string
        readOnly: true
        format: date-time
        example: "2020-01-01T16:06:05Z"
      eci:
        type: string
        description: Electronic Commerce Indicator value

  Sale:
    description: Information related to a SALE transaction - can only be ONE of the funding source among account, credit, prepaid, ApplePay.
    type: object
    required:
      - requestedAmount
    properties:
      fdSaleId:
        description: Unique Identifier provided by payment platform for a payment sale transaction.
        type: string
        readOnly: true
        example: "8a34144657d0aa6e0157d3808ed000f2"
      externalId:
        type: string
        description: External transaction id reference
      status:
        $ref: '#/definitions/PaymentStatus'
      transactionSubtype:
        description: Indicates subtype of a given transaction for EBT, ie EBTCASH or EBTSNAP
        type: string
      merchantId:
        description: Merchant identifier where the transaction is being performed.
        type: string
        example: "M117008616001"
      altMerchantId:
        description: Alternate Merchant identifier where the transaction is being performed.
        type: string
        example: "23232"
      storeId:
        description: Store identifier where the transaction is being performed.
        type: string
        example: "123456"
      merchantTokenCode:
        description: Merchant token code used for token generation
        type: string
      merchantTerminalId:
        description: Merchant terminal identifier
        type: string
      merchantTransactionId:
        type: string
        description: Merchant transaction id
      exemptionCode:
        description: Exemption code for 3DS transaction
        type: string
      transactionOrigin:
        $ref: '#/definitions/TransactionOrigin'
      requestedAmount:
        $ref: '#/definitions/RequestedAmount'
      approvedAmount:
        $ref: '#/definitions/ApprovedAmount'
      currencyCode:
        $ref: '#/definitions/ISO-4217'
      dynamicDescriptors:
        $ref: '#/definitions/DynamicDescriptors'
      postDate:
        description: Settlement date for the transaction. Format- MMDDYYYY
        type: string
        format: date
        example: "08232019"
      partialPaymentAllowed:
        description: Flag that indicates if partial transaction is allowed or not
        type: boolean
      fundingSource:
        $ref: '#/definitions/FundingSource'
      amountSplitInfo:
        $ref: '#/definitions/AmountSplitInfo'
      purchaseInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/PurchaseInfo'
      industrySpecificInfo:
          description: Industry specific details like petro for example.
          type: object
          properties:
            fuelPurchaseInfo:
              $ref: '#/definitions/FuelPurchaseInfo'
      qrCodeId:
        type: string
        readOnly: true
        description: Unique Identifier provided by payment platform for a given funding source.
      stacId:
        type: string
        description: Unique Identifier provided by payment platform for a given funding source.
      transactionDateTime:
        description: Date and time of the transaction.
        type: string
        readOnly: true
        format: date-time
        example: "2016-04-16T16:06:05Z"
      createdDateTime:
        description: Date and time of resource creation.
        type: string
        readOnly: true
        format: date-time
        example: "2016-04-16T16:06:05Z"
      lastUpdatedDateTime:
        description: Last updated Date and time of resource.
        type: string
        readOnly: true
        format: date-time
        example: "2016-04-16T16:06:05Z"
      hostExtraInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
      threeDSecureInfo:
          $ref: '#/definitions/ThreeDSecure'
      fleetData:
        $ref: '#/definitions/FleetData'
      errorInfo:
        $ref: '#/definitions/Error'

  SamsungPay:
    type: object
    properties:
      version:
        type: string
        example: "EC_v1"
      developerEmail:
        type: string
      data:
        type: string
        example: "3CguW5ecfTzO...03d"
      signature:
        type: string
        example: "MIAGCSqGSIb......AAAA=="
      decryptAlias:
        description: field of the public key certificate.
        type: string
        example: "oslo.com.xxx.Prod_mer"
      dPanLast4:
        type: string
        example: "9876"
      bin:
        type: string
      eciIndicator:
        type: string
      expiryDate:
        $ref: '#/definitions/ExpiryDate'
      panType:
        type: string
      cardType:
        $ref: '#/definitions/CreditCardType'
        example: "VISA"
      header:
        type: object
        properties:
          ephemeralPublicKey:
            type: string
            example: "MFkwEw...03d"
          publicKeyHash:
            type: string
            example: "+vbONw...IM="
      token:
        $ref: '#/definitions/ReferenceToken'
      billingAddress:
        $ref: '#/definitions/Address'
      billingPhone:
        $ref: '#/definitions/Phone'

  VaultedAccount:
    description: FD Account information
    type: object
    properties:
      fdAccountId:
        description: Unique identifier for a customer account vaulted with uCom
        type: string
      securityCode:
        description: Card Verificatiion value.
        type: string
      status:
        $ref: '#/definitions/AccountStatus'
      type:
        $ref: '#/definitions/AccountType'
    example:
      fdAccountId: "muid-3d4f2ac...c91014f2dc1"

  Venmo:
    description: Information about a Venmo account.
    type: object
    properties:
      nonce:
        type: string
        description: Venmo generated nonce.
        example: "ab12-124C-ab12-124C-ab12-124C"
      token:
        $ref: '#/definitions/ReferenceToken'

  Vipps:
    description: Information about a Vipps account. 'credit' is a read-only property.
    type: object
    required:
      - paymentId
    properties:
      paymentId:
        type: string
        description: The payment_id of Vipps. Used to correlate with the webhook of an open order.
        example: "ab12-124C-ab12-124C-ab12-124C"
      credit:
        $ref: '#/definitions/Credit'

  VisaCheckout:
    description: Visa Checkout information
    type: object
    properties:
      callId:
        description: Identifier corresponding to an account enrolled with Visa Checkout system.
        type: string
        example: "1234732704291071701"
      credit:
        $ref: '#/definitions/Credit'

  Void:
    description: Information related to a void.
    type: object
    properties:
      fdTransactionId:
        description: Unique identifier provided for sale/capture/refund.
        type: string
        example: 9a34144657d0aa6e0157d3808ed000f2
      externalId:
        type: string
        description: External transaction id reference
      merchantTransactionId:
        type: string
        description: Merchant transaction id
      approvedAmount:
        $ref: '#/definitions/ApprovedAmount'
      transactionDateTime:
        description: Date and time of the transaction.
        type: string
        readOnly: true
        format: date-time
        example: "2016-04-16T16:06:05Z"
      storeId:
        description: Store identifier where the transaction is being performed.
        type: string
        example: "123456"
      currencyCode:
        $ref: '#/definitions/ISO-4217'
      hostExtraInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
      dynamicDescriptors:
          $ref: '#/definitions/DynamicDescriptors'
      fundingSource:
        $ref: '#/definitions/FundingSource'
      purchaseInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/PurchaseInfo'

  WashCode:
    description: Purchased wash information.
    type: object
    properties:
      code:
        description: Wash code generated by the POS system.
        type: string
      description:
        description: Wash code description generated by the POS system.
        type: string
      expiration:
        description: Expiration date for the purchased wash code
        type: string
        format: date-time
      message:
        description: Field to carry message from site system for display to customer.
        type: string

  WalmartPay:
    type: object
    properties:
        credit:
          $ref: '#/definitions/Credit'
        token:
          $ref: '#/definitions/ReferenceToken'


#-------------------------------------
# Common Models
#-------------------------------------
  DeviceInfo:
    description: Request origin device details
    type: object
    required:
      - id
      - kind
    properties:
      id:
        description: Unique Id for the device. Value should not contain line feeds, carriage returns, tabs, leading or trailing spaces, or multiple spaces.
        type: string
        example: "537edec8-d33e-4ee8-93a7-b9f61876950c"
      kind:
        description: Possible values are mobile, wearable, automobile, embedded,desktop, other.
        type: string
        example: "mobile"
      details:
        title: deviceData
        description: Device data information from multiple providers.
        type: array
        minItems: 0
        uniqueItems: true
        items:
          description: Collection of device data
          type: object
          properties:
            provider:
              description: Identifies the provider of the data and is often used when decrypting data on the server.
              type: string
              example: "InAuth"
            dataCapture:
              description: Device data captured as a bundle and transmitted as an encrypted and/or specifically formated string.
              type: object
              properties:
                rawData:
                  description: Device capture - raw data blob
                  type: string
                  example: "aaaaaXREUVZGRlFY...aMV"
                dataEventId:
                  description: Event identifier used map state on the server.
                  type: string
                  example: "BB8E4E92...Fz1E063113"
                captureTime:
                  description: Device data capture time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
                  type: string
                  format: date-time
                  example: "2016-04-16T16:06:05Z"
            dataStatic:
              description: Device static details
              type: object
              properties:
                os:
                  description: Device OS name
                  type: string
                  example: "Android 5.1.1 Lollipop"
                osVersion:
                  description: Device OS version
                  type: string
                  example: "5.1.1 Lollipop"
                model:
                  description: Device model
                  type: string
                  example: "XT1540"
                type:
                  description: Device type
                  type: string
                  example: "Moto G"
            dataDynamic:
              description: Device location details
              type: object
              properties:
                latitude:
                  description: Device position - latitude at the time of the data event
                  type: string
                  example: "13.0827 N"
                longitude:
                  description: Device position - longitude at the time of the data event
                  type: string
                  example: "80.2707 E"
                ipAddress:
                  description: IP address
                  type: string
                  example: "172.27.37.221"
                captureTime:
                  description: Device data capture time in Internet Date/Time format - yyyy-MM-dd'T'HH:mm:ss'Z'
                  type: string
                  format: date-time
                  example: "2016-04-16T16:06:05Z"
            dataApplication:
              description: Mobile application specific data
              type: object
              properties:
                version:
                  description: Mobile application version.
                  type: string
                  format: sting
                  example: "1.0.0"
                name:
                  description: Mobile application name.
                  type: string
                  format: sting
                  example: "aplication-name"
                country:
                  description: Mobile application store country.
                  type: string
                  format: sting
                  example: "US"
      additionalInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true

  Error:
    description: Model for error messaging
    type: object
    properties:
      code:
        type: string
        description: Uniquely identifies an error condition. Client applications need to read and handle errors based on this.
      message:
        type: string
        description: A generic description of the error condition.
      category:
        type: string
        description: The resource associated with the error condition.
      developerInfo:
        type: object
        description: Information that needs to be understood by the client developers and should not be interpreted for application processing.
        properties:
          developerMessage:
            type: string
            description: An elaborative description of the error description.
          moreInfo:
            type: string
            description: Link to the error in Developer page.
          fieldError:
            description: Detailed information about message format errors.
            type: array
            items:
              properties:
                field:
                  description: The property or attribute associated with the error
                  type: string
                message:
                  description: Information specific to a property or attribute.
                  type: string
      hostExtraInfo:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/NVP'
        uniqueItems: true
      threeDSecureInfo:
          $ref: '#/definitions/ThreeDSecure'
      _links:
        type: array
        items:
          $ref: '#/definitions/Link'

  Link:
    description: Model to communicate linked resources.
    type: object
    required:
      - href
      - rel
    properties:
        href:
          description: URL to linked resource.
          type: string
          format: uri
          example:
            "https://api.example.com/v1/customers/cust-id-123456/accounts/acct-id-123456"
        rel:
          description: Defines the type of link relationship to current resource.
          type: string
          example:
            "linked.account"
        method:
          description: Defines the HTTP method for the given href.
          type: string
          default: "GET"
          example:
            "GET"
        id:
          description: Identifier to the resource.
          type: string
          example:
            "415e5cf6bfdb11e8a355529269fb1459"

#-------------------------------------
# ENUM Models
#-------------------------------------
  AccountStatus:
    description: Indicates the status of an account.
    type: string
    readOnly: true
    enum:
      - ACTIVE
      - INACTIVE
      - TERMINATED
      - ISSUER_TERMINATED
      - WALLET_TERMINATED
      - PENDING

  AccountType:
    description: Type of Account vaulted
    type: string
    readOnly: true
    enum:
      - CREDIT
      - PREPAID
      - ACH
      - LOYALTY
      - PAYPAL
      - MASTERPASS
      - VENMO
      - THREEDSECURE
      - VAULTED_ACCOUNT
      - FLEET

  AchEnrollmentStatus:
    description: Indicates ACH enrollment status
    type: string
    enum:
      - ACTIVE
      - PENDING
      - PENDING_LINKED_ACCOUNT

  AchEnrollmentSubStatus:
    description: Indicates ACH enrollment pending status
    type: string
    enum:
        - PENDING_BANK_VALIDATION
        - PENDING_PIN_VALIDATION
        - PENDING_EMAIL_VALIDATION
        - PENDING_PHONE_VALIDATION
        - PENDING_SOFT_BLOCK
        - PENDING_HARD_BLOCK

  CreditCardType:
    title: Credit Card Type
    description: Indicates the type of credit account association
    type: string
    enum:
      - AMEX
      - DISCOVER
      - MASTERCARD
      - PLCC
      - VISA
      - OTHER

  AchCardType:
    description: Indicates the type of ACH card association
    type: string
    enum:
      - CONNECTPAY

  AchAccountType:
    description: ACH account type
    type: string
    enum:
      - CHECKING
      - SAVINGS

  CurrencyPairType:
    description: Describes the type of currency where BASE represents the currency from Host and TRANSACTION represents the one requested.
    type: string
    enum:
      - BASE
      - TRANSACTION

  FleetCardType:
    description: Indicates the type of fleet account association
    type: string
    enum:
      - WEX

  FleetTagType:
    title: Indicates the possible values accepted in Fleet Data segment to Payment Processor.
    type: object
    properties:
      name:
        type: string
        enum:
          - value: DLS
            description: Driver License State/Province Abbreviation
          - value: DLN
            description: Driver License nameation
          - value: PON
            description: Work Order or P.O. Number.
          - value: INV
            description: Invoice Number.
          - value: TRP
            description: Trip Number.
          - value: UNT
            description: Unit Number.
          - value: TLH
            description: Trailer Hours or Refer Hours.
          - value: DOB
            description: Date of Birth.
          - value: ZIP
            description: ZIP or Postal Code.
          - value: END
            description: Entered Data.
          - value: MID
            description: Maintenance ID.
          - value: VIN
            description: VIN.
          - value: TRA
            description: Tractor Number.
          - value: HUB
            description: Hubometer.
          - value: TLR
            description: Trailer Number.
          - value: CBA
            description: Cashback Amount.
          - value: VHT
            description: Vehicle Tag.
        example: VHT
      value:
        type: string
        example: TXT 1200

  FundingSourceType:
    description: Describes the type of Funding source
    type: string
    enum:
      - VAULTED_ACCOUNT
      - CREDIT
      - PREPAID
      - APPLE_PAY
      - ANDRIOD_PAY
      - PAYPAL
      - TOKEN
      - NONCE
      - VCO
      - VENMO
      - AMAZON_PAY
      - VIPPS
      - FLEET
      - BANCONTACT
      - IDEAL
      - WALMART_PAY
      - EBT
      - ACH

  OperationType:
    type: string
    description: Indicates the status of the balance transaction of a given account.
      'SALEVOID' - Void a sale transaction
      'REFUNDVOID' - Void a refund transaction
    enum:
      - SALEVOID
      - REFUNDVOID


  PaymentStatus:
    title: Payment Status
    description: Indicates the status of an payment operation.
    type: string
    readOnly: true
    enum:
      - APPROVED
      - DECLINED
      - CANCELLED
      - CHALLENGED
      - PENDING
      - FAILED

  ReferenceTokenType:
    description: Indicates if the given loyalty program is still active or not.
    type: string
    enum:
      - FORMAT_PRESERVING_MULTI_USE
      - FORMAT_PRESERVING_SINGLE_USE
      - CLAIM_CHECK_NONCE
      - RANDOM_MULTI_USE
      - RANDOM_SINGLE_USE
      - CLAIM_CHECK_NONCE_WITH_PINCAPTURE

  ServiceLevelCode:
    description: Indicates service level code.
    type: string
    default: 'S'
    enum:
      - S
      - F
      - N
      - X

  TransactionOrigin:
    description: Transaction origin details.
    type: string
    enum:
      - ECOM
      - MOTO
      - POS

  UpdateActionType:
    description: Indicates the action intended as part of patch operation.
    type: string
    enum:
      - RESUME_TRANSACTION
      - CANCEL_TRANSACTION

#-------------------------------------
# Responses
#-------------------------------------
responses:
  AuthorizationCreated:
    description: Resource created
    headers:
      Location:
        type: string
        description: Location of newly created resource.
    schema:
      $ref: '#/definitions/Authorization'

  AuthorizationPartiallyCreated:
    description: Partially created
    schema:
      $ref: '#/definitions/Authorization'

  AuthorizationOK:
    description: OK
    schema:
      $ref: '#/definitions/Authorization'

  CaptureCreated:
    description: Resource created
    headers:
      Location:
        type: string
        description: Location of newly created resource.
    schema:
      $ref: '#/definitions/Capture'

  CaptureOK:
    description: OK
    schema:
      $ref: '#/definitions/Capture'

  ChargeOK:
    description: OK
    schema:
        type: array
        minItems: 0
        items:
          $ref: '#/definitions/Charge'

  RefundCreated:
    description: Resource created
    headers:
      Location:
        type: string
        description: Location of newly created resource.
    schema:
      $ref: '#/definitions/Refund'

  RefundOK:
    description: OK
    schema:
      $ref: '#/definitions/Refund'

  SaleCreated:
    description: Resource created
    headers:
      Location:
        type: string
        description: Location of newly created resource.
    schema:
      $ref: '#/definitions/Sale'

  SalePartiallyCreated:
    description: Partially created
    schema:
      $ref: '#/definitions/Sale'

  SaleOK:
    description: OK
    schema:
      $ref: '#/definitions/Sale'

  NoContent:
    description: The request succeeded but there's really nothing to show.

  BadRequest:
    description: Bad request
    schema:
      $ref: '#/definitions/Error'

  Unauthorized:
    description: Unauthorized

  NotFound:
    description: Not Found - The requested resource doesn't exist.
    schema:
      $ref: '#/definitions/Error'

  Conflict:
    description: Conflict - The requested operation conflicts with the current state of the identified resource.
    schema:
      $ref: '#/definitions/Error'

  ServerError:
    description: An unexpected server error occured.
    schema:
      $ref: '#/definitions/Error'

  TooEarly:
    description: Request is too early to process.
    schema:
      $ref: '#/definitions/Error'

#-------------------------------------
# Parameter Models
#-------------------------------------
parameters:
  AcceptLanguageParam:
    name: Accept-Language
    description: The Accept-Language header contains information about the language preference of a user. This HTTP header is useful to multilingual sites for deciding the best language to serve to the client. i.e en-US,fr-CA
    in: header
    type: string

  ApiKeyParam:
    name: Api-Key
    description: An API key is a string value passed by a client app to the API proxies. The key uniquely identifies the client app.
    in: header
    required: true
    type: string

  AuthorizationParam:
    name: Authorization
    description: Authorization information for the request. Format- `HMAC {hmacToken}`
    in: header
    required: true
    type: string

  ClientTokenParam:
    name: Client-Token
    description: Used to pass the original client OAuth token information given in a client-credentials flow.  This field is only used when the server is making the request and needs to link the transaction to a specific client.  Format- `Bearer {access_token}`
    in: header
    type: string

  ClientRequestIdParam:
    name: Client-Request-Id
    description: Contains a unique ID generated by the client that can be used for enforcing idempotency on POST actions. POSTs are inherently non-idempotent and submitting the exact same request multiple times would create duplicate resources. Note:- Omitting this header increases the risk of duplicate transactions, which for payments could cost the client issues like double-billing.
    in: header
    required: true
    type: string

  ClientRequestIdQueryParam:
    name: clientRequestId
    description: Contains a unique ID generated by the client that can be used for enforcing idempotency on POST actions.
    in: query
    type: string

  FdAuthorizationIdParam:
    name: fdAuthorizationId
    description: Unique identifier provided for the payment authorization
    in: path
    required: true
    type: string

  FdCaptureIdParam:
    name: fdCaptureId
    description: Unique identifier provided for a payment capture.
    in: path
    required: true
    type: string

  FdRefundIdParam:
    name: fdRefundId
    description: Unique identifier provided for a refund.
    in: path
    required: true
    type: string

  FdSaleIdParam:
    name: fdSaleId
    description: Unique identifier provided for a sale transaction.
    in: path
    required: true
    type: string

  FdParentTransactionIdParam:
    name: fdParentTransactionId
    description: Unique identifier provided for a parent transaction.
    in: path
    required: true
    type: string

  SubMerchantIdParam:
    name: Sub-Merchant-Id
    description: Sub Merchant Id contains information about the merchant identifier
    in: header
    type: string

  RetailerPartnerIdParam:
    name: Retailer-Partner-Id
    description: Retailer partner identification for marketplace
    in: header
    required: false
    type: string

  TimestampParam:
    name: Timestamp
    description: Epoch timestamp in the request initiating system
    in: header
    required: true
    type: string
